[
    {
        "id": "c7caf96e.a31f98",
        "type": "tab",
        "label": "AAS - Interaction Manager",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fd31082e.5487d8",
        "type": "tab",
        "label": "AAS - Component Manager",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7585249f.880c0c",
        "type": "tab",
        "label": "AAS - Environment",
        "disabled": false,
        "info": ""
    },
    {
        "id": "670d9c89.6d0424",
        "type": "tab",
        "label": "AAS - SouthboundInterface",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3db1c009.99d51",
        "type": "tab",
        "label": "AAS - NorthboundInterface",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d6ac686a8b33b0c0",
        "type": "tab",
        "label": "InternalDbTester",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2164c119.f88826",
        "type": "tab",
        "label": "AAS - UserInterface",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1543d308b342690a",
        "type": "tab",
        "label": "FlexDash stats",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "128ab3134a54f6b4",
        "type": "tab",
        "label": "DPDM/OperationalData",
        "disabled": false,
        "info": ""
    },
    {
        "id": "56cb7422.e3d28c",
        "type": "subflow",
        "name": "APILogger",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 413.88330078125,
                "y": 302.8833312988281,
                "wires": []
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "c4ef1733.bc36a8",
        "type": "subflow",
        "name": "OpenAAS_Manifest_RetrievingSubmodels",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 1100,
                "y": 220,
                "wires": []
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "786aaafb.231574",
        "type": "subflow",
        "name": "OpenAAS_Manifest_RetrievingPropertyById",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 1180,
                "y": 200,
                "wires": []
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "4b6a31ae.51e96",
        "type": "subflow",
        "name": "AddFlowFromFile",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 171.6666259765625,
                "y": 196.66673278808594,
                "wires": [
                    {
                        "id": "71e88904.3ead78"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1064.9996948242188,
                "y": 196.66673278808594,
                "wires": [
                    {
                        "id": "343c7ae9.c921c6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "5c6f7f1c.e800a",
        "type": "subflow",
        "name": "OpenAAS_Manifest_RetrievingHeaders",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 220,
                "y": 80,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 80,
                "wires": []
            }
        ]
    },
    {
        "id": "d8633d34.059f2",
        "type": "subflow",
        "name": "DataFlowsManagement",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 323.3333740234375,
                "y": 280,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 1283.333251953125,
                "y": 279.9999694824219,
                "wires": []
            }
        ]
    },
    {
        "id": "88bdbfa9.b5c8d",
        "type": "subflow",
        "name": "DeleteFlowsFromDirectory",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 222.3333740234375,
                "y": 375.46429443359375,
                "wires": [
                    {
                        "id": "d5cf465.083bfb8"
                    },
                    {
                        "id": "80d73952.05b468"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1658,
                "y": 326,
                "wires": [
                    {
                        "id": "69324f69.01e2f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "5ed335e57e3a0a3e",
        "type": "subflow",
        "name": "History",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "407f394e39d1235e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "407f394e39d1235e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "historyArrayName",
                "type": "str",
                "value": ""
            },
            {
                "name": "PathTo",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b1c764f174c1fb3e",
        "type": "subflow",
        "name": "JSON_Paths",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "74ba00144af1a34e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "74ba00144af1a34e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "PathTo",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "41b3a1439ccec2c1",
        "type": "subflow",
        "name": "Property handler",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 520,
                "wires": [
                    {
                        "id": "95ca925e8f8cf880"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1880,
                "y": 500,
                "wires": [
                    {
                        "id": "1274c1fecaa655a8",
                        "port": 0
                    },
                    {
                        "id": "78d0225e0b3a8fe6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1880,
                "y": 800,
                "wires": [
                    {
                        "id": "e62907e7bcbce663",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1880,
                "y": 860,
                "wires": [
                    {
                        "id": "f02316f50a016d5d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "PropertyName",
                "type": "str",
                "value": ""
            },
            {
                "name": "PropertyLink",
                "type": "str",
                "value": ""
            },
            {
                "name": "HistoryLength",
                "type": "num",
                "value": ""
            },
            {
                "name": "PropertyLinkEvt",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1740,
            "y": 700,
            "wires": [
                {
                    "id": "5f9633884f5e4cd4",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "10392549.d972b3",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "name": "AAS Configuration",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#777777"
        },
        "nodes": [
            "8af52e00.b2df48",
            "3a568a54.3c63e6",
            "b102af28.a0df28",
            "c0822d7.a2222d",
            "ed7feffb.fdc4d8",
            "d7080631.6bd928",
            "8c3f137a.f60d68",
            "ece6df22.01841",
            "fff82399.2f49b",
            "82289ad6.a600d8",
            "ad85b295.7069f"
        ],
        "x": 76,
        "y": 225,
        "w": 1902,
        "h": 242
    },
    {
        "id": "daa90db5.798ca",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "name": "Operation on Manifest",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "911146e5.f855a8",
            "235c6137.8eecfe",
            "369802aa.4bb65e",
            "7f25771a.9570b8",
            "c8694f03.dfd39",
            "87e27c61.d45d5",
            "d4cc7b36.ba12e8",
            "e3f319e7.11c788",
            "2591dc6f.beecf4",
            "42fa9309.ed70dc",
            "62354c3.8a2cab4",
            "dc737b31.78c9a8",
            "cbc42023.5d017",
            "acf520d7.dad7a",
            "c4626f7b.fb5ac",
            "c34ae37f.12318",
            "8ddc3a56.0b1778",
            "6c1542cb.673e8c",
            "697de89c.c97c98",
            "bbf9bf7d.66354",
            "bc9740dc.6a656",
            "37a4080e.40ed9",
            "c358a7e7.e264e",
            "4fd92a61.1a1cbc",
            "856c9918.42c4b8",
            "90d9b2.6335f65",
            "23e7fb8f.11fddc",
            "e2c6dfcd.e05b7",
            "2554c114.74adde",
            "bb4de309.e48c",
            "f63b07e4.457e2",
            "8165c6b8.c3519",
            "e34ed51c.060cd",
            "d0bce444.7eb068",
            "eb085e57.c9db48",
            "59776b4d.36b314",
            "437c7c89.d0b51c"
        ],
        "x": 75,
        "y": 599,
        "w": 1977,
        "h": 1888
    },
    {
        "id": "66d3f26a.c296b4",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "name": "",
        "style": {
            "label": true,
            "color": "#777777",
            "fill": "#e3f3d3"
        },
        "nodes": [
            "b06bbe8c.99281",
            "a3ec15bc.b3e59",
            "633578fc.26a7a",
            "184a6b3e.d382f5",
            "ec19d6a4.7505f8",
            "568d5f3.624242",
            "d5524b85.c3c27",
            "d42664b2.514808"
        ],
        "x": 74,
        "y": 2499,
        "w": 1951,
        "h": 282
    },
    {
        "id": "fd25b313.221798",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "c3859dd5.c946d",
            "fba64935.3c8e18",
            "3c448e09.9248f2",
            "48ef191e.d28c98",
            "e7a9e126.1cef",
            "ed77ca84.755278",
            "b4eb437c.b5efd",
            "e0886cb3.b2a44",
            "2dc97f2a.e1d8d8"
        ],
        "x": 74,
        "y": 2799,
        "w": 1912,
        "h": 202
    },
    {
        "id": "16640da3.5a20ca",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "name": "",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "23801d7a.c17572",
            "4768d29a.aacc4c",
            "17d166e7.5b6559",
            "ebf8a1.a3dd076",
            "f6f1e3c3.9ffa5",
            "98293416.fa8198",
            "43be3c31.fa03f4"
        ],
        "x": 74,
        "y": 3019,
        "w": 1932,
        "h": 182
    },
    {
        "id": "4b4e4270.d440bc",
        "type": "group",
        "z": "fd31082e.5487d8",
        "name": "To North",
        "style": {
            "fill": "#bfc7d7",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "c7097b80.b03428",
            "5c80f7ac.2fc2b8",
            "3e11fc1c.d74334",
            "1f1ce2c5.9cb5cd",
            "6c10cd375f817bbf",
            "7b48ced64946a8d2",
            "893f967b73205095",
            "5cea18b9856d1364",
            "e1994719bd7b4722",
            "4872c068f48e839b",
            "a9c22279a032d681"
        ],
        "x": 214,
        "y": 3819,
        "w": 2272,
        "h": 239
    },
    {
        "id": "d366c10f.cbf158",
        "type": "group",
        "z": "fd31082e.5487d8",
        "name": "To/From South",
        "style": {
            "fill": "#bfdbef",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "5ee56f7a.9622a",
            "be37d7a0.4489e",
            "c757ee5b.08a1f8",
            "d7f84005.ce11e8",
            "162cb66c.3b7292",
            "9f810b8b.7a1b8",
            "b88a92c6.fb547",
            "21eb2aa8ef422845",
            "555ce72ca0d7dfd4"
        ],
        "x": 214,
        "y": 3096,
        "w": 2962,
        "h": 542
    },
    {
        "id": "9eaca16.128cb6",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "33199ab4.21681e",
            "9a1f71ad.ecf3e8",
            "726ded99.bd5cac"
        ],
        "x": 94,
        "y": 2179,
        "w": 652,
        "h": 82
    },
    {
        "id": "1d9f40e2.66e59f",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2706d3c7.5d9a2c",
            "b0b325ea.8aff3",
            "649d6c1f.031b2c",
            "8adcfea2.e5f07",
            "c18d191f.026578",
            "7e763d50.949554",
            "2cf012d1.4a7f5e",
            "648a464.2a92838",
            "43780ceb.0f273c",
            "f19e8da.11a8c7",
            "5e2d4012.8c261",
            "3b691b47.1422f4",
            "e829d4f5.0e483",
            "5a1e731e.6fd0ec",
            "f3b7793f.d22a9",
            "d8a4f595.617738",
            "a8614b5f.c2fa5",
            "a218c1c9.bf3c",
            "a5d497d.a955b68",
            "8b178b4f.b48a5",
            "dbc07abd.87dac8",
            "b1d7bd45.436bf8",
            "40ba0174.feea08",
            "ed973683.3fdac8",
            "13eaa4a6.391393",
            "655852a0.36bea4",
            "7a918d3a.b1ea34",
            "aa9b9e00.d9a198",
            "eb868983.45c2e8",
            "57cc2b70.afb41c",
            "2fa38586.c0acea",
            "b36514b5.7418a8",
            "ad9570df.a95b4",
            "8de2ce5c.1783c8",
            "db56541d.47959",
            "45903dfe.700804",
            "dae4e81e.eb5528",
            "ac226da6.8565c8",
            "566bb148.1d86f",
            "f76cbbfe.4be85",
            "f5d81204558f97fa",
            "6b21701a6d975a70",
            "bdc6118ddbb26572",
            "806e01ba8dd4aa22",
            "28a6230f679f8eeb",
            "1c6490820fe81875",
            "458497c2b0847a8c",
            "5305a1509cc6a0af",
            "51104a28844e7b60",
            "a845f73417945e9c",
            "79df917343f2a583",
            "8ce453cf38aa321b",
            "e789de03fdef1f25",
            "728353118493118f",
            "e24de9d12258152e",
            "fd86db17b1d2abfe",
            "cb32083a9440c96a"
        ],
        "x": 214,
        "y": 99,
        "w": 3532,
        "h": 702
    },
    {
        "id": "cffb33fa.8a9ae",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b77c222a.ae9128",
            "dbf5d24c.fba6",
            "57455a67.915dcc",
            "a44bac1b.4c70e8",
            "bf3d8ae0.fc9768",
            "5eb9f32e.f40bd4",
            "84848923.c67118",
            "f0cbc0ca.f85c9",
            "df98a659a5b217dc",
            "22add3d70156e4b3",
            "078956014bccb540"
        ],
        "x": 2504,
        "y": 2679,
        "w": 1182,
        "h": 362
    },
    {
        "id": "e8501749a8186080",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7eee05596301f0da",
            "b2b5061ba0377cb6",
            "a0b744b3f2aea9de",
            "5485638f701ee6dc",
            "7ef6219d918e6a04",
            "f46810885afff978",
            "bc65f017b4594d14",
            "e8430b89e9bb2193",
            "1396d1745e9ba57a",
            "1ed1d9bbea0f39a6",
            "4196162116de31e7",
            "d4c64ee181326ecc",
            "34366fd7f2cd3a7c",
            "53da882cf73ecacf",
            "6334cc96da15dbbd",
            "c647c7b12b0da059",
            "fa54970b1878069d",
            "761a37d14e94c990",
            "49d6c2ce612aea11",
            "b6cd03e819bb5913",
            "949f7126b1446952",
            "bf7f78d769e874a4",
            "e14fe06ae748a0af"
        ],
        "x": 1794,
        "y": 1279,
        "w": 1952,
        "h": 442
    },
    {
        "id": "6aa9beecbf5f8d23",
        "type": "group",
        "z": "128ab3134a54f6b4",
        "name": "Set-up",
        "style": {
            "fill": "#e3f3d3",
            "fill-opacity": "0.4",
            "label": true
        },
        "nodes": [
            "5c3897124d1d95c0",
            "41d553602c61b3d5",
            "4be0576d4487e1ca",
            "1103084ec6579d65",
            "d57f305ac53e4d3f",
            "f8b354e5d9771dda",
            "41d1269376597f69"
        ],
        "x": 134,
        "y": 59,
        "w": 1232,
        "h": 182
    },
    {
        "id": "d9efc969.3ac7a8",
        "type": "group",
        "z": "2164c119.f88826",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5e23ea8f.c23584",
            "16f67a18.ffbace",
            "8fe4d1c6.195158",
            "45917e9f.5e03",
            "dcfcf5b5.f7fcd8",
            "dbaadebd.4b69d8",
            "dbd47ad9.b39ec",
            "1da87241.c01316",
            "f522e00e.b77828",
            "6b35b5c.246d3cc",
            "affa7940.488c58",
            "3ab155ea.bea442",
            "7ad04b13.fae71c",
            "cbd1bdb3.acb988",
            "72b0a98f.34845",
            "6b35d8f6.cc4f3",
            "b04e3281.48c738",
            "9c0fd00c.914d28",
            "3ff45b61.4dfabc",
            "6b223dd3.5f489c",
            "3f7de25e.9b0a5e",
            "7cadd42.3bb532c",
            "ec32158e.39755",
            "a6820e84.1e723",
            "32ae614d9501749d",
            "315ed0cad6dcaedc"
        ],
        "x": 54,
        "y": 2999,
        "w": 1572,
        "h": 682
    },
    {
        "id": "b3fca1f0.1e5ef8",
        "type": "group",
        "z": "128ab3134a54f6b4",
        "name": "Simulator",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "50caec1c.6ad584",
            "a526eb90.5eb89",
            "468a613a.658ae8",
            "66121d53.f7a264",
            "be9595d8.2df6a8",
            "2dd76a11.baee1e",
            "98dd4417.bb6a8",
            "5543cf66.c72ba8",
            "aa852a4a.3a9728",
            "3f2701d6.f73216",
            "f23c2e8f.c112f",
            "9d3857b4.a3a72",
            "a2d0442e.c3b158",
            "67e92151.ed84b8",
            "deaca8d7.b5846",
            "4f700a47.b1503c",
            "e3a6732e.ca9c5",
            "b84f2e00.9385c8",
            "6d18c370.e424fc",
            "b6935d1d.70c508",
            "9233e59a.9662b",
            "6b5bce5c.8f7818",
            "151fde71.ad247a",
            "ce77388f.a7693",
            "5fe0925e.2b993c",
            "48dd5be3.c049ac",
            "18abfa8d.7a70a5",
            "cc4c0f0b.0473a8",
            "fbec0d31.b2b898",
            "95c62ca4.9097f8"
        ],
        "x": 14,
        "y": 2299,
        "w": 2872,
        "h": 516
    },
    {
        "id": "37a4080e.40ed9",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "cac1db39.b04078",
            "29145f48.4ba7c",
            "912eda47.361a98",
            "9084f719.6afdf8",
            "6c35bee3.61145",
            "c1668a7b.ee14f8",
            "2520a136.899d6e",
            "ca6f3523.f2b588",
            "43541659.0da4d8",
            "3caf47b6.93e548",
            "f199b71c.d41848",
            "9f5f6222.cc83a",
            "d934b20f.fa76",
            "5651a9f8.d2bc98",
            "1dbfef26.97a6f1",
            "bd2ae1ed.cbdaa",
            "890fd853.abfe18",
            "a4b5bf21.7c839",
            "f44a7db3.ebcde",
            "aa5f01f5.97774",
            "2fa79041.17ff8",
            "9f7abd5a.96875",
            "b859d557.e838d8",
            "54372dd7.ec8b74",
            "cb3ea6e9.72b438",
            "87522ab0.ac1188",
            "8c4835ae.20d5b8",
            "345e490a.d99a46",
            "a0cacb3.3af7d38",
            "4be17c9e.1e2c5c",
            "c0e7eca.1f9ac9",
            "727480a5.4236c",
            "a4eb92d0.81718",
            "228c3050.5c01b8",
            "4599d634.2aa528",
            "bb1348ef.5dad58",
            "d05b53b9a69cc83a"
        ],
        "x": 101,
        "y": 1176,
        "w": 1925,
        "h": 708
    },
    {
        "id": "c358a7e7.e264e",
        "type": "group",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "5fa33903.676088",
            "bac747df.172a08",
            "9a24dda.82e0e2",
            "dd104edd.0d2a8",
            "9719e687.c005e8",
            "8b05bd82.8d5c3",
            "ee0d57e4.33f838",
            "579a7665.cdc2f8",
            "a33c8835.b4ae48",
            "f6804404.570008",
            "a5e43779.650a98",
            "e0482beb.0de658",
            "6f284455.99cc0c",
            "f2fbc8fb.44c608",
            "2038bf7c.b6c14",
            "8a1eeeb2.31c1c",
            "f42c942d.6d6448",
            "4a5f46fc.ea7c08",
            "6e7f5025.a4315",
            "bc2fff91.b20fd",
            "53f11e8b.9b099",
            "9cae29d0.c4e968",
            "1330b0dc5cc6b35a",
            "d10aceb3b8173082",
            "0bc19d258678bba4",
            "22bb4d132d2d6bd1",
            "caf9273bf9a8afc4",
            "01639af71f83bc56",
            "1dad423e9ce11cac"
        ],
        "x": 111,
        "y": 1909,
        "w": 1902,
        "h": 552
    },
    {
        "id": "bf8d1775bedc9126",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2180,
        "y": 1280,
        "wires": [
            [
                "0cf42e9cc5365c9d"
            ]
        ]
    },
    {
        "id": "4f66f53de68a468a",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2200,
        "y": 1540,
        "wires": [
            [
                "32e4c48636bc81e8"
            ]
        ]
    },
    {
        "id": "d2fa44933ad7f7bc",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2180,
        "y": 1760,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "273b7e8259322a05",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2280,
        "y": 1800,
        "wires": [
            [
                "ce3d1cd7dad67519"
            ]
        ]
    },
    {
        "id": "32e4c48636bc81e8",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2260,
        "y": 1580,
        "wires": [
            [
                "e43904b134cd7e13"
            ]
        ]
    },
    {
        "id": "0cf42e9cc5365c9d",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2240,
        "y": 1340,
        "wires": [
            [
                "a9f85b8570718f9c"
            ]
        ]
    },
    {
        "id": "bb464dc962e986c0",
        "type": "junction",
        "z": "670d9c89.6d0424",
        "x": 400,
        "y": 620,
        "wires": [
            [
                "66816677.7a4348",
                "4380234d202dd256",
                "36f799fe398b26b2"
            ]
        ]
    },
    {
        "id": "e35d4cb1f2b5081a",
        "type": "junction",
        "z": "670d9c89.6d0424",
        "x": 400,
        "y": 860,
        "wires": [
            [
                "8ba74a55.e37468",
                "fbd472e7.d10f48",
                "a81af3fe552c97a0"
            ]
        ]
    },
    {
        "id": "201be4c08d5d19e0",
        "type": "junction",
        "z": "670d9c89.6d0424",
        "x": 420,
        "y": 980,
        "wires": [
            [
                "eeab441ae2b4c1e1",
                "05f103af299b62e2"
            ]
        ]
    },
    {
        "id": "de00f046.a69e6",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "AASGreen",
                "default": "#4B7930",
                "baseColor": "#14524e",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#14524e",
                    "value": "#14524e",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#14524e",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#f0f0f0",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#14524e",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "NOVAsset Administration Shell",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 5,
                "gy": 5,
                "cx": 5,
                "cy": 5,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "7511afda.577af",
        "type": "ui_tab",
        "name": "Overview",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cb7ccff3.2c214",
        "type": "ui_tab",
        "name": "Logs",
        "icon": "view_list",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "28ba0356.ef188c",
        "type": "ui_group",
        "name": "Commands",
        "tab": "e61c2c82.e7e9f",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8fc17f5a.38023",
        "type": "ui_group",
        "name": "Headers",
        "tab": "e61c2c82.e7e9f",
        "order": 1,
        "disp": true,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e61c2c82.e7e9f",
        "type": "ui_tab",
        "name": "Environment",
        "icon": "format_list_bulleted",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c68d835e.db3b2",
        "type": "ui_group",
        "name": "Body",
        "tab": "e61c2c82.e7e9f",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c56f01cc.380dd",
        "type": "ui_group",
        "name": "AAS Concept Descriptions",
        "tab": "31cac02.f941f4",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "31cac02.f941f4",
        "type": "ui_tab",
        "name": "Concept Descriptions",
        "icon": "more",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b9ac7006.de90a",
        "type": "ui_group",
        "name": "Counters",
        "tab": "7511afda.577af",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "7a30c02.5d2894",
        "type": "ui_group",
        "name": "Information",
        "tab": "7511afda.577af",
        "order": 2,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "b9aed87e.bdd0c8",
        "type": "ui_group",
        "name": "Commands",
        "tab": "cb7ccff3.2c214",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": false
    },
    {
        "id": "d61f3cdd.7e8e5",
        "type": "swagger-doc",
        "summary": "Test the status of the AAS",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "test/html",
        "parameters": [],
        "responses": {
            "200": {
                "description": "OK"
            },
            "503": {
                "description": "Asset Administration Shell not configured"
            }
        },
        "deprecated": false
    },
    {
        "id": "e6bde5fd.0d7858",
        "type": "swagger-doc",
        "summary": "Retrieve the current Manifest document",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "Manifest aml document",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "103c6242.2d09ae",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS identificators (header part of the Manifest)",
        "description": "AAS headers",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "aml Manifest headers response",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "9faeb6d2.bee598",
        "type": "swagger-doc",
        "summary": "Retrieve the list of the AAS submodels (Body part of the Manifest)",
        "description": "AAS submodels",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "List the submodels in the Manifest"
            }
        },
        "deprecated": false
    },
    {
        "id": "75f5f3f5.58cb1c",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS submodel by Id",
        "description": "AAS submodel by Id",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "description": "submodel identificator",
                "required": true,
                "type": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "xml specific submodel"
            },
            "404": {
                "description": "Submodel with id: {id} not found"
            }
        },
        "deprecated": false
    },
    {
        "id": "63d120af.ce7f5",
        "type": "ui_group",
        "name": "Logs",
        "tab": "cb7ccff3.2c214",
        "order": 1,
        "disp": true,
        "width": "34",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a67da331.7afbf8",
        "type": "swagger-doc",
        "summary": "Retrieve the current Manifest document",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "Manifest aml document",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "6fe2f15a.b44e88",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS identificators (header part of the Manifest)",
        "description": "AAS headers",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "aml Manifest headers response",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "b89f33af.44f05",
        "type": "swagger-doc",
        "summary": "Retrieve the list of the AAS submodels (Body part of the Manifest)",
        "description": "AAS submodels",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "List the submodels in the Manifest"
            }
        },
        "deprecated": false
    },
    {
        "id": "d1259efc.6308f8",
        "type": "ui_tab",
        "name": "Subscriptions",
        "icon": "link",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f57f5dd7.e298c",
        "type": "ui_group",
        "name": "Actual Subscribed Elements",
        "tab": "d1259efc.6308f8",
        "order": 1,
        "disp": true,
        "width": "34",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a1ac21b4.e86f9",
        "type": "ui_tab",
        "name": "Dash",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "175d54ea.788a73",
        "type": "ui_group",
        "name": "Dashboard SBI",
        "tab": "a1ac21b4.e86f9",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "77c7337d.b33f54",
        "type": "ui_group",
        "name": "Asset",
        "tab": "7511afda.577af",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "16ffbcf4.6cfa43",
        "type": "ui_group",
        "name": "Account Logs",
        "tab": "cb7ccff3.2c214",
        "order": 2,
        "disp": true,
        "width": "34",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bebd1a76.551ec8",
        "type": "node-red-contrib-httpauthfile",
        "name": "",
        "authType": "Basic",
        "realm": "myRealm",
        "filePath": "/app/.node-red/httpauth/httpauthfile.txt",
        "hashed": false
    },
    {
        "id": "e70d9188.7d95e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "$(BROKER_SERVICE_HOST)",
        "port": "$(BROKER_SERVICE_PORT)",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "6a4d510d.5de65",
        "type": "ui_group",
        "name": "ReportDownload",
        "tab": "56715436.c2591c",
        "order": 2,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "56715436.c2591c",
        "type": "ui_tab",
        "name": "Reporting",
        "icon": "assignment",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7dcd4079.256cf",
        "type": "ui_group",
        "name": "form",
        "tab": "56715436.c2591c",
        "order": 1,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "50760f2b4eafd99b",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "4285443c9ec1065f",
        "type": "ui_tab",
        "name": "Documents",
        "icon": "folder",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dc6a962d74630b25",
        "type": "ui_group",
        "name": "Documents",
        "tab": "4285443c9ec1065f",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "747e4668e069e06a",
        "type": "ui_group",
        "name": "Commands",
        "tab": "4285443c9ec1065f",
        "order": 2,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9e53ceb7c065e802",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "f1192e81b068366b",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "a4706f79574c7b6e",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "6b5b20832e62c73e",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "9d66e0f86e14f46d",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "e8f5aea52ab49500",
        "type": "flexdash dashboard",
        "port": "80",
        "ioOpts": "{}",
        "path": "/flexdash",
        "redServer": true,
        "saveConfig": true,
        "allOrigins": true,
        "name": "FlexDash",
        "fd_children": ",ace5f0e8a8666233"
    },
    {
        "id": "268989bc4b3b4aed",
        "type": "flexdash container",
        "name": "Southbound Stats",
        "title": "Southbound Stats",
        "kind": "StdGrid",
        "fd_children": ",5c30c48e1a2467ea,f510d056f722a72f",
        "tab": "ace5f0e8a8666233",
        "min_cols": "1",
        "max_cols": "20",
        "parent": "",
        "solid": false,
        "cols": "1",
        "rows": "1"
    },
    {
        "id": "ace5f0e8a8666233",
        "type": "flexdash tab",
        "name": "stats",
        "icon": "mdi-list-status",
        "title": "",
        "fd_children": ",ef647bf71bb867a7,268989bc4b3b4aed,8d5a1fac7723db1f,3ecc3bf90d60cd53",
        "fd": "e8f5aea52ab49500"
    },
    {
        "id": "8d5a1fac7723db1f",
        "type": "flexdash container",
        "name": "Northbound Stats",
        "title": "Northbound Stats",
        "kind": "StdGrid",
        "fd_children": ",cdadfa37404a50cd,34d16fd5e694be53,52e1531e0d56bb1a",
        "tab": "ace5f0e8a8666233",
        "min_cols": 1,
        "max_cols": 20,
        "unicast": "ignore",
        "parent": "",
        "solid": false,
        "cols": 1,
        "rows": 1
    },
    {
        "id": "3ecc3bf90d60cd53",
        "type": "flexdash container",
        "name": "Active Subscriptions",
        "title": "Active Subscriptions",
        "kind": "StdGrid",
        "fd_children": ",43c94c0e40120042",
        "tab": "ace5f0e8a8666233",
        "min_cols": 1,
        "max_cols": 20,
        "unicast": "ignore",
        "parent": "",
        "solid": false,
        "cols": 1,
        "rows": 1
    },
    {
        "id": "ef647bf71bb867a7",
        "type": "flexdash container",
        "name": "Overall Status",
        "title": "Overall Status",
        "kind": "StdGrid",
        "fd_children": ",97e34cb72c2f36bd,b7b1a215ed15c556,903334f637326ef0",
        "tab": "ace5f0e8a8666233",
        "min_cols": 1,
        "max_cols": 20,
        "unicast": "ignore",
        "parent": "",
        "solid": false,
        "cols": 1,
        "rows": 1
    },
    {
        "id": "d56e5f93.f422c",
        "type": "logger",
        "z": "56cb7422.e3d28c",
        "name": "",
        "filename": "logs.log",
        "maxsize": 1,
        "maxfiles": 10,
        "complete": "true",
        "console": false,
        "file": true,
        "debug": false,
        "zip": false,
        "logtype": "info",
        "x": 1043.6332397460938,
        "y": 298.88336181640625,
        "wires": []
    },
    {
        "id": "dca65b7f.b00ba8",
        "type": "unsafe-function",
        "z": "56cb7422.e3d28c",
        "name": "createLogEntry",
        "func": "//var element = JSON.stringify(msg.payload);\nvar msg1 = {};\nvar outmsg = {};\n//msg1.payload = element;\nmsg1.requestedURL = msg.req.url;\nmsg1.headers = {};\nmsg1.headers[\"user-agent\"] = msg.req.headers[\"user-agent\"];\nmsg1.headers[\"authorization\"] = msg.req.headers[\"authorization\"];\nmsg1.headers[\"content-type\"] = msg.req.headers[\"content-type\"];\nmsg1.headers[\"host\"] = msg.req.headers[\"host\"];\nmsg1.startTime = msg.startTime;\nif(typeof msg.req.client._peername !== 'undefined'){\n    msg1.client = msg.req.client._peername.address;\n} else{\n    msg1.client = \"internal\";\n} \n\nmsg1.endTime = Date.now();\noutmsg.payload = JSON.stringify(msg1);\nreturn outmsg; // msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 573.88330078125,
        "y": 302.8833312988281,
        "wires": [
            [
                "8713151e.2f1728"
            ]
        ]
    },
    {
        "id": "8713151e.2f1728",
        "type": "unsafe-function",
        "z": "56cb7422.e3d28c",
        "name": "checkLogging",
        "func": "//var element = JSON.stringify(msg.payload);\nlet node_aas_log = process.env.NODE_AAS_RUNNNING_UNDER_PM2;\nif(typeof node_aas_log == \"undefined\"){\n    return [msg, null];\n} else {\n    return [null, msg];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 808.6041870117188,
        "y": 304.85418701171875,
        "wires": [
            [
                "d56e5f93.f422c"
            ],
            [
                "6c23162c.b90798",
                "fd22ab4d.326ef8"
            ]
        ]
    },
    {
        "id": "fd22ab4d.326ef8",
        "type": "logger",
        "z": "56cb7422.e3d28c",
        "name": "",
        "filename": "logs.log",
        "maxsize": 1,
        "maxfiles": 10,
        "complete": "true",
        "console": true,
        "file": false,
        "debug": false,
        "zip": false,
        "logtype": "info",
        "x": 1044.7666015625,
        "y": 351.76666259765625,
        "wires": []
    },
    {
        "id": "6c23162c.b90798",
        "type": "debug",
        "z": "56cb7422.e3d28c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1075.5,
        "y": 398.5,
        "wires": []
    },
    {
        "id": "264fc7aa.b065d8",
        "type": "file in",
        "z": "c4ef1733.bc36a8",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "852a1c1c.2613f"
            ]
        ]
    },
    {
        "id": "852a1c1c.2613f",
        "type": "json",
        "z": "c4ef1733.bc36a8",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 510,
        "y": 80,
        "wires": [
            [
                "15454eba.50d351"
            ]
        ]
    },
    {
        "id": "a3f88401.9623b8",
        "type": "json",
        "z": "c4ef1733.bc36a8",
        "name": "",
        "property": "jsonataResult",
        "action": "str",
        "pretty": true,
        "x": 270,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "39839c3f.68ab24",
        "type": "jsonata",
        "z": "c4ef1733.bc36a8",
        "name": "jsonata",
        "property": "payload",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "a3f88401.9623b8"
            ]
        ]
    },
    {
        "id": "15454eba.50d351",
        "type": "unsafe-function",
        "z": "c4ef1733.bc36a8",
        "name": "JsonataQuery",
        "func": "msg.jsonata = \"Body.SubModels[\\\"PUBLIC\\\" in PropertyValueStatementContainers.statements.Visibilty]\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 80,
        "wires": [
            [
                "39839c3f.68ab24"
            ]
        ]
    },
    {
        "id": "f7527cda.5b012",
        "type": "file in",
        "z": "786aaafb.231574",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 450,
        "y": 40,
        "wires": [
            [
                "bea41ae1.2c9688"
            ]
        ]
    },
    {
        "id": "bea41ae1.2c9688",
        "type": "json",
        "z": "786aaafb.231574",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 650,
        "y": 40,
        "wires": [
            [
                "9ee0526a.63c73"
            ]
        ]
    },
    {
        "id": "9ee0526a.63c73",
        "type": "unsafe-function",
        "z": "786aaafb.231574",
        "name": "JsonataQuery",
        "func": "msg.jsonata = \"Body.SubModels[(\\\"http://acplt.org/models/PhysicalConnection\\\" in ModelID.IDSpec)].PropertyValueStatementContainers.statements[$substringAfter(\" + \"\\\"\" + msg.req.params.id + \"\\\"\" + \", \\\"models/\\\") in $substringAfter(PropertyID.IDSpec, \\\"http://acplt.org/models/PhysicalConnection/\\\")]\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 40,
        "wires": [
            [
                "38bec566.fe79ba"
            ]
        ]
    },
    {
        "id": "38bec566.fe79ba",
        "type": "jsonata",
        "z": "786aaafb.231574",
        "name": "jsonata",
        "property": "payload",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 1140,
        "y": 40,
        "wires": [
            [
                "8a8a185a.1f2ec8"
            ]
        ]
    },
    {
        "id": "8a8a185a.1f2ec8",
        "type": "unsafe-function",
        "z": "786aaafb.231574",
        "name": "",
        "func": "msg.payload = msg.jsonataResult;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "c19ac6e7.9aeaf8",
        "type": "file in",
        "z": "4b6a31ae.51e96",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 574.9998168945312,
        "y": 196.6666717529297,
        "wires": [
            [
                "31aa7cf6.436564"
            ]
        ]
    },
    {
        "id": "31aa7cf6.436564",
        "type": "addflow",
        "z": "4b6a31ae.51e96",
        "name": "",
        "x": 738.3333129882812,
        "y": 196.6666717529297,
        "wires": [
            [
                "343c7ae9.c921c6"
            ]
        ]
    },
    {
        "id": "71e88904.3ead78",
        "type": "change",
        "z": "4b6a31ae.51e96",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 374.99993896484375,
        "y": 196.6666717529297,
        "wires": [
            [
                "c19ac6e7.9aeaf8"
            ]
        ]
    },
    {
        "id": "343c7ae9.c921c6",
        "type": "merge",
        "z": "4b6a31ae.51e96",
        "name": "",
        "timeout": "1",
        "x": 925,
        "y": 198,
        "wires": [
            []
        ]
    },
    {
        "id": "fb59797d.1ff768",
        "type": "unsafe-function",
        "z": "d8633d34.059f2",
        "name": "AML_Translation",
        "func": "msg.actionName = msg.payload._Attribs.ID;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 777.1428833007812,
        "y": 279.047607421875,
        "wires": [
            []
        ]
    },
    {
        "id": "509b9a91.e6f574",
        "type": "delflow",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "enabled": true,
        "x": 1120,
        "y": 220,
        "wires": [
            [
                "7c295142.669c6"
            ]
        ]
    },
    {
        "id": "d5cf465.083bfb8",
        "type": "unsafe-function",
        "z": "88bdbfa9.b5c8d",
        "name": "ListLoadedDrivers",
        "func": "var driversIds = context.global.get('Drivers');\nvar outputMsgs = [];\nfor(var element in driversIds){\n    outputMsgs.push({id:driversIds[element]});\n}\nif(outputMsgs.length > 0){\n    return [outputMsgs, null];   \n} else {\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 480.3333740234375,
        "y": 303.46429443359375,
        "wires": [
            [
                "d4155fc6.2b467"
            ],
            [
                "412627f1.5db028"
            ]
        ]
    },
    {
        "id": "d05b5f1b.67e2b",
        "type": "config",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "properties": [
            {
                "p": "Drivers",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            }
        ],
        "active": false,
        "x": 1710,
        "y": 140,
        "wires": []
    },
    {
        "id": "69324f69.01e2f",
        "type": "wait-paths",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "paths": "[\"path_2\",\"path_1\"]",
        "timeout": 15000,
        "finalTimeout": 60000,
        "x": 1525,
        "y": 326,
        "wires": [
            []
        ]
    },
    {
        "id": "412627f1.5db028",
        "type": "change",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_1\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "pathsCorrelationId",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1256,
        "y": 318,
        "wires": [
            [
                "69324f69.01e2f"
            ]
        ]
    },
    {
        "id": "80d73952.05b468",
        "type": "change",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_2\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "pathsCorrelationId",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1254,
        "y": 380,
        "wires": [
            [
                "69324f69.01e2f"
            ]
        ]
    },
    {
        "id": "22568f10.a8c3f",
        "type": "unsafe-function",
        "z": "88bdbfa9.b5c8d",
        "name": "checkEverythingDeleted",
        "func": "var driversIds = context.global.get('Drivers');\nif(driversIds.length == msg.count){\n    return msg;\n}\nelse{\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1475.4521484375,
        "y": 150.4381103515625,
        "wires": [
            [
                "d05b5f1b.67e2b",
                "412627f1.5db028"
            ]
        ]
    },
    {
        "id": "d4155fc6.2b467",
        "type": "getflows",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "x": 660,
        "y": 140,
        "wires": [
            [
                "330fdcf8.4bd194"
            ]
        ]
    },
    {
        "id": "330fdcf8.4bd194",
        "type": "switch",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 140,
        "wires": [
            [
                "7c295142.669c6"
            ],
            [
                "91a7026.b9795"
            ]
        ]
    },
    {
        "id": "91a7026.b9795",
        "type": "unsafe-function",
        "z": "88bdbfa9.b5c8d",
        "name": "getFlowId",
        "func": "var outMsg = {};\noutMsg.flowId = msg.payload.id;\nreturn outMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 220,
        "wires": [
            [
                "509b9a91.e6f574"
            ]
        ]
    },
    {
        "id": "7c295142.669c6",
        "type": "counter",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": null,
        "upper": null,
        "mode": "increment",
        "outputs": "1",
        "x": 1260,
        "y": 140,
        "wires": [
            [
                "22568f10.a8c3f"
            ]
        ]
    },
    {
        "id": "407f394e39d1235e",
        "type": "function",
        "z": "5ed335e57e3a0a3e",
        "name": "History",
        "func": "var extract = function (point, keyIndex, keysArray) {\n    if (keyIndex < keysArray.length) {\n        let element = keysArray[keyIndex];\n        if (typeof point[element] !== 'object') {\n            let simpleValue = {};\n            simpleValue[element] = point[element];\n            return simpleValue\n        } else {\n            keyIndex = keyIndex + 1;\n            return extract(point[element], keyIndex, keysArray);\n\n        }\n\n    }\n\n}\n\nlet keys = env.get(\"PathTo\");\nlet keysArray = keys.split(\".\");\n\n\n// Get request timestamps\nvar start = msg.payload.start;\nvar end = (msg.payload.end - start)/1000;\n//var end = msg.payload.end;\nvar history = context.flow.get(\"$parent.\" + env.get(\"historyArrayName\"));\nif(end > history.length){\n    start = history.length;\n} else {\n    start = history.length - end;\n}\n\nvar data = [];\nfor (var ts = start; ts < history.length; ts++ )\n{   \n    var element = history[ts];\n\n    data.push( {\n        tstamp: element.tstamp,\n        data: extract(element.data, 0, keysArray)\n    } );\n}\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "74ba00144af1a34e",
        "type": "function",
        "z": "b1c764f174c1fb3e",
        "name": "",
        "func": "var extract = function (point, keyIndex, keysArray) {\n    let element = \"\";\n    if(keyIndex < keysArray.length){\n        element = keysArray[keyIndex];\n        if (typeof point[element] !== 'object') {\n            let simpleValue = {};\n            simpleValue[element] = point[element];\n            return simpleValue\n        } else {\n            keyIndex = keyIndex + 1;\n            return extract(point[element], keyIndex, keysArray);\n            \n        }\n    }\n    return point;\n    \n}\n\nlet keys = env.get(\"PathTo\");\nlet keysArray = keys.split(\".\");\nlet point = msg.payload;\nmsg.payload.data = extract(point.data, 0, keysArray);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "127270a25c3d8888",
        "type": "switch",
        "z": "41b3a1439ccec2c1",
        "name": "topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "observe",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "unobserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "init",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 890,
        "y": 500,
        "wires": [
            [
                "1274c1fecaa655a8",
                "2cd93262147d3143"
            ],
            [
                "0f6603d9f95134b3",
                "78d0225e0b3a8fe6"
            ],
            [
                "0f6603d9f95134b3"
            ]
        ]
    },
    {
        "id": "1274c1fecaa655a8",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "PrepareOutput",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\n// Create an Observation Event Object ------------------------------------\nvar observation = {};\nobservation.id = uuid;\n//observation.source = msg.source;\nobservation.direction = \"Output\";\n\nvar observableReference = \"\";\n\n//var observedKeys = msg.payload.observed.keys;\n/*for(var key in observedKeys){\n    if(parseInt(key) < 2){\n        observableReference = observableReference + observedKeys[key].value + \"/\";\n    } else if (parseInt(key) >= 2 && parseInt(key) < (observedKeys.length - 1)) {\n        observableReference = observableReference + observedKeys[key].value + \".\";\n    } else {\n        observableReference = observableReference + observedKeys[key].value;\n    }\n}*/\n\nobservableReference = env.get(\"PropertyLink\");\n\nobservation.observableReference = observableReference;\n//observation.source = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nobservation.source = env.get(\"PropertyLinkEvt\");\n\nif(context.flow.get(\"timestamp\")){\n    observation.timestamp = context.flow.get(\"timestamp\");\n} else{\n    observation.timestamp = new Date().getTime();\n}\nobservation.payload = \"Data Flow Created\";\n//observation.href = msg.href;\n// END Create an Observation Object --------------------------------\n//outputMsgs.push(observation);\ncontext.flow.set('ObsObj', observation);\n//msg.payload = outputMsgs;\n//msg.payload = JSON.stringify(observation);\n//msg.test = JSON.parse(msg.payload);\nmsg.payload = observation;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 500,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "2cd93262147d3143",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = \"open\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 540,
        "wires": [
            [
                "f894203f2fd3ac35",
                "5f9633884f5e4cd4"
            ]
        ],
        "l": false
    },
    {
        "id": "f894203f2fd3ac35",
        "type": "gate",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "persist": false,
        "x": 1490,
        "y": 800,
        "wires": [
            [
                "e62907e7bcbce663"
            ]
        ]
    },
    {
        "id": "e62907e7bcbce663",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\nvar outMsg = {};\nvar ObsObj = context.flow.get('ObsObj');\nObsObj.id = uuid;\nvar timestamp = context.flow.get(\"$parent.timestamp\");\nif (typeof timestamp == 'undefined') {\n    timestamp = new Date().getTime();\n    ObsObj.timestamp = timestamp;\n}\nelse {\n    ObsObj.timestamp = timestamp;\n}\nObsObj.payload = context.flow.get(\"variable\");\noutMsg.payload = ObsObj;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1635,
        "y": 800,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "0f6603d9f95134b3",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = \"close\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 660,
        "wires": [
            [
                "f894203f2fd3ac35",
                "5f9633884f5e4cd4"
            ]
        ],
        "l": false
    },
    {
        "id": "78d0225e0b3a8fe6",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "PrepareOutput",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\n// Create an Observation Event Object ------------------------------------\nvar observation = {};\nobservation.id = uuid;\nobservation.source = msg.source;\nobservation.direction = \"Output\";\nvar observableReference = \"\";\n\n/*var observedKeys = msg.payload.observed.keys;\nfor (var key in observedKeys) {\n    if (parseInt(key) < 2) {\n        observableReference = observableReference + observedKeys[key].value + \"/\";\n    } else if (parseInt(key) >= 2 && parseInt(key) < (observedKeys.length - 1)) {\n        observableReference = observableReference + observedKeys[key].value + \".\";\n    } else {\n        observableReference = observableReference + observedKeys[key].value;\n    }\n}*/\n\nobservableReference = env.get(\"PropertyLink\");\n\nobservation.observableReference = observableReference;\n//observation.source = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nobservation.source = env.get(\"PropertyLinkEvt\");\n\nif(context.flow.get(\"timestamp\")){\n    observation.timestamp = context.flow.get(\"timestamp\");\n} else{\n    observation.timestamp = new Date().getTime();\n}\nobservation.payload = \"Data Flow removed\";\n//observation.href = msg.href;\n// END Create an Observation Object --------------------------------\n//outputMsgs.push(observation);\n\n//msg.payload = outputMsgs;\n//msg.payload = JSON.stringify(observation);\n//msg.test = JSON.parse(msg.payload);\ncontext.flow.set(\"ObsObj\", \"\");\nmsg.payload = observation;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 600,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "96b701c2b50dc6f7",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "var propertyName = env.get(\"PropertyName\");\nvar Outmsg = {};\nOutmsg.topic = msg.topic;\nvar variable = context.flow.get(\"$parent.\" + propertyName);\ncontext.flow.set(\"variable\", variable);\n\nOutmsg.payload = variable;\nreturn Outmsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 875,
        "y": 800,
        "wires": [
            [
                "f894203f2fd3ac35",
                "f02316f50a016d5d"
            ]
        ],
        "l": false
    },
    {
        "id": "f02316f50a016d5d",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "responseTime",
        "func": "var historyArrayName = \"$parent.\" + env.get(\"PropertyName\") + \"_hist\";\nvar outMsg = {};\noutMsg.topic = \"put\";\nvar timestamp = context.flow.get(\"$parent.timestamp\");\nif (typeof timestamp == \"undefined\") {\n    timestamp = new Date().getTime();\n}\noutMsg.payload = {\n    link: env.get(\"PropertyLink\"),\n    tstamp: timestamp,\n    data: context.flow.get(\"variable\")\n};\nlet history = context.flow.get(historyArrayName) || [];\nif (history.length >= env.get(\"HistoryLength\")) {\n    history.pop();\n}\nhistory.push(outMsg.payload);\ncontext.flow.set(historyArrayName, history);\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1075,
        "y": 860,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "95ca925e8f8cf880",
        "type": "switch",
        "z": "41b3a1439ccec2c1",
        "name": "scheduler",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "sbi scheduling data routing",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 520,
        "wires": [
            [
                "127270a25c3d8888"
            ],
            [
                "96b701c2b50dc6f7"
            ]
        ]
    },
    {
        "id": "5f9633884f5e4cd4",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "if(msg.payload == \"open\"){\n    msg.payload = ({ fill: \"green\", text: \"Open\" });\n} else if (msg.payload == \"close\"){\n    msg.payload = ({ fill: \"red\", text: \"Closed\" });\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1535,
        "y": 700,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "cac1db39.b04078",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "url": "/aasServer/submodels",
        "method": "get",
        "upload": false,
        "swaggerDoc": "9faeb6d2.bee598",
        "x": 247,
        "y": 1300,
        "wires": [
            [
                "9f5f6222.cc83a",
                "d934b20f.fa76"
            ]
        ]
    },
    {
        "id": "29145f48.4ba7c",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id/submodel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "75f5f3f5.58cb1c",
        "x": 350,
        "y": 1500,
        "wires": [
            [
                "f199b71c.d41848",
                "a4b5bf21.7c839"
            ]
        ]
    },
    {
        "id": "911146e5.f855a8",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/asset-information",
        "method": "get",
        "upload": false,
        "swaggerDoc": "103c6242.2d09ae",
        "x": 330,
        "y": 980,
        "wires": [
            [
                "dc737b31.78c9a8",
                "697de89c.c97c98"
            ]
        ]
    },
    {
        "id": "235c6137.8eecfe",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1950,
        "y": 980,
        "wires": []
    },
    {
        "id": "912eda47.361a98",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1940,
        "y": 1302,
        "wires": []
    },
    {
        "id": "8dd7e27f.bc284",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "name": "External Interface - Manifest - Configuration",
        "info": "",
        "x": 190,
        "y": 40,
        "wires": []
    },
    {
        "id": "9084f719.6afdf8",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1937,
        "y": 1500,
        "wires": []
    },
    {
        "id": "6c35bee3.61145",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id/submodel",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 1700,
        "wires": [
            [
                "43541659.0da4d8",
                "f44a7db3.ebcde"
            ]
        ]
    },
    {
        "id": "c1668a7b.ee14f8",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id/submodel",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 360,
        "y": 1800,
        "wires": [
            [
                "3caf47b6.93e548",
                "aa5f01f5.97774"
            ]
        ]
    },
    {
        "id": "2520a136.899d6e",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ca6f3523.f2b588",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1940,
        "y": 1803,
        "wires": []
    },
    {
        "id": "43541659.0da4d8",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 663,
        "y": 1660,
        "wires": []
    },
    {
        "id": "3caf47b6.93e548",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 670,
        "y": 1760,
        "wires": []
    },
    {
        "id": "f199b71c.d41848",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 670,
        "y": 1460,
        "wires": []
    },
    {
        "id": "9f5f6222.cc83a",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 600,
        "y": 1262,
        "wires": []
    },
    {
        "id": "369802aa.4bb65e",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "url": "aasServer/env/persist",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 640,
        "wires": [
            [
                "c8694f03.dfd39",
                "e3f319e7.11c788"
            ]
        ]
    },
    {
        "id": "7f25771a.9570b8",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1950,
        "y": 640,
        "wires": []
    },
    {
        "id": "c8694f03.dfd39",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 510,
        "y": 680,
        "wires": []
    },
    {
        "id": "87e27c61.d45d5",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1937,
        "y": 740,
        "wires": []
    },
    {
        "id": "d4cc7b36.ba12e8",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "url": "aasServer/env",
        "method": "get",
        "upload": false,
        "swaggerDoc": "e6bde5fd.0d7858",
        "x": 217,
        "y": 740,
        "wires": [
            [
                "42fa9309.ed70dc",
                "6c1542cb.673e8c"
            ]
        ]
    },
    {
        "id": "5fa33903.676088",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "External Interface - Data - Operations on Properties",
        "info": "",
        "x": 327,
        "y": 1950,
        "wires": []
    },
    {
        "id": "bac747df.172a08",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 527,
        "y": 2040,
        "wires": [
            [
                "dd104edd.0d2a8",
                "a5e43779.650a98"
            ]
        ]
    },
    {
        "id": "9a24dda.82e0e2",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1937,
        "y": 2040,
        "wires": []
    },
    {
        "id": "dd104edd.0d2a8",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1077,
        "y": 2000,
        "wires": []
    },
    {
        "id": "9719e687.c005e8",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 527,
        "y": 2160,
        "wires": [
            [
                "ee0d57e4.33f838",
                "6f284455.99cc0c"
            ]
        ]
    },
    {
        "id": "8b05bd82.8d5c3",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1937,
        "y": 2160,
        "wires": []
    },
    {
        "id": "ee0d57e4.33f838",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1077,
        "y": 2120,
        "wires": []
    },
    {
        "id": "579a7665.cdc2f8",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1050,
        "y": 2340,
        "wires": []
    },
    {
        "id": "a33c8835.b4ae48",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 530,
        "y": 2380,
        "wires": [
            [
                "579a7665.cdc2f8",
                "2038bf7c.b6c14"
            ]
        ]
    },
    {
        "id": "f6804404.570008",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 2380,
        "wires": []
    },
    {
        "id": "e3f319e7.11c788",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 530,
        "y": 640,
        "wires": [
            [
                "acf520d7.dad7a"
            ]
        ]
    },
    {
        "id": "2591dc6f.beecf4",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "env": [],
        "x": 1930,
        "y": 680,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "42fa9309.ed70dc",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 507,
        "y": 740,
        "wires": [
            [
                "c34ae37f.12318"
            ]
        ]
    },
    {
        "id": "62354c3.8a2cab4",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "x": 1917,
        "y": 780,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "dc737b31.78c9a8",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 650,
        "y": 980,
        "wires": [
            [
                "bbf9bf7d.66354"
            ]
        ]
    },
    {
        "id": "cbc42023.5d017",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "env": [],
        "x": 1930,
        "y": 1020,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "d934b20f.fa76",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 617,
        "y": 1300,
        "wires": [
            [
                "2fa79041.17ff8"
            ]
        ]
    },
    {
        "id": "5651a9f8.d2bc98",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "env": [],
        "x": 1920,
        "y": 1342,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "1dbfef26.97a6f1",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "x": 1920,
        "y": 1547,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "bd2ae1ed.cbdaa",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "x": 1910,
        "y": 1640,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "890fd853.abfe18",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "x": 1920,
        "y": 1843,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "a4b5bf21.7c839",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 757,
        "y": 1500,
        "wires": [
            [
                "b859d557.e838d8"
            ]
        ]
    },
    {
        "id": "f44a7db3.ebcde",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 743,
        "y": 1700,
        "wires": [
            [
                "cb3ea6e9.72b438"
            ]
        ]
    },
    {
        "id": "aa5f01f5.97774",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 770,
        "y": 1800,
        "wires": [
            [
                "8c4835ae.20d5b8"
            ]
        ]
    },
    {
        "id": "a5e43779.650a98",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1077,
        "y": 2040,
        "wires": [
            [
                "f42c942d.6d6448"
            ]
        ]
    },
    {
        "id": "e0482beb.0de658",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "x": 1907,
        "y": 2080,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "6f284455.99cc0c",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1077,
        "y": 2160,
        "wires": [
            [
                "bc2fff91.b20fd"
            ]
        ]
    },
    {
        "id": "f2fbc8fb.44c608",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "env": [],
        "x": 1907,
        "y": 2200,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "2038bf7c.b6c14",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1070,
        "y": 2380,
        "wires": [
            [
                "9cae29d0.c4e968"
            ]
        ]
    },
    {
        "id": "8a1eeeb2.31c1c",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "x": 1910,
        "y": 2420,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "23801d7a.c17572",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "External Interface - Health Check",
        "info": "",
        "x": 230,
        "y": 3060,
        "wires": []
    },
    {
        "id": "4768d29a.aacc4c",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "",
        "url": "/aasServer/health",
        "method": "get",
        "upload": false,
        "swaggerDoc": "d61f3cdd.7e8e5",
        "x": 230,
        "y": 3120,
        "wires": [
            [
                "17d166e7.5b6559"
            ]
        ]
    },
    {
        "id": "17d166e7.5b6559",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 500,
        "y": 3120,
        "wires": [
            [
                "98293416.fa8198"
            ]
        ]
    },
    {
        "id": "ebf8a1.a3dd076",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 3120,
        "wires": []
    },
    {
        "id": "f6f1e3c3.9ffa5",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "",
        "env": [],
        "x": 1910,
        "y": 3160,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "acf520d7.dad7a",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "3_Out",
        "links": [
            "d9a13b62.92e028"
        ],
        "x": 975,
        "y": 640,
        "wires": []
    },
    {
        "id": "c4626f7b.fb5ac",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "3_In",
        "links": [
            "187a900c.5b1af"
        ],
        "x": 1395,
        "y": 640,
        "wires": [
            [
                "7f25771a.9570b8",
                "2591dc6f.beecf4"
            ]
        ]
    },
    {
        "id": "c34ae37f.12318",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "4_Out",
        "links": [
            "5549ae38.69573"
        ],
        "x": 962,
        "y": 740,
        "wires": []
    },
    {
        "id": "8ddc3a56.0b1778",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "4_In",
        "links": [
            "420d2b35.ef98e4"
        ],
        "x": 1382,
        "y": 740,
        "wires": [
            [
                "87e27c61.d45d5",
                "62354c3.8a2cab4"
            ]
        ]
    },
    {
        "id": "6c1542cb.673e8c",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 497,
        "y": 780,
        "wires": []
    },
    {
        "id": "697de89c.c97c98",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 650,
        "y": 1020,
        "wires": []
    },
    {
        "id": "bbf9bf7d.66354",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "5_Out",
        "links": [
            "5069ec76.d2eb14"
        ],
        "x": 975,
        "y": 980,
        "wires": []
    },
    {
        "id": "bc9740dc.6a656",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "5_In",
        "links": [
            "c309c489.5ba748"
        ],
        "x": 1395,
        "y": 980,
        "wires": [
            [
                "235c6137.8eecfe",
                "cbc42023.5d017"
            ]
        ]
    },
    {
        "id": "98293416.fa8198",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "6_Out",
        "links": [
            "12427121.e261af"
        ],
        "x": 955,
        "y": 3120,
        "wires": []
    },
    {
        "id": "43be3c31.fa03f4",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "16640da3.5a20ca",
        "name": "6_In",
        "links": [
            "1dc6352e.63a42b"
        ],
        "x": 1375,
        "y": 3120,
        "wires": [
            [
                "ebf8a1.a3dd076",
                "f6f1e3c3.9ffa5"
            ]
        ]
    },
    {
        "id": "2fa79041.17ff8",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "7_Out",
        "links": [
            "144753fb.39796c",
            "e4cb8d27.54c3e8",
            "50f49032.079c5"
        ],
        "x": 985,
        "y": 1302,
        "wires": []
    },
    {
        "id": "9f7abd5a.96875",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "7_In",
        "links": [
            "7cec632.7e15b9c",
            "cd8d2219.2a3198"
        ],
        "x": 1405,
        "y": 1302,
        "wires": [
            [
                "912eda47.361a98",
                "5651a9f8.d2bc98"
            ]
        ]
    },
    {
        "id": "b859d557.e838d8",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "8_Out",
        "links": [
            "14755216.6e97de"
        ],
        "x": 982,
        "y": 1500,
        "wires": []
    },
    {
        "id": "54372dd7.ec8b74",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "8_In",
        "links": [
            "abd5525b.19111"
        ],
        "x": 1402,
        "y": 1500,
        "wires": [
            [
                "9084f719.6afdf8",
                "1dbfef26.97a6f1"
            ]
        ]
    },
    {
        "id": "cb3ea6e9.72b438",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "9_Out",
        "mode": "link",
        "links": [
            "28678d6a.db84e2"
        ],
        "x": 975,
        "y": 1700,
        "wires": []
    },
    {
        "id": "87522ab0.ac1188",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "9_In",
        "links": [
            "678e4e74.45bcf"
        ],
        "x": 1395,
        "y": 1600,
        "wires": [
            [
                "2520a136.899d6e",
                "bd2ae1ed.cbdaa"
            ]
        ]
    },
    {
        "id": "8c4835ae.20d5b8",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "10_Out",
        "links": [
            "9ef717cb.3c1a58"
        ],
        "x": 982,
        "y": 1800,
        "wires": []
    },
    {
        "id": "345e490a.d99a46",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "10_In",
        "links": [
            "333f3811.d15c38"
        ],
        "x": 1405,
        "y": 1803,
        "wires": [
            [
                "ca6f3523.f2b588",
                "890fd853.abfe18"
            ]
        ]
    },
    {
        "id": "f42c942d.6d6448",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "12_Out",
        "links": [
            "28a03303.7275fc"
        ],
        "x": 1242,
        "y": 2040,
        "wires": []
    },
    {
        "id": "4a5f46fc.ea7c08",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "12_In",
        "links": [
            "3baa6a51.8f0c46"
        ],
        "x": 1522,
        "y": 2040,
        "wires": [
            [
                "9a24dda.82e0e2",
                "e0482beb.0de658"
            ]
        ]
    },
    {
        "id": "6e7f5025.a4315",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "13_In",
        "links": [
            "31e9ae57.e1de12"
        ],
        "x": 1522,
        "y": 2160,
        "wires": [
            [
                "8b05bd82.8d5c3",
                "f2fbc8fb.44c608"
            ]
        ]
    },
    {
        "id": "bc2fff91.b20fd",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "13_Out",
        "links": [
            "276fc6c9.dc36ea"
        ],
        "x": 1242,
        "y": 2160,
        "wires": []
    },
    {
        "id": "53f11e8b.9b099",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "15_In",
        "links": [
            "5e6f3c8.83ccdc4"
        ],
        "x": 1515,
        "y": 2380,
        "wires": [
            [
                "f6804404.570008",
                "8a1eeeb2.31c1c"
            ]
        ]
    },
    {
        "id": "9cae29d0.c4e968",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "15_Out",
        "mode": "link",
        "links": [
            "435a3b54.b4a2a4"
        ],
        "x": 1235,
        "y": 2380,
        "wires": []
    },
    {
        "id": "b06bbe8c.99281",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "External Interface - LiveData - Request Properties",
        "info": "",
        "x": 290,
        "y": 2540,
        "wires": []
    },
    {
        "id": "c3859dd5.c946d",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "g": "fd25b313.221798",
        "name": "External Interface - FileData - Request File",
        "info": "",
        "x": 260,
        "y": 2840,
        "wires": []
    },
    {
        "id": "fba64935.3c8e18",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "fd25b313.221798",
        "name": "",
        "url": "/aasx/docu/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 2920,
        "wires": [
            [
                "3c448e09.9248f2",
                "e0886cb3.b2a44"
            ]
        ]
    },
    {
        "id": "3c448e09.9248f2",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "fd25b313.221798",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 610,
        "y": 2920,
        "wires": [
            [
                "48ef191e.d28c98"
            ]
        ]
    },
    {
        "id": "48ef191e.d28c98",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "fd25b313.221798",
        "name": "18_Out",
        "links": [
            "d9a0c300.9f2b7"
        ],
        "x": 955,
        "y": 2920,
        "wires": []
    },
    {
        "id": "e7a9e126.1cef",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "fd25b313.221798",
        "name": "18_In",
        "links": [
            "1619def7.8eb651"
        ],
        "x": 1375,
        "y": 2920,
        "wires": [
            [
                "b4eb437c.b5efd",
                "2dc97f2a.e1d8d8"
            ]
        ]
    },
    {
        "id": "ed77ca84.755278",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "fd25b313.221798",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1910,
        "y": 2920,
        "wires": []
    },
    {
        "id": "b4eb437c.b5efd",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "fd25b313.221798",
        "name": "",
        "env": [],
        "x": 1890,
        "y": 2960,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "e0886cb3.b2a44",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "fd25b313.221798",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 490,
        "y": 2860,
        "wires": []
    },
    {
        "id": "8af52e00.b2df48",
        "type": "httpInMultipart",
        "z": "c7caf96e.a31f98",
        "g": "10392549.d972b3",
        "name": "",
        "url": "/aasServer/conf/addDriver",
        "method": "post",
        "fields": "[{\"name\": \"driver\"}]",
        "swaggerDoc": "",
        "x": 242,
        "y": 386,
        "wires": [
            [
                "d7080631.6bd928"
            ]
        ]
    },
    {
        "id": "3a568a54.3c63e6",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "10392549.d972b3",
        "name": "",
        "url": "/aasServer/conf/importDriver",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 242,
        "y": 266,
        "wires": [
            [
                "ed7feffb.fdc4d8"
            ]
        ]
    },
    {
        "id": "b102af28.a0df28",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "10392549.d972b3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 692,
        "y": 266,
        "wires": []
    },
    {
        "id": "c0822d7.a2222d",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "10392549.d972b3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 672,
        "y": 306,
        "wires": []
    },
    {
        "id": "ed7feffb.fdc4d8",
        "type": "template",
        "z": "c7caf96e.a31f98",
        "g": "10392549.d972b3",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\n        <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\" integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\" integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\" crossorigin=\"anonymous\"></script>\n    </head>\n    <div>\n        <form action=\"/aas/conf/addDriver\" method=\"POST\" enctype=\"multipart/form-data\">\n        \t<!-- COMPONENT START -->\n        \t<div class=\"form-group\">\n        \t\t<div class=\"input-group input-file\" name=\"driver\">\n            \t\t<input type=\"text\" class=\"form-control\" placeholder='Choose a file...' />\t\t\t\n                    <span class=\"input-group-btn\">\n                \t\t<button class=\"btn btn-default btn-choose\" type=\"button\">Choose</button>\n            \t\t</span>\n        \n        \n        \t\t</div>\n        \t</div>\n        \t<!-- COMPONENT END -->\n        \t<div class=\"form-group\">\n        \t\t<button type=\"submit\" class=\"btn btn-primary pull-right\">Submit</button>\n        \t\t<button type=\"reset\" class=\"btn btn-danger\">Reset</button>\n        \t</div>\n        </form>\n    </div>\n    <script>\n        function bs_input_file() {\n\t$(\".input-file\").before(\n\t\tfunction() {\n\t\t\tif ( ! $(this).prev().hasClass('input-ghost') ) {\n\t\t\t\tvar element = $(\"<input type='file' class='input-ghost' style='visibility:hidden; height:0'>\");\n\t\t\t\telement.attr(\"name\",$(this).attr(\"name\"));\n\t\t\t\telement.change(function(){\n\t\t\t\t\telement.next(element).find('input').val((element.val()).split('\\\\').pop());\n\t\t\t\t});\n\t\t\t\t$(this).find(\"button.btn-choose\").click(function(){\n\t\t\t\t\telement.click();\n\t\t\t\t});\n\t\t\t\t$(this).find(\"button.btn-reset\").click(function(){\n\t\t\t\t\telement.val(null);\n\t\t\t\t\t$(this).parents(\".input-file\").find('input').val('');\n\t\t\t\t});\n\t\t\t\t$(this).find('input').css(\"cursor\",\"pointer\");\n\t\t\t\t$(this).find('input').mousedown(function() {\n\t\t\t\t\t$(this).parents('.input-file').prev().click();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\t);\n}\n$(function() {\n\tbs_input_file();\n});\n    </script>\n</html>",
        "output": "str",
        "x": 532,
        "y": 266,
        "wires": [
            [
                "b102af28.a0df28",
                "c0822d7.a2222d"
            ]
        ]
    },
    {
        "id": "d7080631.6bd928",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "10392549.d972b3",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 532,
        "y": 386,
        "wires": [
            [
                "8c3f137a.f60d68"
            ]
        ]
    },
    {
        "id": "ece6df22.01841",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "10392549.d972b3",
        "name": "1_1_Out",
        "links": [
            "8ce06b86.c8f5a8"
        ],
        "x": 927,
        "y": 386,
        "wires": []
    },
    {
        "id": "fff82399.2f49b",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "10392549.d972b3",
        "name": "1_1_In",
        "links": [
            "26fb4e32.c32dca"
        ],
        "x": 1347,
        "y": 386,
        "wires": [
            [
                "82289ad6.a600d8",
                "ad85b295.7069f"
            ]
        ]
    },
    {
        "id": "82289ad6.a600d8",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "10392549.d972b3",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1902,
        "y": 386,
        "wires": []
    },
    {
        "id": "ad85b295.7069f",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "10392549.d972b3",
        "name": "",
        "env": [],
        "x": 1882,
        "y": 426,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "a0cacb3.3af7d38",
        "type": "comment",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "External Interface - Data - Operations on Submodels",
        "info": "",
        "x": 330,
        "y": 1217,
        "wires": []
    },
    {
        "id": "bb4de309.e48c",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1950,
        "y": 840,
        "wires": []
    },
    {
        "id": "4fd92a61.1a1cbc",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "url": "aasServer/shells",
        "method": "get",
        "upload": false,
        "swaggerDoc": "a67da331.7afbf8",
        "x": 220,
        "y": 840,
        "wires": [
            [
                "856c9918.42c4b8",
                "90d9b2.6335f65"
            ]
        ]
    },
    {
        "id": "856c9918.42c4b8",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 510,
        "y": 840,
        "wires": [
            [
                "23e7fb8f.11fddc"
            ]
        ]
    },
    {
        "id": "2554c114.74adde",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "x": 1930,
        "y": 880,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "23e7fb8f.11fddc",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "19_Out",
        "links": [
            "fed0a648.1a3cd"
        ],
        "x": 955,
        "y": 840,
        "wires": []
    },
    {
        "id": "e2c6dfcd.e05b7",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "19_In",
        "links": [
            "40e9769.02d7288"
        ],
        "x": 1375,
        "y": 840,
        "wires": [
            [
                "bb4de309.e48c",
                "2554c114.74adde"
            ]
        ]
    },
    {
        "id": "90d9b2.6335f65",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 470,
        "y": 900,
        "wires": []
    },
    {
        "id": "f63b07e4.457e2",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas",
        "method": "get",
        "upload": false,
        "swaggerDoc": "6fe2f15a.b44e88",
        "x": 270,
        "y": 1060,
        "wires": [
            [
                "e34ed51c.060cd",
                "8165c6b8.c3519"
            ]
        ]
    },
    {
        "id": "437c7c89.d0b51c",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1950,
        "y": 1060,
        "wires": []
    },
    {
        "id": "e34ed51c.060cd",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 550,
        "y": 1060,
        "wires": [
            [
                "d0bce444.7eb068"
            ]
        ]
    },
    {
        "id": "59776b4d.36b314",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "env": [],
        "x": 1930,
        "y": 1100,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "8165c6b8.c3519",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 470,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d0bce444.7eb068",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "20_Out",
        "links": [
            "13290de2.def292"
        ],
        "x": 975,
        "y": 1060,
        "wires": []
    },
    {
        "id": "eb085e57.c9db48",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "daa90db5.798ca",
        "name": "20_In",
        "links": [
            "b14ea23f.c308a8"
        ],
        "x": 1375,
        "y": 1060,
        "wires": [
            [
                "437c7c89.d0b51c",
                "59776b4d.36b314"
            ]
        ]
    },
    {
        "id": "c0e7eca.1f9ac9",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels",
        "method": "get",
        "upload": false,
        "swaggerDoc": "b89f33af.44f05",
        "x": 317,
        "y": 1400,
        "wires": [
            [
                "bb1348ef.5dad58",
                "4be17c9e.1e2c5c"
            ]
        ]
    },
    {
        "id": "4599d634.2aa528",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 1400,
        "wires": []
    },
    {
        "id": "bb1348ef.5dad58",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 610,
        "y": 1360,
        "wires": []
    },
    {
        "id": "4be17c9e.1e2c5c",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 657,
        "y": 1400,
        "wires": [
            [
                "727480a5.4236c"
            ]
        ]
    },
    {
        "id": "228c3050.5c01b8",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "env": [],
        "x": 1930,
        "y": 1440,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "727480a5.4236c",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "21_Out",
        "links": [
            "f8458ab6.efa688"
        ],
        "x": 982,
        "y": 1400,
        "wires": []
    },
    {
        "id": "a4eb92d0.81718",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "21_In",
        "links": [
            "d8719524.0097b"
        ],
        "x": 1395,
        "y": 1400,
        "wires": [
            [
                "4599d634.2aa528",
                "228c3050.5c01b8"
            ]
        ]
    },
    {
        "id": "a3ec15bc.b3e59",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "url": "/aasServer/subscriptions",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 2700,
        "wires": [
            [
                "633578fc.26a7a",
                "d42664b2.514808"
            ]
        ]
    },
    {
        "id": "633578fc.26a7a",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 789,
        "y": 2700,
        "wires": [
            [
                "568d5f3.624242"
            ]
        ]
    },
    {
        "id": "184a6b3e.d382f5",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1949,
        "y": 2700,
        "wires": []
    },
    {
        "id": "ec19d6a4.7505f8",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "env": [],
        "x": 1919,
        "y": 2740,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "568d5f3.624242",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "22_Out",
        "links": [
            "be37d7a0.4489e"
        ],
        "x": 1374,
        "y": 2700,
        "wires": []
    },
    {
        "id": "d5524b85.c3c27",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "22_In",
        "links": [
            "c757ee5b.08a1f8"
        ],
        "x": 1554,
        "y": 2700,
        "wires": [
            [
                "184a6b3e.d382f5",
                "ec19d6a4.7505f8"
            ]
        ]
    },
    {
        "id": "d42664b2.514808",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "66d3f26a.c296b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 549,
        "y": 2640,
        "wires": []
    },
    {
        "id": "8c3f137a.f60d68",
        "type": "node-red-contrib-httpauth",
        "z": "c7caf96e.a31f98",
        "g": "10392549.d972b3",
        "name": "handle http Auth",
        "file": "bebd1a76.551ec8",
        "cred": "",
        "authType": "Basic",
        "realm": "",
        "username": "",
        "password": "",
        "hashed": false,
        "x": 762,
        "y": 386,
        "wires": [
            [
                "ece6df22.01841"
            ]
        ]
    },
    {
        "id": "2dc97f2a.e1d8d8",
        "type": "function",
        "z": "c7caf96e.a31f98",
        "g": "fd25b313.221798",
        "name": "Attachment",
        "func": "msg.headers[\"Content-Disposition\"] = \"attachment;\" + \"filename=\" + msg.req.params.fn;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1690,
        "y": 2920,
        "wires": [
            [
                "ed77ca84.755278"
            ]
        ]
    },
    {
        "id": "22bb4d132d2d6bd1",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1050,
        "y": 2240,
        "wires": []
    },
    {
        "id": "1330b0dc5cc6b35a",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 520,
        "y": 2280,
        "wires": [
            [
                "22bb4d132d2d6bd1",
                "d10aceb3b8173082"
            ]
        ]
    },
    {
        "id": "1dad423e9ce11cac",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 2280,
        "wires": []
    },
    {
        "id": "d10aceb3b8173082",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1070,
        "y": 2280,
        "wires": [
            [
                "0bc19d258678bba4"
            ]
        ]
    },
    {
        "id": "01639af71f83bc56",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "",
        "x": 1910,
        "y": 2320,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "caf9273bf9a8afc4",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "14_In",
        "links": [
            "4c0c0431.1e281c"
        ],
        "x": 1515,
        "y": 2280,
        "wires": [
            [
                "1dad423e9ce11cac",
                "01639af71f83bc56"
            ]
        ]
    },
    {
        "id": "0bc19d258678bba4",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "g": "c358a7e7.e264e",
        "name": "14_Out",
        "mode": "link",
        "links": [
            "7d69972e.3f3438"
        ],
        "x": 1235,
        "y": 2280,
        "wires": []
    },
    {
        "id": "d05b53b9a69cc83a",
        "type": "http in",
        "z": "c7caf96e.a31f98",
        "g": "37a4080e.40ed9",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 1600,
        "wires": [
            [
                "d628753dc4cde75c",
                "48d15348a443e9ab"
            ]
        ]
    },
    {
        "id": "d628753dc4cde75c",
        "type": "debug",
        "z": "c7caf96e.a31f98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 663,
        "y": 1560,
        "wires": []
    },
    {
        "id": "48d15348a443e9ab",
        "type": "set-defaults",
        "z": "c7caf96e.a31f98",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 743,
        "y": 1600,
        "wires": [
            [
                "ac692a0253f3bdc4"
            ]
        ]
    },
    {
        "id": "ac692a0253f3bdc4",
        "type": "link out",
        "z": "c7caf96e.a31f98",
        "name": "9_Out",
        "links": [
            "3d10d866.bf3aa8"
        ],
        "x": 975,
        "y": 1600,
        "wires": []
    },
    {
        "id": "2512454532d4c62c",
        "type": "http response",
        "z": "c7caf96e.a31f98",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 1700,
        "wires": []
    },
    {
        "id": "c47790502bc32479",
        "type": "subflow:56cb7422.e3d28c",
        "z": "c7caf96e.a31f98",
        "name": "",
        "x": 1910,
        "y": 1740,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "b47cf61ef147466d",
        "type": "link in",
        "z": "c7caf96e.a31f98",
        "name": "9_In",
        "links": [
            "b3a06096.d9e97"
        ],
        "x": 1395,
        "y": 1700,
        "wires": [
            [
                "2512454532d4c62c",
                "c47790502bc32479"
            ]
        ]
    },
    {
        "id": "c9de3df7.c99ee",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "1_In",
        "links": [
            "21db2b14.d6f9f4",
            "1686c59a.31af6a"
        ],
        "x": 235,
        "y": 220,
        "wires": [
            [
                "5c14e4cb.c5e47c",
                "f4a43138271a8989"
            ]
        ]
    },
    {
        "id": "a57df28d.f36db",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "1_Out",
        "mode": "link",
        "links": [],
        "x": 3095,
        "y": 220,
        "wires": []
    },
    {
        "id": "d9a13b62.92e028",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "3_In",
        "links": [
            "acf520d7.dad7a",
            "2f77b324.8f4834"
        ],
        "x": 235,
        "y": 996,
        "wires": [
            [
                "48745191cfba1eda"
            ]
        ]
    },
    {
        "id": "187a900c.5b1af",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "3_Out",
        "links": [
            "c4626f7b.fb5ac",
            "2c990cd.ab65f74"
        ],
        "x": 3135,
        "y": 996,
        "wires": []
    },
    {
        "id": "5549ae38.69573",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "4_In",
        "links": [
            "c34ae37f.12318",
            "3bb19eca.92cfd2"
        ],
        "x": 235,
        "y": 1068,
        "wires": [
            [
                "a767bb2ac4ab46a1"
            ]
        ]
    },
    {
        "id": "420d2b35.ef98e4",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "4_Out",
        "links": [
            "8ddc3a56.0b1778",
            "5304bdc8.6dda34"
        ],
        "x": 3135,
        "y": 1068,
        "wires": []
    },
    {
        "id": "5069ec76.d2eb14",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "5_In",
        "links": [
            "bbf9bf7d.66354",
            "883acf9b.5a7a2"
        ],
        "x": 235,
        "y": 1216,
        "wires": [
            [
                "cc11aad75f06e46f"
            ]
        ]
    },
    {
        "id": "c309c489.5ba748",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "5_Out",
        "links": [
            "bc9740dc.6a656"
        ],
        "x": 3135,
        "y": 1216,
        "wires": []
    },
    {
        "id": "70ce4dbd.b669f4",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "IF_Error_Detected",
        "property": "payload.errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1630,
        "y": 1465,
        "wires": [
            [
                "df1c2e63.f039d"
            ],
            [
                "1b7cd6b5.8f5309"
            ]
        ]
    },
    {
        "id": "9e35bf84.b4fa7",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "preparingCheckingRules",
        "func": "var errors = [];\nmsg.payload = {};\nvar NOVAAS_Overall_St = context.global.get(\"NOVAAS_Overall_St\");\nif((NOVAAS_Overall_St === false))\n   {\n        errors.push(\"Asset Administration Shell not configured\");\n       \n   } \n \nmsg.payload.errors = errors;\n    \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 1465,
        "wires": [
            [
                "70ce4dbd.b669f4",
                "c482c970.3a3208"
            ]
        ]
    },
    {
        "id": "df1c2e63.f039d",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "createOutputMsg",
        "func": "msg.statusCode = 200;\nmsg.payload = \"ok\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1890,
        "y": 1440,
        "wires": [
            [
                "1dc6352e.63a42b"
            ]
        ]
    },
    {
        "id": "1b7cd6b5.8f5309",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "createOutputMsg",
        "func": "msg.statusCode = 503;\nmsg.payload = msg.payload.errors;\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1890,
        "y": 1485,
        "wires": [
            [
                "1dc6352e.63a42b"
            ]
        ]
    },
    {
        "id": "12427121.e261af",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "6_In",
        "links": [
            "98293416.fa8198"
        ],
        "x": 235,
        "y": 1465,
        "wires": [
            [
                "9e35bf84.b4fa7"
            ]
        ]
    },
    {
        "id": "1dc6352e.63a42b",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "6_Out",
        "links": [
            "43be3c31.fa03f4"
        ],
        "x": 3135,
        "y": 1465,
        "wires": []
    },
    {
        "id": "e22aaf22.a1f3e",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 1560,
        "wires": []
    },
    {
        "id": "144753fb.39796c",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "7_In",
        "links": [
            "2fa79041.17ff8",
            "17da0b60.6a2f3d"
        ],
        "x": 235,
        "y": 1580,
        "wires": [
            [
                "8463fbcf17bbb837"
            ]
        ]
    },
    {
        "id": "7cec632.7e15b9c",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "7_Out",
        "links": [
            "9f7abd5a.96875",
            "caa59972.e5a99"
        ],
        "x": 3135,
        "y": 1580,
        "wires": []
    },
    {
        "id": "33d6ebc0.3cf344",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 1780,
        "wires": []
    },
    {
        "id": "abd5525b.19111",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "8_Out",
        "links": [
            "54372dd7.ec8b74",
            "e2acf77b.dc7f68"
        ],
        "x": 3135,
        "y": 1800,
        "wires": []
    },
    {
        "id": "14755216.6e97de",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "8_In",
        "links": [
            "b859d557.e838d8",
            "e2af5e8a.78213"
        ],
        "x": 235,
        "y": 1800,
        "wires": [
            [
                "1c4b441450fae9ce"
            ]
        ]
    },
    {
        "id": "1aa365b1.9f918a",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1630,
        "y": 1920,
        "wires": []
    },
    {
        "id": "6860b43e.8de27c",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 1980,
        "wires": [
            [
                "678e4e74.45bcf"
            ],
            [
                "11e91e4d13917d49"
            ]
        ]
    },
    {
        "id": "678e4e74.45bcf",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "9_Out",
        "links": [
            "87522ab0.ac1188",
            "74e66928.59585"
        ],
        "x": 3135,
        "y": 1960,
        "wires": []
    },
    {
        "id": "3d10d866.bf3aa8",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "9_In",
        "links": [
            "786ee408.b667c4",
            "ac692a0253f3bdc4"
        ],
        "x": 235,
        "y": 1980,
        "wires": [
            [
                "011c7dbb515cfacf"
            ]
        ]
    },
    {
        "id": "17f97360.c6ae7d",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1670,
        "y": 2040,
        "wires": []
    },
    {
        "id": "48a59aa4.9ad814",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2080,
        "wires": [
            [
                "333f3811.d15c38"
            ],
            [
                "ae28f53c34d8b949"
            ]
        ]
    },
    {
        "id": "333f3811.d15c38",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "10_Out",
        "links": [
            "345e490a.d99a46",
            "d5e2a42c.8dffb8"
        ],
        "x": 3135,
        "y": 2060,
        "wires": []
    },
    {
        "id": "9ef717cb.3c1a58",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "10_In",
        "links": [
            "8c4835ae.20d5b8",
            "b636e41a.e74f28"
        ],
        "x": 235,
        "y": 2080,
        "wires": [
            [
                "50e0d36efda01619"
            ]
        ]
    },
    {
        "id": "99d81682.e9c548",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1670,
        "y": 2160,
        "wires": []
    },
    {
        "id": "2ec6555c.148e2a",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2260,
        "wires": [
            [
                "b3a06096.d9e97"
            ],
            [
                "b2811a59a9c3a985"
            ]
        ]
    },
    {
        "id": "b3a06096.d9e97",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "11_Out",
        "links": [
            "d932c8d.cf79c38",
            "51031ae7.2a3aa4",
            "b47cf61ef147466d"
        ],
        "x": 3135,
        "y": 2238,
        "wires": []
    },
    {
        "id": "28678d6a.db84e2",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "11_In",
        "links": [
            "d50a98f1.b0b938",
            "1e00e0ac.7b7297",
            "cb3ea6e9.72b438"
        ],
        "x": 235,
        "y": 2258,
        "wires": [
            [
                "12ec04d558dab59c"
            ]
        ]
    },
    {
        "id": "8188be80.74de4",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1810,
        "y": 2360,
        "wires": []
    },
    {
        "id": "3baa6a51.8f0c46",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "12_Out",
        "links": [
            "4a5f46fc.ea7c08",
            "c659a5d0.7355b8"
        ],
        "x": 3135,
        "y": 2400,
        "wires": []
    },
    {
        "id": "28a03303.7275fc",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "12_In",
        "links": [
            "f42c942d.6d6448",
            "a0c9ccc4.12d298"
        ],
        "x": 255,
        "y": 2400,
        "wires": [
            [
                "0277e205fc7c4018"
            ]
        ]
    },
    {
        "id": "3cae4c9a.680424",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1750,
        "y": 2520,
        "wires": []
    },
    {
        "id": "72079a3a.bbba24",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2050,
        "y": 2580,
        "wires": [
            [
                "31e9ae57.e1de12"
            ],
            [
                "adf27afba7c3b724"
            ]
        ]
    },
    {
        "id": "31e9ae57.e1de12",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "13_Out",
        "links": [
            "6e7f5025.a4315",
            "bcb152e2.608288"
        ],
        "x": 3135,
        "y": 2560,
        "wires": []
    },
    {
        "id": "276fc6c9.dc36ea",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "13_In",
        "links": [
            "bc2fff91.b20fd",
            "df1cae54.a6ed38"
        ],
        "x": 255,
        "y": 2580,
        "wires": [
            [
                "7eb44e78bedd8a62"
            ]
        ]
    },
    {
        "id": "6d654b80.b160d4",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1750,
        "y": 2700,
        "wires": []
    },
    {
        "id": "ef4743b2.ec1a6",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2050,
        "y": 2740,
        "wires": [
            [
                "5e6f3c8.83ccdc4"
            ],
            [
                "c5fc62ee99b0c1e2"
            ]
        ]
    },
    {
        "id": "5e6f3c8.83ccdc4",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "14_Out",
        "mode": "link",
        "links": [
            "53f11e8b.9b099"
        ],
        "x": 3135,
        "y": 2720,
        "wires": []
    },
    {
        "id": "435a3b54.b4a2a4",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "14_In",
        "links": [
            "9cae29d0.c4e968",
            "e2cbc28f.14c87"
        ],
        "x": 255,
        "y": 2740,
        "wires": [
            [
                "3186cf8ea5b9e507"
            ]
        ]
    },
    {
        "id": "a7bba83c.5d8f08",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2050,
        "y": 2920,
        "wires": [
            [
                "4c0c0431.1e281c"
            ],
            [
                "a19fe280a1be4f25"
            ]
        ]
    },
    {
        "id": "4c0c0431.1e281c",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "15_Out",
        "mode": "link",
        "links": [
            "caf9273bf9a8afc4"
        ],
        "x": 3135,
        "y": 2900,
        "wires": []
    },
    {
        "id": "7d69972e.3f3438",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "15_In",
        "links": [
            "bd3936e8.a36fc8",
            "2f34781a.c3a4b",
            "0bc19d258678bba4"
        ],
        "x": 255,
        "y": 2920,
        "wires": [
            [
                "d9cf551c464c4337"
            ]
        ]
    },
    {
        "id": "c482c970.3a3208",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1585.5833740234375,
        "y": 1419.7291259765625,
        "wires": []
    },
    {
        "id": "70cd80e0.d38d9",
        "type": "comment",
        "z": "fd31082e.5487d8",
        "name": "AAS Rosource Monitoring - Component Manger",
        "info": "",
        "x": 620,
        "y": 4200,
        "wires": []
    },
    {
        "id": "5c14e4cb.c5e47c",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 670,
        "y": 260,
        "wires": []
    },
    {
        "id": "c7097b80.b03428",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 770,
        "y": 3920,
        "wires": []
    },
    {
        "id": "3f7c074f.d35dc8",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1170,
        "y": 180,
        "wires": []
    },
    {
        "id": "5c80f7ac.2fc2b8",
        "type": "comment",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "Interaction with AAS - NBI",
        "info": "",
        "x": 550,
        "y": 3860,
        "wires": []
    },
    {
        "id": "5ee56f7a.9622a",
        "type": "comment",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "Interaction with AAS - SBI",
        "info": "",
        "x": 430,
        "y": 3137,
        "wires": []
    },
    {
        "id": "d9a0c300.9f2b7",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "18_In",
        "links": [
            "48ef191e.d28c98"
        ],
        "x": 255,
        "y": 3760,
        "wires": [
            [
                "33dfaad2.2f66be"
            ]
        ]
    },
    {
        "id": "1619def7.8eb651",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "18_Out",
        "links": [
            "e7a9e126.1cef"
        ],
        "x": 3135,
        "y": 3760,
        "wires": []
    },
    {
        "id": "8ce06b86.c8f5a8",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "1_1_In",
        "links": [
            "ece6df22.01841"
        ],
        "x": 235,
        "y": 860,
        "wires": [
            [
                "facb362b.6dd0b"
            ]
        ]
    },
    {
        "id": "26fb4e32.c32dca",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "1_1_Out",
        "links": [
            "fff82399.2f49b"
        ],
        "x": 3135,
        "y": 900,
        "wires": []
    },
    {
        "id": "facb362b.6dd0b",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "IF_Manifest_File_Metadata",
        "property": "req.files.driver",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 860,
        "wires": [
            [
                "5d60ba62.14ca9c"
            ],
            [
                "278375b4.b88e82"
            ]
        ]
    },
    {
        "id": "fc0a9d8e.12c52",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1070,
        "y": 780,
        "wires": []
    },
    {
        "id": "5d60ba62.14ca9c",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "Read File ",
        "func": "var fs = context.global.get('fs');\nvar content = \"\";\nfs.readFile(msg.req.files.driver[0].path, \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    content = data;\n\n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    processFile();          // Or put the next step in a function and invoke it\n});\n\nfunction processFile() {\n    msg.payload = content;\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 840,
        "wires": [
            [
                "fc0a9d8e.12c52",
                "26fb4e32.c32dca",
                "f822f55e.4e556"
            ]
        ]
    },
    {
        "id": "ae1b6bc.0e50598",
        "type": "addflow",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 1640,
        "y": 820,
        "wires": [
            [
                "c5b5c618.111a08"
            ]
        ]
    },
    {
        "id": "ed752512.71a7e",
        "type": "delflow",
        "z": "fd31082e.5487d8",
        "name": "",
        "enabled": true,
        "x": 1640,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "f822f55e.4e556",
        "type": "json",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1230,
        "y": 800,
        "wires": [
            [
                "e50371db.c6daf8"
            ]
        ]
    },
    {
        "id": "e50371db.c6daf8",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "Get FlowIds",
        "func": "var drivers = context.global.get(\"Drivers\");\nfor (var element in drivers){\n    if(msg.payload.id === drivers[element].id || msg.payload.label === drivers[element].label){\n        msg.flowId = drivers[element].id;\n        drivers.splice(1, element);\n        context.global.set(\"Drivers\", drivers);\n        return [msg, msg];\n    }\n}\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 1390,
        "y": 800,
        "wires": [
            [
                "ed752512.71a7e"
            ],
            [
                "ae1b6bc.0e50598"
            ]
        ]
    },
    {
        "id": "c5b5c618.111a08",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1810,
        "y": 820,
        "wires": []
    },
    {
        "id": "278375b4.b88e82",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "Read File Null",
        "func": "msg.statusCode = 400;\nmsg.payload = \"no attached file\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 880,
        "wires": [
            [
                "26fb4e32.c32dca"
            ]
        ]
    },
    {
        "id": "ce89582d.5a4aa8",
        "type": "inject",
        "z": "fd31082e.5487d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 40,
        "wires": [
            [
                "adb4e3c0.abff4"
            ]
        ]
    },
    {
        "id": "adb4e3c0.abff4",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "Set Global Context",
        "func": "\nvar os = context.global.get('os');\nvar path = context.global.get('path');\nvar fs = context.global.get('fs');\n\ncontext.global.set(\"Drivers\", []);\n\nvar interfaces = os.networkInterfaces();\nvar addresses = [];\n\nfor (var k in interfaces) {\n    for (var k2 = 0; k2 < interfaces[k].length; k2++) {\n        var address = interfaces[k][k2];\n        if (address.family === 'IPv4' && !address.internal) {\n            addresses.push(address.address);\n        }\n    }\n}\n\nvar host = addresses[0];\nvar port = context.global.get('uiPort');\n\n\ncontext.global.set('namespace',\"http://\" + host + \":\" + port);\n\n                   \n//Retrieving the home directory\nvar homedirectory = context.global.get('staticDocs');\nvar asmodelfolderRef = \"aasx/_rels/aasx-origin.rels\";\n\nvar modelDirRef = path.join(homedirectory, asmodelfolderRef);\ncontext.global.set(\"ModelDirRef\", modelDirRef);\nmsg.filename = modelDirRef;\n\nvar msg2 = {};\nvar thumbnailRef = \"_rels/.rels\";\n\nvar thumbnailDirRef = path.join(homedirectory, thumbnailRef);\ncontext.global.set(\"AssetThumbnailRef\", thumbnailDirRef);\nmsg2.filename = thumbnailDirRef;\n\n\n\n\nvar novaasIdentifier = context.global.get(\"AASIdentifier\") || \"\";\nif(novaasIdentifier === \"\"){\n    novaasIdentifier = \"http://novaas@\" + host + \":\" + port + \"/aas\";\n}\n\ncontext.global.set(\"AASIdentifier\", novaasIdentifier);\n\nreturn [msg, msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 630,
        "y": 40,
        "wires": [
            [
                "5da4edd2.1f440c"
            ],
            [
                "b552652f.7d8388"
            ]
        ]
    },
    {
        "id": "a26f2e9e.3d0a3",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 20,
        "wires": []
    },
    {
        "id": "fed0a648.1a3cd",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "19_In",
        "links": [
            "23e7fb8f.11fddc"
        ],
        "x": 235,
        "y": 1136,
        "wires": [
            [
                "b677c31c1533e1c7"
            ]
        ]
    },
    {
        "id": "40e9769.02d7288",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "19_Out",
        "links": [
            "e2c6dfcd.e05b7"
        ],
        "x": 3135,
        "y": 1136,
        "wires": []
    },
    {
        "id": "81714045.0e50c8",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1610,
        "y": 1300,
        "wires": []
    },
    {
        "id": "13290de2.def292",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "20_In",
        "links": [
            "d0bce444.7eb068"
        ],
        "x": 235,
        "y": 1320,
        "wires": [
            [
                "9b03ef7402cc280e"
            ]
        ]
    },
    {
        "id": "b14ea23f.c308a8",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "20_Out",
        "links": [
            "eb085e57.c9db48"
        ],
        "x": 3135,
        "y": 1320,
        "wires": []
    },
    {
        "id": "687c3d5c.dfc7ac",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 1700,
        "wires": []
    },
    {
        "id": "f8458ab6.efa688",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "21_In",
        "links": [
            "727480a5.4236c"
        ],
        "x": 235,
        "y": 1720,
        "wires": [
            [
                "bab93b53cbb3d116"
            ]
        ]
    },
    {
        "id": "d8719524.0097b",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "21_Out",
        "links": [
            "a4eb92d0.81718"
        ],
        "x": 3135,
        "y": 1720,
        "wires": []
    },
    {
        "id": "be37d7a0.4489e",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "22_In",
        "links": [
            "568d5f3.624242",
            "400d9646.413fe8"
        ],
        "x": 258,
        "y": 3437,
        "wires": [
            [
                "555ce72ca0d7dfd4"
            ]
        ]
    },
    {
        "id": "c757ee5b.08a1f8",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "22_Out",
        "links": [
            "d5524b85.c3c27",
            "7acbb909.02b518"
        ],
        "x": 3134,
        "y": 3437,
        "wires": []
    },
    {
        "id": "3e11fc1c.d74334",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "CallbackIn",
        "links": [
            "e05fcd52.be3ca8",
            "84b54255.d93878"
        ],
        "x": 255,
        "y": 3940,
        "wires": [
            [
                "c7097b80.b03428",
                "6c10cd375f817bbf"
            ]
        ]
    },
    {
        "id": "1f1ce2c5.9cb5cd",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2390,
        "y": 3940,
        "wires": []
    },
    {
        "id": "d7f84005.ce11e8",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "status_SBI_In",
        "links": [
            "796fdeb5.8f68b8",
            "898d8bc.861cc78"
        ],
        "x": 255,
        "y": 3597,
        "wires": [
            [
                "21eb2aa8ef422845"
            ]
        ]
    },
    {
        "id": "162cb66c.3b7292",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "check AAS Status",
        "func": "var manifest = msg.payload;\nif(manifest != \"\" && manifest.submodels.length > 0){\n    var statusCheckSBI = context.global.get(\"statusCheckSBI\");\n    if(statusCheckSBI.connected){\n        if(statusCheckSBI.nrOfDataSources > 0){\n            if((typeof context.global.get('namespace') !== \"undefined\")){\n                context.global.set(\"NOVAAS_Overall_Status\", \"ok\");\n                msg.payload = context.global.get(\"NOVAAS_Overall_Status\");\n                return msg;\n            }\n        }\n    }\n}\ncontext.global.set(\"NOVAAS_Overall_Status\", \"not_ok\");\nmsg.payload = context.global.get(\"NOVAAS_Overall_Status\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 3597,
        "wires": [
            [
                "b88a92c6.fb547"
            ]
        ]
    },
    {
        "id": "9f810b8b.7a1b8",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 3557,
        "wires": []
    },
    {
        "id": "b88a92c6.fb547",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "NOVAAS_status_UI_out",
        "mode": "link",
        "links": [],
        "x": 3135,
        "y": 3597,
        "wires": []
    },
    {
        "id": "3319bd2e.c8291a",
        "type": "OS",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 1370,
        "y": 4300,
        "wires": [
            [
                "713f7fd4.702168",
                "55e2ca10e19a319e"
            ]
        ]
    },
    {
        "id": "6f1b8422.f0673c",
        "type": "inject",
        "z": "fd31082e.5487d8",
        "name": "Test",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1170,
        "y": 4280,
        "wires": [
            [
                "3319bd2e.c8291a"
            ]
        ]
    },
    {
        "id": "713f7fd4.702168",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 4280,
        "wires": []
    },
    {
        "id": "34b6971b.cc224",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "set Model Filepath",
        "func": "var modelFilePath = context.global.get(\"staticDocs\").slice(0, -1) + msg.payload.Relationships.Relationship[0].$.Target;\ncontext.global.set(\"ModelFilePath\", modelFilePath);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 40,
        "wires": [
            [
                "a26f2e9e.3d0a3",
                "1686c59a.31af6a"
            ]
        ]
    },
    {
        "id": "5da4edd2.1f440c",
        "type": "file in",
        "z": "fd31082e.5487d8",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1070,
        "y": 40,
        "wires": [
            [
                "2ac4939d.2c7be4"
            ]
        ]
    },
    {
        "id": "2ac4939d.2c7be4",
        "type": "xml",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1210,
        "y": 40,
        "wires": [
            [
                "34b6971b.cc224"
            ]
        ]
    },
    {
        "id": "b552652f.7d8388",
        "type": "file in",
        "z": "fd31082e.5487d8",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1070,
        "y": 100,
        "wires": [
            [
                "f98581a.2ae798"
            ]
        ]
    },
    {
        "id": "f98581a.2ae798",
        "type": "xml",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1210,
        "y": 100,
        "wires": [
            [
                "c2016cbb.a6e598"
            ]
        ]
    },
    {
        "id": "c2016cbb.a6e598",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "set Thumbnail Filepath",
        "func": "var thumbnailFilePath = msg.payload.Relationships.Relationship[1].$.Target;\ncontext.global.set(\"ThumbnailFilePath\", thumbnailFilePath);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 100,
        "wires": [
            [
                "46ff0e8a.9a3288"
            ]
        ]
    },
    {
        "id": "46ff0e8a.9a3288",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1630,
        "y": 100,
        "wires": []
    },
    {
        "id": "33dfaad2.2f66be",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "PrepareOutput",
        "func": "//msg.filename = msg.payload.value;\n//msg.staticDocs = \"/home/gido/.node-red-novaas/\";\nvar fn = msg.req.params.fn;\n//msg.filename = context.global.get('staticDocs') + \"aasx/Document/\" + fn;\nmsg.payload = \"-name\" + \" \" + fn;\n//msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 3757,
        "wires": [
            [
                "2c5fff4c.088d18"
            ]
        ]
    },
    {
        "id": "389ecac2.32281e",
        "type": "file in",
        "z": "fd31082e.5487d8",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1870,
        "y": 3737,
        "wires": [
            [
                "1619def7.8eb651"
            ]
        ]
    },
    {
        "id": "9454af3.ef43f5",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 3737,
        "wires": [
            [
                "389ecac2.32281e"
            ]
        ]
    },
    {
        "id": "2c5fff4c.088d18",
        "type": "exec",
        "z": "fd31082e.5487d8",
        "command": "find",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1270,
        "y": 3757,
        "wires": [
            [
                "92440de2.fa50f8",
                "3bc52742.f5a13"
            ],
            [],
            []
        ]
    },
    {
        "id": "92440de2.fa50f8",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 3717,
        "wires": []
    },
    {
        "id": "3bc52742.f5a13",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "PrepareOutput",
        "func": "//msg.filename = msg.payload.value;\n//msg.staticDocs = \"/home/gido/.node-red-novaas/\";\nif(msg.payload != \"\"){\n    msg.filename = msg.payload;\n    //msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\n    return [msg, null];\n} else {\n    msg.payload = \"document Not found\"\n    return [null, msg];\n}\n\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 1500,
        "y": 3757,
        "wires": [
            [
                "9454af3.ef43f5"
            ],
            [
                "1619def7.8eb651"
            ]
        ]
    },
    {
        "id": "1686c59a.31af6a",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "init_model_path_out",
        "links": [
            "ad8fbd86.506ae8",
            "c9de3df7.c99ee"
        ],
        "x": 1815,
        "y": 40,
        "wires": []
    },
    {
        "id": "f4a43138271a8989",
        "type": "unsafe-function",
        "z": "fd31082e.5487d8",
        "name": "Read File ",
        "func": "var fs = context.global.get('fs');\nvar content = \"\";\nfs.readFile(context.global.get('ModelFilePath'), \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    content = data;\n\n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    processFile();          // Or put the next step in a function and invoke it\n});\n\nfunction processFile() {\n    msg.payload = content;\n    node.send(msg);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 220,
        "wires": [
            [
                "3f7c074f.d35dc8",
                "b631ea1ebc90bca5"
            ]
        ]
    },
    {
        "id": "c6c88b8651fc6ecf",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa",
            "57aec539a62e6dfa"
        ],
        "x": 2980,
        "y": 280,
        "wires": [],
        "l": true
    },
    {
        "id": "11e91e4d13917d49",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa",
            "57aec539a62e6dfa"
        ],
        "x": 2320,
        "y": 2000,
        "wires": [],
        "l": true
    },
    {
        "id": "ae28f53c34d8b949",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa",
            "57aec539a62e6dfa"
        ],
        "x": 2340,
        "y": 2100,
        "wires": [],
        "l": true
    },
    {
        "id": "b2811a59a9c3a985",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa",
            "57aec539a62e6dfa"
        ],
        "x": 2340,
        "y": 2280,
        "wires": [],
        "l": true
    },
    {
        "id": "adf27afba7c3b724",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa",
            "57aec539a62e6dfa"
        ],
        "x": 2360,
        "y": 2600,
        "wires": [],
        "l": true
    },
    {
        "id": "c5fc62ee99b0c1e2",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa",
            "57aec539a62e6dfa"
        ],
        "x": 2360,
        "y": 2760,
        "wires": [],
        "l": true
    },
    {
        "id": "a19fe280a1be4f25",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "links": [
            "f5d81204558f97fa",
            "57aec539a62e6dfa"
        ],
        "x": 2360,
        "y": 2940,
        "wires": [],
        "l": true
    },
    {
        "id": "b631ea1ebc90bca5",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "f8e2cdcf35feb9b2"
        ],
        "timeout": "30",
        "x": 1390,
        "y": 220,
        "wires": [
            [
                "a57df28d.f36db",
                "c6c88b8651fc6ecf"
            ]
        ]
    },
    {
        "id": "48745191cfba1eda",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "timeout": "30",
        "x": 1470,
        "y": 1000,
        "wires": [
            [
                "187a900c.5b1af"
            ]
        ]
    },
    {
        "id": "a767bb2ac4ab46a1",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "cfe951f06c55831e"
        ],
        "timeout": "30",
        "x": 1470,
        "y": 1060,
        "wires": [
            [
                "420d2b35.ef98e4"
            ]
        ]
    },
    {
        "id": "b677c31c1533e1c7",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "e5e3e5e6456ee35c"
        ],
        "timeout": "30",
        "x": 1470,
        "y": 1140,
        "wires": [
            [
                "027d051c81f07494"
            ]
        ]
    },
    {
        "id": "cc11aad75f06e46f",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "2fc9f75cb156754d"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 1220,
        "wires": [
            [
                "f7372cb457f5e7df"
            ]
        ]
    },
    {
        "id": "9b03ef7402cc280e",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "40913d2d8a161a11"
        ],
        "timeout": "30",
        "x": 1470,
        "y": 1320,
        "wires": [
            [
                "81714045.0e50c8",
                "7540b688d1ccfbd8"
            ]
        ]
    },
    {
        "id": "8463fbcf17bbb837",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "2e0bc58c812ae978"
        ],
        "timeout": "30",
        "x": 1470,
        "y": 1580,
        "wires": [
            [
                "e22aaf22.a1f3e",
                "d57f58bc77ffcb8b"
            ]
        ]
    },
    {
        "id": "bab93b53cbb3d116",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "53bc4f2d72d3363a"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 1720,
        "wires": [
            [
                "687c3d5c.dfc7ac",
                "1b23f529d28b3c8d"
            ]
        ]
    },
    {
        "id": "1c4b441450fae9ce",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "73fa67f7ce94427b"
        ],
        "timeout": "30",
        "x": 1470,
        "y": 1800,
        "wires": [
            [
                "33d6ebc0.3cf344",
                "de98fa9db5e7edf4"
            ]
        ]
    },
    {
        "id": "50e0d36efda01619",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "012ebb5641006b90"
        ],
        "timeout": "30",
        "x": 1480,
        "y": 2080,
        "wires": [
            [
                "17f97360.c6ae7d",
                "48a59aa4.9ad814"
            ]
        ]
    },
    {
        "id": "77f5c1549ab2c139",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "f5cc371119932661"
        ],
        "timeout": "30",
        "x": 1460,
        "y": 1960,
        "wires": [
            [
                "1aa365b1.9f918a",
                "6860b43e.8de27c"
            ]
        ]
    },
    {
        "id": "5d2f27b0b0ccaf5f",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "64e0e16be8a6705d"
        ],
        "timeout": "30",
        "x": 1470,
        "y": 2220,
        "wires": [
            [
                "99d81682.e9c548",
                "2ec6555c.148e2a"
            ]
        ]
    },
    {
        "id": "1d0d971feff52be8",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "9c413192820ac72d"
        ],
        "timeout": "30",
        "x": 1510,
        "y": 2540,
        "wires": [
            [
                "3cae4c9a.680424",
                "72079a3a.bbba24"
            ]
        ]
    },
    {
        "id": "3186cf8ea5b9e507",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "183a7366ee87aed5"
        ],
        "timeout": "30",
        "x": 1520,
        "y": 2740,
        "wires": [
            [
                "6d654b80.b160d4",
                "ef4743b2.ec1a6"
            ]
        ]
    },
    {
        "id": "ef027ffb4cdf7faa",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "fa81926752921ab7"
        ],
        "timeout": "30",
        "x": 1540,
        "y": 2900,
        "wires": [
            [
                "a7bba83c.5d8f08"
            ]
        ]
    },
    {
        "id": "21eb2aa8ef422845",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "",
        "links": [
            "cfe951f06c55831e"
        ],
        "timeout": "30",
        "x": 710,
        "y": 3597,
        "wires": [
            [
                "9f810b8b.7a1b8",
                "162cb66c.3b7292"
            ]
        ]
    },
    {
        "id": "555ce72ca0d7dfd4",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "",
        "links": [
            "02bb228b85db556d"
        ],
        "timeout": "30",
        "x": 1600,
        "y": 3437,
        "wires": [
            [
                "c757ee5b.08a1f8"
            ]
        ]
    },
    {
        "id": "6c10cd375f817bbf",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "links": [
            "99b95b4d975cf063"
        ],
        "timeout": "30",
        "x": 1420,
        "y": 3937,
        "wires": [
            [
                "1f1ce2c5.9cb5cd"
            ]
        ]
    },
    {
        "id": "85c75f263483de4b",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "OSsysDscr in",
        "links": [],
        "x": 255,
        "y": 4300,
        "wires": [
            [
                "3319bd2e.c8291a"
            ]
        ]
    },
    {
        "id": "55e2ca10e19a319e",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "OSsysDscr out",
        "mode": "return",
        "links": [],
        "x": 2315,
        "y": 4300,
        "wires": []
    },
    {
        "id": "0277e205fc7c4018",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "86b4b166afaa8721"
        ],
        "timeout": "30",
        "x": 1330,
        "y": 2400,
        "wires": [
            [
                "8188be80.74de4",
                "473173ab2a027b36"
            ]
        ]
    },
    {
        "id": "7b48ced64946a8d2",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "updateValueCallbackIn",
        "links": [
            "1fc06f6a8f3492b8"
        ],
        "x": 255,
        "y": 4017,
        "wires": [
            [
                "893f967b73205095",
                "4872c068f48e839b"
            ]
        ]
    },
    {
        "id": "893f967b73205095",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 470,
        "y": 3977,
        "wires": []
    },
    {
        "id": "5cea18b9856d1364",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "links": [
            "fa81926752921ab7"
        ],
        "timeout": "30",
        "x": 850,
        "y": 4017,
        "wires": [
            [
                "e1994719bd7b4722"
            ]
        ]
    },
    {
        "id": "e1994719bd7b4722",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2390,
        "y": 4017,
        "wires": []
    },
    {
        "id": "4872c068f48e839b",
        "type": "function",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "prepareUpdate",
        "func": "let splittedLink = [];\nsplittedLink = msg.link.split(\"/\");\nlet submodelId = splittedLink[splittedLink.length - 2];\nlet id = splittedLink[splittedLink.length - 1];\nlet aasId = msg.link.replace(\"/\" + submodelId + \"/\" + id, \"\");\nmsg.req = {\n    \"params\": { \"id\": id, \"submodelId\": submodelId, \"aasid\": aasId },\n    \"query\": { \"content\": msg.content }\n};\nif (Array.isArray(msg.value)) {\n    msg.value = msg.value.join(\";\");\n}\nmsg.payload = {};\nmsg.payload[id] = msg.value;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 4017,
        "wires": [
            [
                "a9c22279a032d681",
                "5cea18b9856d1364"
            ]
        ]
    },
    {
        "id": "a9c22279a032d681",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 730,
        "y": 3977,
        "wires": []
    },
    {
        "id": "473173ab2a027b36",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2030,
        "y": 2400,
        "wires": [
            [
                "3baa6a51.8f0c46"
            ],
            [
                "5b7cc2a7fed6a732"
            ]
        ]
    },
    {
        "id": "5b7cc2a7fed6a732",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\n\nlet filterNamespaceUrl = msg.req.url.replace(context.global.get('namespace'), \"\");\nlet filterAPIElements1Url = filterNamespaceUrl.replace(\"/aasServer/shells/\", \"\");\nlet filterAPIElements2Url = filterAPIElements1Url.replace(\"/aas/submodels\", \"\");\nlet filterAPIElements3Url = filterAPIElements2Url.replace(\"/submodel/submodel-elements\", \"\");\n\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"Output\";\nlogEvent.observableReference = decodeURIComponent(filterAPIElements3Url.trim());\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = msg.payload.value;\n\nif(msg.payload.modelType.name == \"Property\"){\n    msg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\";\n} else if (msg.payload.modelType.name == \"File\"){\n    msg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, link) VALUES ($aasId, $observableRef, $timestamp, $link)\";\n}\nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2300,
        "y": 2440,
        "wires": [
            [
                "1cb938c7cc1ad367",
                "c21dc6455514a760"
            ]
        ]
    },
    {
        "id": "1cb938c7cc1ad367",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2650,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "c21dc6455514a760",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2650,
        "y": 2500,
        "wires": []
    },
    {
        "id": "7540b688d1ccfbd8",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "req.query.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Normal",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "eq",
                "v": "Trimmed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reference",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 1790,
        "y": 1320,
        "wires": [
            [
                "bf8d1775bedc9126"
            ],
            [
                "bf8d1775bedc9126"
            ],
            [
                "87bce6429de98178"
            ],
            [
                "2d2b37ca7cbfdbc1"
            ],
            [
                "76be2c591d65fa6f"
            ]
        ]
    },
    {
        "id": "87bce6429de98178",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Trimmed Shells",
        "func": "let shell = msg.payload;\nlet trimmedShell = {};\ntrimmedShell.hasDataSpecification = shell.hasDataSpecification;\ntrimmedShell.derivedFrom = shell.derivedFrom;\ntrimmedShell.conceptDictionaries = shell.conceptDictionaries;\ntrimmedShell.identification = shell.identification;\ntrimmedShell.administration = shell.administration;\ntrimmedShell.idShort = shell.idShort;\ntrimmedShell.modelType = shell.modelType;\n\nmsg.payload = trimmedShell;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 1320,
        "wires": [
            [
                "0cf42e9cc5365c9d"
            ]
        ]
    },
    {
        "id": "2d2b37ca7cbfdbc1",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Reference to Shells",
        "func": "let shell = msg.payload;\nlet referenceShell = {};\nreferenceShell.idShort = shell.idShort;\n    \nmsg.payload = referenceShell;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 1360,
        "wires": [
            [
                "0cf42e9cc5365c9d"
            ]
        ]
    },
    {
        "id": "d57f58bc77ffcb8b",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "req.query.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Normal",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "eq",
                "v": "Trimmed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reference",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Value",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 1790,
        "y": 1580,
        "wires": [
            [
                "4f66f53de68a468a"
            ],
            [
                "4f66f53de68a468a"
            ],
            [
                "da901f7ac6c9bcfb"
            ],
            [
                "56f89495c40f9077"
            ],
            [
                "764d3739e6d35d5f"
            ],
            [
                "406069fe371c496c"
            ]
        ]
    },
    {
        "id": "da901f7ac6c9bcfb",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Trimmed Submodels",
        "func": "let submodels = msg.payload;\nlet trimmedSubmodels = [];\nfor(let index = 0; index < submodels.length; index++){\n    let submodel = submodels[index];\n    let trimmedSubmodel = {};\n    trimmedSubmodel.semanticId = submodel.semanticId;\n    trimmedSubmodel.qualifiers = submodel.qualifiers;\n    trimmedSubmodel.hasDataSpecification = submodel.hasDataSpecification;\n    trimmedSubmodel.identification = submodel.identification;\n    trimmedSubmodel.idShort = submodel.idShort;\n    trimmedSubmodel.modelType = submodel.modelType;\n    trimmedSubmodels.push(trimmedSubmodel);\n}\n\nmsg.payload = trimmedSubmodels;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1580,
        "wires": [
            [
                "32e4c48636bc81e8"
            ]
        ]
    },
    {
        "id": "56f89495c40f9077",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Reference to Submodels",
        "func": "let submodels = msg.payload;\nlet referenceSubmodels = [];\nfor(let index = 0; index < submodels.length; index++){\n    let submodel = submodels[index];\n    let referenceSubmodel = {};\n    referenceSubmodel.idShort = submodel.idShort;\n    referenceSubmodels.push(referenceSubmodel)\n}\n\nmsg.payload = referenceSubmodels;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "de98fa9db5e7edf4",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "req.query.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Normal",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "eq",
                "v": "Trimmed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reference",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Value",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 1790,
        "y": 1800,
        "wires": [
            [
                "d2fa44933ad7f7bc"
            ],
            [
                "d2fa44933ad7f7bc"
            ],
            [
                "e28fcc33c52a273f"
            ],
            [
                "eaf8e273f0c5a16d"
            ],
            [
                "c1c22f4c94942222"
            ],
            [
                "078534f3f21e5749"
            ]
        ]
    },
    {
        "id": "e28fcc33c52a273f",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Trimmed Submodel",
        "func": "let submodel = msg.payload;\nlet trimmedSubmodel = {};\n\ntrimmedSubmodel.semanticId = submodel.semanticId;\ntrimmedSubmodel.qualifiers = submodel.qualifiers;\ntrimmedSubmodel.hasDataSpecification = submodel.hasDataSpecification;\ntrimmedSubmodel.identification = submodel.identification;\ntrimmedSubmodel.idShort = submodel.idShort;\ntrimmedSubmodel.modelType = submodel.modelType;\n\nmsg.payload = trimmedSubmodel;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 1800,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "eaf8e273f0c5a16d",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Reference to Submodel",
        "func": "let submodel = msg.payload;\nlet referenceSubmodel = {};\nreferenceSubmodel.idShort = submodel.idShort;\n    \nmsg.payload = referenceSubmodel;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1840,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "c1c22f4c94942222",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Not yet Supported",
        "func": "msg.payload = \"Not yet Supported\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 1880,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "76be2c591d65fa6f",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Bad Request",
        "func": "msg.statusCode = 400;\nmsg.payload = \"Bad Request\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 1400,
        "wires": [
            [
                "0cf42e9cc5365c9d"
            ]
        ]
    },
    {
        "id": "764d3739e6d35d5f",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Not yet Supported",
        "func": "msg.payload = \"Not yet Supported\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 1660,
        "wires": [
            [
                "32e4c48636bc81e8"
            ]
        ]
    },
    {
        "id": "078534f3f21e5749",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Bad Request",
        "func": "msg.statusCode = 400;\nmsg.payload = \"Bad Request\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 1920,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "406069fe371c496c",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Bad Request",
        "func": "msg.statusCode = 400;\nmsg.payload = \"Bad Request\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 1700,
        "wires": [
            [
                "32e4c48636bc81e8"
            ]
        ]
    },
    {
        "id": "027d051c81f07494",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2330,
        "y": 1140,
        "wires": [
            [
                "40e9769.02d7288"
            ],
            [
                "87cc8612fd2fa954"
            ]
        ]
    },
    {
        "id": "87cc8612fd2fa954",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + splittedUrl[splittedUrl.length - 1];\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2600,
        "y": 1160,
        "wires": [
            [
                "2f60b1f4e43f787e"
            ]
        ]
    },
    {
        "id": "2f60b1f4e43f787e",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "9e53ceb7c065e802",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2950,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "f7372cb457f5e7df",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2330,
        "y": 1220,
        "wires": [
            [
                "c309c489.5ba748"
            ],
            [
                "719ba18e034b2b15"
            ]
        ]
    },
    {
        "id": "719ba18e034b2b15",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + splittedUrl[splittedUrl.length - 1];\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 1260,
        "wires": [
            [
                "edecbc60fa8a5d1b"
            ]
        ]
    },
    {
        "id": "edecbc60fa8a5d1b",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2930,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "a9f85b8570718f9c",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2350,
        "y": 1340,
        "wires": [
            [
                "b14ea23f.c308a8"
            ],
            [
                "f7e895b5e00d052c"
            ]
        ]
    },
    {
        "id": "f7e895b5e00d052c",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2600,
        "y": 1360,
        "wires": [
            [
                "ffc4e5e8582000c2"
            ]
        ]
    },
    {
        "id": "ffc4e5e8582000c2",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "f1192e81b068366b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2950,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "e43904b134cd7e13",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2370,
        "y": 1580,
        "wires": [
            [
                "7cec632.7e15b9c"
            ],
            [
                "9ebcd6beaf9c5e5a"
            ]
        ]
    },
    {
        "id": "9ebcd6beaf9c5e5a",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 1620,
        "wires": [
            [
                "998fa797027224c5"
            ]
        ]
    },
    {
        "id": "998fa797027224c5",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "a4706f79574c7b6e",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2970,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "1b23f529d28b3c8d",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2370,
        "y": 1720,
        "wires": [
            [
                "d8719524.0097b"
            ],
            [
                "ae1b12ed8743afcb"
            ]
        ]
    },
    {
        "id": "ae1b12ed8743afcb",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 1760,
        "wires": [
            [
                "73a5f11defe17fa4"
            ]
        ]
    },
    {
        "id": "73a5f11defe17fa4",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "6b5b20832e62c73e",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2990,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "ce3d1cd7dad67519",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2390,
        "y": 1800,
        "wires": [
            [
                "abd5525b.19111"
            ],
            [
                "eb97e9b51c933569"
            ]
        ]
    },
    {
        "id": "54a50a843fd134bc",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "9d66e0f86e14f46d",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 3010,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "eb97e9b51c933569",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2660,
        "y": 1860,
        "wires": [
            [
                "54a50a843fd134bc"
            ]
        ]
    },
    {
        "id": "011c7dbb515cfacf",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "Content-Type",
        "property": "req.headers['content-type']",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "application/json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 700,
        "y": 1980,
        "wires": [
            [
                "77f5c1549ab2c139"
            ],
            [
                "7bde976648a4afdd"
            ]
        ]
    },
    {
        "id": "7bde976648a4afdd",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Not Understood\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 2000,
        "wires": [
            [
                "6860b43e.8de27c"
            ]
        ]
    },
    {
        "id": "12ec04d558dab59c",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "Content-Type",
        "property": "req.headers['content-type']",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "application/json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 700,
        "y": 2260,
        "wires": [
            [
                "5d2f27b0b0ccaf5f"
            ],
            [
                "bca57c0d33d1ffab"
            ]
        ]
    },
    {
        "id": "bca57c0d33d1ffab",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Not Understood\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 2280,
        "wires": [
            [
                "2ec6555c.148e2a"
            ]
        ]
    },
    {
        "id": "7eb44e78bedd8a62",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "Content-Type",
        "property": "req.headers['content-type']",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "application/json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 700,
        "y": 2580,
        "wires": [
            [
                "1d0d971feff52be8"
            ],
            [
                "e77527a3f32835b3"
            ]
        ]
    },
    {
        "id": "e77527a3f32835b3",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Not Understood\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 2600,
        "wires": [
            [
                "72079a3a.bbba24"
            ]
        ]
    },
    {
        "id": "d9cf551c464c4337",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "Content-Type",
        "property": "req.headers['content-type']",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "application/json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 700,
        "y": 2920,
        "wires": [
            [
                "8b1e3aa95510afc2"
            ],
            [
                "6f112bdc74f41506"
            ]
        ]
    },
    {
        "id": "6f112bdc74f41506",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Not Understood\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 2940,
        "wires": [
            [
                "a7bba83c.5d8f08"
            ]
        ]
    },
    {
        "id": "8b1e3aa95510afc2",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "req.query.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Normal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Value",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 2880,
        "wires": [
            [
                "30a79f0e8c4f4c44"
            ],
            [
                "78bce801dbd0b712"
            ]
        ]
    },
    {
        "id": "78bce801dbd0b712",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "create/set msg.value",
        "func": "msg.value = JSON.stringify(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2900,
        "wires": [
            [
                "ef027ffb4cdf7faa"
            ]
        ]
    },
    {
        "id": "30a79f0e8c4f4c44",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [
            "ab943405e80b0646"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1540,
        "y": 2860,
        "wires": [
            [
                "a7bba83c.5d8f08"
            ]
        ]
    },
    {
        "id": "15e77fdb6f5ba133",
        "type": "inject",
        "z": "fd31082e.5487d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 550,
        "y": 4540,
        "wires": [
            [
                "f823dc7f6b29ac78"
            ]
        ]
    },
    {
        "id": "f823dc7f6b29ac78",
        "type": "exec",
        "z": "fd31082e.5487d8",
        "command": "tail -f ./logfile.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 980,
        "y": 4540,
        "wires": [
            [
                "6fc59e78e64564b0",
                "6d5e23d932baeb73"
            ],
            [
                "9d65de1d1f516130"
            ],
            []
        ]
    },
    {
        "id": "9d65de1d1f516130",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 4600,
        "wires": []
    },
    {
        "id": "6fc59e78e64564b0",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 4440,
        "wires": []
    },
    {
        "id": "d3f01c41c9a534a7",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 4480,
        "wires": []
    },
    {
        "id": "6d5e23d932baeb73",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "get Events",
        "func": "var outputMsgs = [];\nlet events = msg.payload.trim().split(\"\\n\");\nfor (var e in events) {\n    outputMsgs.push({ payload: events[e] });\n}\nreturn [outputMsgs];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 4520,
        "wires": [
            [
                "066181d359f943c7"
            ]
        ]
    },
    {
        "id": "066181d359f943c7",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "get comms.auth",
        "func": "let event = msg.payload;\nif(event.includes(\"comms.auth\")){\n    return msg;\n} else return null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 4520,
        "wires": [
            [
                "0968f3f08288f133"
            ]
        ]
    },
    {
        "id": "0968f3f08288f133",
        "type": "json",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1650,
        "y": 4520,
        "wires": [
            [
                "afe5646656054e6b"
            ]
        ]
    },
    {
        "id": "afe5646656054e6b",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "process Log",
        "func": "let lastAuditLog = context.flow.get(\"lastAuditLog\");\nif(typeof lastAuditLog == \"undefined\"){\n    context.flow.set(\"lastAuditLog\", msg.payload);\n    return msg;\n} else {\n    if(lastAuditLog.event.timestamp != msg.payload.event.timestamp){\n        context.flow.set(\"lastAuditLog\", msg.payload);\n        return msg;\n    } else return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 4520,
        "wires": [
            [
                "d3f01c41c9a534a7",
                "2fd0332425941bca"
            ]
        ]
    },
    {
        "id": "2fd0332425941bca",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "// Process msg payload\n\nlet logEvent = {};\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.timestamp = msg.payload.event.timestamp;\nlogEvent.payload = msg.payload.event.user.username;\n\nmsg.topic = \"INSERT INTO accountLogs (accessAt, username) VALUES ($accessAt, $username)\";\nmsg.payload = [logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 4520,
        "wires": [
            [
                "408467fa2308a4f0",
                "bb0a33346d86364c"
            ]
        ]
    },
    {
        "id": "408467fa2308a4f0",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2370,
        "y": 4520,
        "wires": [
            []
        ]
    },
    {
        "id": "bb0a33346d86364c",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2280,
        "y": 4480,
        "wires": []
    },
    {
        "id": "67c6d794.309d08",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "PersistModel",
        "func": "var manifest = context.flow.get('manifest');\nvar manifestJsonStr = JSON.stringify(manifest);\nmsg.payload = manifestJsonStr;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 1920,
        "wires": [
            [
                "46864302963bba04"
            ]
        ]
    },
    {
        "id": "a688b662.2d1b18",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingModelFilePath",
        "func": "msg.filename = context.global.get(\"ModelFilePath\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 1920,
        "wires": [
            [
                "67c6d794.309d08"
            ]
        ]
    },
    {
        "id": "ec827ecb.501e9",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingSubmodels...",
        "func": "var manifest = context.flow.get(\"manifest\");\nmsg.payload = manifest.submodels;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 500,
        "wires": [
            [
                "2260c322068373cd"
            ]
        ]
    },
    {
        "id": "d5c9f97f.61a3f8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].submodels.keys\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 640,
        "wires": [
            [
                "86347903.b492c8"
            ]
        ]
    },
    {
        "id": "93cc4b55.7bd498",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar submodel = msg.payload;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId + \"'].submodels.keys[value='\" + submodel.identification.id + \"']\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 720,
        "wires": [
            [
                "7e7dc061.190f9",
                "725dc272f81933b2"
            ]
        ]
    },
    {
        "id": "3d51a1c1.b8b6ce",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].submodels\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 840,
        "wires": [
            [
                "15e890d4.de552f"
            ]
        ]
    },
    {
        "id": "e410ab6a.5218c8",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 837,
        "wires": [
            [
                "52e528996d833792",
                "e6c3848135c0d875"
            ],
            [
                "52e528996d833792"
            ]
        ]
    },
    {
        "id": "4b7901f0.6bbe8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "UpdatingSubmodel...",
        "func": "var submodel = msg.payload;\n\nif(msg.jsonataStatus == \"Success\"){\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    for(var element = 0; element < submodels.length; element++){\n        if(submodels[element].identification.id == submodel.identification.id){\n            submodels[element] = submodel;\n            msg.statusCode = \"200\";\n            context.flow.set(\"manifest\", manifest);\n            return msg;\n        }\n    }\n} else {\n   msg.payload = \"Error submodel not found\";\n    msg.statusCode = \"409\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 1000,
        "wires": [
            [
                "9ff89318.c7ef7"
            ]
        ]
    },
    {
        "id": "9ff89318.c7ef7",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 1000,
        "wires": [
            [
                "c6f2ebed8beb7fcd",
                "e8d3c684d0d7eba8"
            ],
            [
                "e8d3c684d0d7eba8"
            ]
        ]
    },
    {
        "id": "e7377ce7.f77bc",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingEnvironment...",
        "func": "msg.payload = context.flow.get(\"manifest\");\nmsg.AASID = context.flow.get('AASIdentifier');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 240,
        "wires": [
            [
                "e27443b73694af6b"
            ]
        ]
    },
    {
        "id": "4260177f.c688c8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "AddSubmodelElement",
        "func": "if(msg.jsonataStatus == \"Success\"){\n    msg.payload = \"Error submodelElement ID already exists\";\n    msg.statusCode = \"409\";\n    return msg;\n} else {\n    var submodel = JSON.parse(msg.submodelJsonStr);\n    submodel.submodelElements.push(msg.submodelElement);\n    msg.payload = submodel;\n    return msg;\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1640,
        "y": 1180,
        "wires": [
            [
                "6e36a0dd.0aff2"
            ]
        ]
    },
    {
        "id": "6e36a0dd.0aff2",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "409",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1840,
        "y": 1180,
        "wires": [
            [
                "9838633ea1b4686f"
            ],
            [
                "bb10f0b5176f7432"
            ]
        ]
    },
    {
        "id": "9af1e8ba.14f4a8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingAssets...",
        "func": "var ShellId = msg.req.params.aasid;\nif(msg.jsonataStatus == \"Success\"){\n    var keys = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var assets = manifest.assets;\n    for(var index1 = 0; index1 < keys.length; index1++){\n        var key = keys[index1];\n        for(var index2 = 0; index2 < assets.length; index2++){\n            var asset = assets[index2];\n            if(asset.identification.id === key.value){\n                msg.payload = asset;\n                msg.statusCode = \"200\";\n                return msg;\n            }\n        }\n    }\n    msg.payload = \"Asset not found\";\n    msg.statusCode = \"400\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Administration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 360,
        "wires": [
            [
                "0f43bd0ecaaa73ea"
            ]
        ]
    },
    {
        "id": "a420653d.283e18",
        "type": "inject",
        "z": "7585249f.880c0c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 461,
        "y": 57.500030517578125,
        "wires": [
            [
                "9f0d3344.1a35d"
            ]
        ]
    },
    {
        "id": "9f0d3344.1a35d",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "IntializeVariables",
        "func": "//Initialize flow variables\n/*var uuid = context.global.get('AASIdentifier')||'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });*/\n/*var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });*/\n\nvar manifest = context.flow.get(\"manifest\") || \"\";\n//var submodels = context.flow.get(\"submodels\") || \"\";\n//var properties = context.flow.get(\"properties\") || \"\";\n\ncontext.flow.set(\"manifest\", manifest);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 778.1428527832031,
        "y": 57.500030517578125,
        "wires": [
            []
        ]
    },
    {
        "id": "b575bbba.b65c88",
        "type": "json",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "a336bc52.db545",
                "ddd14f97.46b59"
            ]
        ]
    },
    {
        "id": "a336bc52.db545",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 100,
        "wires": []
    },
    {
        "id": "ddd14f97.46b59",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "CreateInMemoryManifest",
        "func": "var manifest = msg.payload;\ncontext.flow.set(\"manifest\", manifest);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "abb9cde9.3e22b"
            ]
        ]
    },
    {
        "id": "821c43fa.7502b",
        "type": "wait-paths",
        "z": "7585249f.880c0c",
        "name": "",
        "paths": "[\"path_2\",\"path_1\"]",
        "timeout": 15000,
        "finalTimeout": 60000,
        "x": 1430,
        "y": 180,
        "wires": [
            [
                "52525c75638e585c"
            ]
        ]
    },
    {
        "id": "abb9cde9.3e22b",
        "type": "change",
        "z": "7585249f.880c0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_1\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 140,
        "wires": [
            [
                "821c43fa.7502b"
            ]
        ]
    },
    {
        "id": "3804b824.0a40d8",
        "type": "change",
        "z": "7585249f.880c0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_2\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 180,
        "wires": [
            [
                "821c43fa.7502b"
            ]
        ]
    },
    {
        "id": "86347903.b492c8",
        "type": "jsonata",
        "z": "7585249f.880c0c",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 950,
        "y": 640,
        "wires": [
            [
                "c80258e3.6fb648"
            ]
        ]
    },
    {
        "id": "c80258e3.6fb648",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "ReadSubmodel",
        "func": "var ShellId = msg.req.params.aasid;\nvar submodelId = msg.req.params.id;\nif(msg.jsonataStatus == \"Success\"){\n    var keys = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    for(var index1 = 0; index1 < keys.length; index1++){\n        var key = keys[index1];\n        for(var index2 = 0; index2 < submodels.length; index2++){\n            var submodel = submodels[index2];\n            if(submodel.identification.id === key.value){\n                if(submodel.idShort === submodelId){\n                    msg.payload = submodel;\n                    msg.statusCode = \"200\";\n                    return msg;\n                }\n            }\n        }\n    }\n    msg.payload = \"Submodel with id:\" + submodelId + \" not found\";\n    msg.statusCode = \"400\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Administration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 640,
        "wires": [
            [
                "0e6dba6f13a192ce"
            ]
        ]
    },
    {
        "id": "7e7dc061.190f9",
        "type": "jsonata",
        "z": "7585249f.880c0c",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 960,
        "y": 720,
        "wires": [
            [
                "baa39adde9859415",
                "643649a5.2eddb8"
            ]
        ]
    },
    {
        "id": "643649a5.2eddb8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "Add Submodel",
        "func": "var submodel = msg.payload;\nvar shellId = msg.req.params.aasid;\nif(msg.jsonataStatus == \"Success\"){\n    msg.statusCode = \"409\";\n    msg.payload = \"Error! submodel already exists!\";\n    return msg;\n} else {\n    // Verify IdShort\n    let manifest = context.flow.get(\"manifest\");\n    let submodels = manifest.submodels;\n    for (let index1 = 0; index1 < submodels.length; index1++) {\n        var submodelElement = submodels[index1];\n        if(submodel.idShort == submodelElement.idShort){\n            msg.statusCode = \"409\";\n            msg.payload = \"Error! submodel with idShort: \" + submodel.idShort + \" already exists!\";\n            return msg;\n        }\n    }\n    // Add Submodel after IdShort Verification\n    msg.statusCode = \"201\";\n    //var manifest = context.flow.get(\"manifest\");\n    manifest.submodels.push(msg.payload);\n    var shells = manifest.assetAdministrationShells;\n    for(var element = 0; element < shells.length; element++){\n        if(shells[element].identification.id == shellId){\n            var submodelRef = {};\n            // @ts-ignore\n            var keys = [];\n            var ref = {};\n            ref.type = \"Submodel\";\n            ref.local = true;\n            ref.value = submodel.identification.id;\n            ref.index = 0;\n            ref.idType = submodel.identification.idType;\n            keys.push(ref);\n            submodelRef.keys = keys;\n            shells[element].submodels.push(submodelRef);\n            context.flow.set(\"manifest\", manifest);\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 720,
        "wires": [
            [
                "3ae2508615759ff1",
                "47dbd85db98e87d7"
            ]
        ]
    },
    {
        "id": "2d51e181.ae4cae",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nvar submodel = msg.payload;\nvar manifest = context.flow.get(\"manifest\");\nmsg.submodelsJsonStr = JSON.stringify(manifest.submodels);\nmsg.jsonata = \"$[identification.id='\" + submodel.identification.id +\"']\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 1000,
        "wires": [
            [
                "a03551a4.d6a72"
            ]
        ]
    },
    {
        "id": "a03551a4.d6a72",
        "type": "jsonata",
        "z": "7585249f.880c0c",
        "name": "jsonata",
        "property": "submodelsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 940,
        "y": 1000,
        "wires": [
            [
                "4b7901f0.6bbe8"
            ]
        ]
    },
    {
        "id": "42ad4b89.85fa44",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nvar conceptDescription = msg.payload;\nvar manifest = context.flow.get(\"manifest\");\nmsg.conceptDescriptionsJsonStr = JSON.stringify(manifest.conceptDescriptions);\nmsg.jsonata = \"$[identification.id='\" + conceptDescription.identification.id +\"']\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 1820,
        "wires": [
            [
                "fbb9eaa5.6aaee8"
            ]
        ]
    },
    {
        "id": "fbb9eaa5.6aaee8",
        "type": "jsonata",
        "z": "7585249f.880c0c",
        "name": "jsonata",
        "property": "conceptDescriptionsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 940,
        "y": 1820,
        "wires": [
            [
                "2b634125.c4162e"
            ]
        ]
    },
    {
        "id": "2b634125.c4162e",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "AddConceptDescription",
        "func": "if(msg.jsonataStatus == \"Success\"){\n    msg.payload = \"Error Concept Description with ID already exists\";\n    msg.statusCode = \"409\";\n} else {\n    msg.statusCode = \"201\";\n    var manifest = context.flow.get(\"manifest\");\n    manifest.conceptDescriptions.push(msg.payload);\n    context.flow.set(\"manifest\", manifest);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 1820,
        "wires": [
            [
                "9dfa1a9a.a3b8d8"
            ]
        ]
    },
    {
        "id": "9dfa1a9a.a3b8d8",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "409",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 1820,
        "wires": [
            [
                "96eab839b9a5526e",
                "bfe1628b021fb4bd"
            ],
            [
                "bfe1628b021fb4bd"
            ]
        ]
    },
    {
        "id": "a362bff3.7287e",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "var submodelElement = msg.submodelElement;\nmsg.submodelJsonStr = JSON.stringify(msg.payload);\nmsg.jsonata = \"$.submodelElements[idShort='\" + submodelElement.idShort + \"']\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 1180,
        "wires": [
            [
                "a7ea7db4.3040f"
            ]
        ]
    },
    {
        "id": "5de6d074.7d79",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1260,
        "wires": [
            [
                "a362bff3.7287e"
            ],
            [
                "9838633ea1b4686f"
            ]
        ]
    },
    {
        "id": "23e08773.bbef88",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "submodelElement",
        "func": "msg.submodelElement = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 1260,
        "wires": [
            [
                "a43738e6d134a0e4"
            ]
        ]
    },
    {
        "id": "a7ea7db4.3040f",
        "type": "jsonata",
        "z": "7585249f.880c0c",
        "name": "jsonata",
        "property": "submodelJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 1440,
        "y": 1180,
        "wires": [
            [
                "4260177f.c688c8"
            ]
        ]
    },
    {
        "id": "395b75cf.7d610a",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1380,
        "wires": [
            [
                "96ff73d.313f69"
            ],
            [
                "cbfa3c93a83bddd6"
            ]
        ]
    },
    {
        "id": "96ff73d.313f69",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RemoveSubmodelElement",
        "func": "var manifest = context.flow.get(\"manifest\");\nvar submodels = manifest.submodels;\nfor(var elementSub = 0; elementSub < submodels.length; elementSub++){\n    var submodelElements = submodels[elementSub].submodelElements;\n    for(var elementSubElem = 0; elementSubElem < submodelElements.length; elementSubElem++){\n        if(submodelElements[elementSubElem].idShort == msg.payload.idShort){\n            submodelElements.splice(elementSubElem, 1);\n            context.flow.set(\"manifest\", manifest);\n            msg.statusCode = \"200\";\n            return msg;\n        }\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 1360,
        "wires": [
            [
                "cbfa3c93a83bddd6"
            ]
        ]
    },
    {
        "id": "3cf9675a.eb4928",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 1480,
        "wires": [
            [
                "9d52563a1d0e86d3"
            ],
            [
                "06cdab4690033b11"
            ]
        ]
    },
    {
        "id": "c99decec.108e8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nmsg.submodelElement = msg.payload;\nmsg.submodelElementId = msg.req.params.id;\nmsg.req.params.id = msg.req.params.submodelId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 1520,
        "wires": [
            [
                "02157f126a36c845"
            ]
        ]
    },
    {
        "id": "ba54bb9c.cb2028",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingShells...",
        "func": "var manifest = context.flow.get(\"manifest\");\nmsg.payload = manifest.assetAdministrationShells;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1127.4263916015625,
        "y": 299.59288024902344,
        "wires": [
            [
                "2a0df1842c81dcd2"
            ]
        ]
    },
    {
        "id": "8f8f9ca3.088ce8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingAas...",
        "func": "var ShellId = msg.req.params.id;\nif(msg.jsonataStatus == \"Success\"){\n    msg.payload = msg.jsonataResult;\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Adminsitration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 440,
        "wires": [
            [
                "731ed6daed8bb6ac"
            ]
        ]
    },
    {
        "id": "d26578b5.f4395",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"']\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 440,
        "wires": [
            [
                "e865512.7fb2e3"
            ]
        ]
    },
    {
        "id": "e865512.7fb2e3",
        "type": "jsonata",
        "z": "7585249f.880c0c",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 900,
        "y": 440,
        "wires": [
            [
                "8f8f9ca3.088ce8"
            ]
        ]
    },
    {
        "id": "171b4a3a.35b006",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].submodels\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 560,
        "wires": [
            [
                "197990af.d2ecdf"
            ]
        ]
    },
    {
        "id": "197990af.d2ecdf",
        "type": "jsonata",
        "z": "7585249f.880c0c",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 950,
        "y": 560,
        "wires": [
            [
                "1e83a689.597559"
            ]
        ]
    },
    {
        "id": "1e83a689.597559",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "ReadSubmodel",
        "func": "var ShellId = msg.req.params.id;\nif(msg.jsonataStatus == \"Success\"){\n    msg.payload = msg.jsonataResult;\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Asset Administration Shell with id:\" + ShellId + \" not found\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 560,
        "wires": [
            [
                "10b11772197e8f3e"
            ]
        ]
    },
    {
        "id": "da187920.ebbfd8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "Remove Submodel",
        "func": "var submodel = msg.payload;\nvar submodelId = msg.req.params.id;\nvar shellId = msg.req.params.aasid;\n\nif(msg.jsonataStatus == \"Success\"){\n    var refs = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    var deletedSubmodelRef = \"\";\n    for(var index1 = 0; index1 < refs.length; index1++){\n        var ref = refs[index1];\n        for(var index2 = 0; index2 < submodels.length; index2++){\n            var submodel = submodels[index2];\n            if(submodel.identification.id === ref.keys[0].value){\n                if(submodel.idShort === submodelId){\n                    submodels.splice(index2, 1);\n                    deletedSubmodelRef = submodel.identification.id;\n                    break;\n                }\n            }\n        }\n    }\n    if(deletedSubmodelRef !== \"\"){\n        var shells = manifest.assetAdministrationShells;\n        for(var index3 = 0; index3 < shells.length; index3++){\n            var shell = shells[index3];\n            if(shell.identification.id == shellId){\n                var submodelRefs = shell.submodels;\n                for(var index4 = 0; index4 < submodelRefs.length; index4++){\n                    var submodelRef = submodelRefs[index4];\n                    if(submodelRef.keys[0].value === deletedSubmodelRef){\n                        submodelRefs.splice(index4, 1);\n                        break;\n                    }\n                }\n            }\n        }\n        msg.statusCode = \"200\";\n        context.flow.set(\"manifest\", manifest);\n    } else {\n        msg.statusCode = \"400\";\n        msg.payload = \"Submodel with id: \" + submodelId + \" not found\";\n    }\n    \n} else {\n    msg.statusCode = \"400\";\n    msg.payload = \"Asset Administration Shell with id:\" + shellId + \" not found\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 837,
        "wires": [
            [
                "e410ab6a.5218c8"
            ]
        ]
    },
    {
        "id": "15e890d4.de552f",
        "type": "jsonata",
        "z": "7585249f.880c0c",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 960,
        "y": 840,
        "wires": [
            [
                "da187920.ebbfd8",
                "faadeccab2b979c5"
            ]
        ]
    },
    {
        "id": "84f391fb.1b9108",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "var submodelId = msg.req.params.submodelId;\nvar submodelCollectionId = [];\nsubmodelCollectionId = msg.req.params.submodelId.split(\".\");\nvar jsonataQuery = \"[$[idShort=\\\"\" + submodelId + \"\\\"]]\";\n\nvar manifest = context.flow.get('manifest');\n    \nvar submodels = manifest.submodels;\nmsg.submodelsJsonStr = JSON.stringify(submodels);\nmsg.jsonata = jsonataQuery;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 1100,
        "wires": [
            [
                "130b9e71.df3e8a",
                "e11cc9ff.59b02"
            ]
        ]
    },
    {
        "id": "130b9e71.df3e8a",
        "type": "jsonata",
        "z": "7585249f.880c0c",
        "name": "jsonata",
        "property": "submodelsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 990,
        "y": 1100,
        "wires": [
            [
                "b0af427b.0e7ea8",
                "48e654a6.f98c5c"
            ]
        ]
    },
    {
        "id": "5891422c.8306cc",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1520,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e11cc9ff.59b02",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1040,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b0af427b.0e7ea8",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1300,
        "y": 1060,
        "wires": []
    },
    {
        "id": "48e654a6.f98c5c",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "ReadSubmodelElement",
        "func": "var iterate = function(submodelElementId, collectionIds, submodelElements){\n    for(var index = 0; index < submodelElements.length; index++) {\n        var submodelElement = submodelElements[index];\n        if (submodelElement.modelType.name !== \"SubmodelElementCollection\" || (submodelElement.modelType.name === \"SubmodelElementCollection\" && collectionIds.length < 1)){\n               if(submodelElement.idShort === submodelElementId){\n                    return submodelElement;\n                    \n                }\n            \n            }  else {\n                for(var collIndex = 0; collIndex < collectionIds.length; collIndex++){\n                    var collectionId = collectionIds[collIndex];\n                    if(submodelElement.idShort === collectionId){\n                        collectionIds.splice(collIndex, 1);\n                        var result = iterate(submodelElementId, collectionIds, submodelElement.value);\n                        return result;\n                }\n                }\n                \n            }\n    }\n    return \"\";\n}\n\nvar submodelElementId = msg.req.params.id;\nvar submodelId = msg.req.params.submodelId;\n\nvar submodelCollectionId = [];\nvar splittedSubmodel = submodelElementId.split(\".\");\n//submodelId = splittedSubmodel[0];\n\nif(splittedSubmodel.length > 1){\n    for(var index = 0; index < splittedSubmodel.length; index++){\n\n        if(index < (splittedSubmodel.length - 1)){\n            submodelCollectionId.push(splittedSubmodel[index]);\n        } else {\n            submodelElementId = splittedSubmodel[index];\n        }\n    }\n}\n\nvar selectedSubmodels = [];\nvar selctedSubmodelElements = [];\nif(msg.jsonataStatus == \"Success\"){\n    var submodels = msg.jsonataResult;\n    for(var index1 = 0; index1 < submodels.length; index1++){\n        var submodelElements = submodels[index1].submodelElements;\n        var result = iterate(submodelElementId, submodelCollectionId, submodelElements);\n        if (result != \"\"){\n            selectedSubmodels.push(submodels[index1]);\n            selctedSubmodelElements.push(result);\n        }\n    }\n    if(selectedSubmodels.length > 0){\n        var manifest = context.flow.get(\"manifest\");\n        var shells = manifest.assetAdministrationShells;\n        var ShellId = msg.req.params.aasid;\n        for(var index3 = 0; index3 < shells.length; index3++){\n            if(shells[index3].identification.id === ShellId){\n                var submodelRefs = shells[index3].submodels;\n                for(var index4 = 0; index4 < submodelRefs.length; index4++){\n                    var ref = submodelRefs[index4];\n                    for(var index5 = 0; index5 < selectedSubmodels.length; index5++){\n                        if(ref.keys[0].value === selectedSubmodels[index5].identification.id){\n                            msg.statusCode = \"200\";\n                            msg.payload = selctedSubmodelElements[index5];\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        msg.statusCode = \"404\";\n        msg.payload = \"SubmodelElement with id:\" + submodelElementId + \" not found\";\n    }\n    \n\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Submodel with id:\" + submodelId + \" not found\";\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1100,
        "wires": [
            [
                "5891422c.8306cc",
                "fe06f34ca6318762"
            ]
        ]
    },
    {
        "id": "a34da828.6338f",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\nmsg.shellsJsonStr = JSON.stringify(shells);\nmsg.jsonata = \"$[identification.id='\" + ShellId +\"'].asset.keys\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "3eb4fa9d.896106"
            ]
        ]
    },
    {
        "id": "3eb4fa9d.896106",
        "type": "jsonata",
        "z": "7585249f.880c0c",
        "name": "jsonata",
        "property": "shellsJsonStr",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 900,
        "y": 360,
        "wires": [
            [
                "9af1e8ba.14f4a8",
                "f308240a.bf55c"
            ]
        ]
    },
    {
        "id": "f308240a.bf55c",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 400,
        "wires": []
    },
    {
        "id": "f8e2cdcf35feb9b2",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "createEnv in",
        "links": [],
        "x": 315,
        "y": 180,
        "wires": [
            [
                "3804b824.0a40d8",
                "b575bbba.b65c88"
            ]
        ]
    },
    {
        "id": "52525c75638e585c",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "createEnv out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 180,
        "wires": []
    },
    {
        "id": "feac9604b306e8d4",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "persistEnv in",
        "links": [],
        "x": 315,
        "y": 1920,
        "wires": [
            [
                "a688b662.2d1b18"
            ]
        ]
    },
    {
        "id": "f3d77d2c4bd793f1",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "persistEnv out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1920,
        "wires": []
    },
    {
        "id": "cfe951f06c55831e",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readEnv in",
        "links": [],
        "x": 315,
        "y": 240,
        "wires": [
            [
                "e7377ce7.f77bc"
            ]
        ]
    },
    {
        "id": "e27443b73694af6b",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readEnv out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 240,
        "wires": []
    },
    {
        "id": "e5e3e5e6456ee35c",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readShells in",
        "links": [],
        "x": 315,
        "y": 300,
        "wires": [
            [
                "ba54bb9c.cb2028"
            ]
        ]
    },
    {
        "id": "2a0df1842c81dcd2",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readShells out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 300,
        "wires": []
    },
    {
        "id": "2fc9f75cb156754d",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readAssets in",
        "links": [],
        "x": 315,
        "y": 360,
        "wires": [
            [
                "a34da828.6338f"
            ]
        ]
    },
    {
        "id": "0f43bd0ecaaa73ea",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readAssets out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 360,
        "wires": []
    },
    {
        "id": "40913d2d8a161a11",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readAas in",
        "links": [],
        "x": 315,
        "y": 440,
        "wires": [
            [
                "d26578b5.f4395"
            ]
        ]
    },
    {
        "id": "731ed6daed8bb6ac",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readAas out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 440,
        "wires": []
    },
    {
        "id": "2e0bc58c812ae978",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readSubmodels in",
        "links": [],
        "x": 315,
        "y": 500,
        "wires": [
            [
                "ec827ecb.501e9"
            ]
        ]
    },
    {
        "id": "2260c322068373cd",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readSubmodels out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 500,
        "wires": []
    },
    {
        "id": "53bc4f2d72d3363a",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readAasSubmodels in",
        "links": [],
        "x": 315,
        "y": 560,
        "wires": [
            [
                "171b4a3a.35b006"
            ]
        ]
    },
    {
        "id": "10b11772197e8f3e",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readAasSubmodels out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 560,
        "wires": []
    },
    {
        "id": "73fa67f7ce94427b",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readSubmodel in",
        "links": [],
        "x": 315,
        "y": 640,
        "wires": [
            [
                "d5c9f97f.61a3f8"
            ]
        ]
    },
    {
        "id": "0e6dba6f13a192ce",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 640,
        "wires": []
    },
    {
        "id": "f5cc371119932661",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "addSubmodel in",
        "links": [],
        "x": 315,
        "y": 720,
        "wires": [
            [
                "93cc4b55.7bd498"
            ]
        ]
    },
    {
        "id": "3ae2508615759ff1",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "addSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 720,
        "wires": []
    },
    {
        "id": "47dbd85db98e87d7",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "timeout": "30",
        "x": 1410,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "012ebb5641006b90",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "removeSubmodel in",
        "links": [],
        "x": 315,
        "y": 840,
        "wires": [
            [
                "3d51a1c1.b8b6ce"
            ]
        ]
    },
    {
        "id": "52e528996d833792",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "removeSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 840,
        "wires": []
    },
    {
        "id": "e6c3848135c0d875",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "timeout": "30",
        "x": 1610,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "c6f2ebed8beb7fcd",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "timeout": "30",
        "x": 1530,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "64e0e16be8a6705d",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "updateSubmodel in",
        "links": [],
        "x": 315,
        "y": 1000,
        "wires": [
            [
                "2d51e181.ae4cae"
            ]
        ]
    },
    {
        "id": "e8d3c684d0d7eba8",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "updateSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1000,
        "wires": []
    },
    {
        "id": "86b4b166afaa8721",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1100,
        "wires": [
            [
                "84f391fb.1b9108"
            ]
        ]
    },
    {
        "id": "fe06f34ca6318762",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1100,
        "wires": []
    },
    {
        "id": "9c413192820ac72d",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "addSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1260,
        "wires": [
            [
                "23e08773.bbef88"
            ]
        ]
    },
    {
        "id": "9838633ea1b4686f",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "addSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1260,
        "wires": []
    },
    {
        "id": "bb10f0b5176f7432",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "64e0e16be8a6705d"
        ],
        "timeout": "30",
        "x": 1910,
        "y": 1240,
        "wires": [
            [
                "9838633ea1b4686f"
            ]
        ]
    },
    {
        "id": "183a7366ee87aed5",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "removeSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1380,
        "wires": [
            [
                "34680c353b2fda57"
            ]
        ]
    },
    {
        "id": "cbfa3c93a83bddd6",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "removeSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1380,
        "wires": []
    },
    {
        "id": "34680c353b2fda57",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "86b4b166afaa8721"
        ],
        "timeout": "30",
        "x": 850,
        "y": 1380,
        "wires": [
            [
                "395b75cf.7d610a"
            ]
        ]
    },
    {
        "id": "a43738e6d134a0e4",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "73fa67f7ce94427b"
        ],
        "timeout": "30",
        "x": 910,
        "y": 1260,
        "wires": [
            [
                "5de6d074.7d79"
            ]
        ]
    },
    {
        "id": "eebdedc7c3c0954d",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "86b4b166afaa8721"
        ],
        "timeout": "30",
        "x": 1350,
        "y": 1480,
        "wires": [
            [
                "3cf9675a.eb4928"
            ]
        ]
    },
    {
        "id": "96eab839b9a5526e",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "timeout": "30",
        "x": 1570,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "fa81926752921ab7",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "updateSubmodelElementValue in",
        "links": [],
        "x": 315,
        "y": 1520,
        "wires": [
            [
                "c99decec.108e8"
            ]
        ]
    },
    {
        "id": "06cdab4690033b11",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "updateSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1500,
        "wires": []
    },
    {
        "id": "d3fb1180ea60c900",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "addConceptDescription in",
        "links": [],
        "x": 315,
        "y": 1820,
        "wires": [
            [
                "42ad4b89.85fa44"
            ]
        ]
    },
    {
        "id": "bfe1628b021fb4bd",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "addConceptDescription out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1820,
        "wires": []
    },
    {
        "id": "37b3dae381c34ec2",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1440,
        "wires": []
    },
    {
        "id": "02157f126a36c845",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "73fa67f7ce94427b"
        ],
        "timeout": "30",
        "x": 750,
        "y": 1520,
        "wires": [
            [
                "37b3dae381c34ec2",
                "f416fff6010dbb4f"
            ]
        ]
    },
    {
        "id": "f416fff6010dbb4f",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 1520,
        "wires": [
            [
                "67a4873f76838cd0"
            ],
            [
                "06cdab4690033b11"
            ]
        ]
    },
    {
        "id": "67a4873f76838cd0",
        "type": "change",
        "z": "7585249f.880c0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "submodelElementId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1480,
        "wires": [
            [
                "eebdedc7c3c0954d"
            ]
        ]
    },
    {
        "id": "2e0ef87ae37655e9",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "timeout": "30",
        "x": 2350,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "46864302963bba04",
        "type": "file",
        "z": "7585249f.880c0c",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1340,
        "y": 1920,
        "wires": [
            [
                "f3d77d2c4bd793f1"
            ]
        ]
    },
    {
        "id": "725dc272f81933b2",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 680,
        "wires": []
    },
    {
        "id": "baa39adde9859415",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 680,
        "wires": []
    },
    {
        "id": "faadeccab2b979c5",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 800,
        "wires": []
    },
    {
        "id": "b9eb97851f3682d9",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "UpdatingSubmodelElement...",
        "func": "let submodelElement = \"\";\nlet submodelElementId = msg.req.params.id;\nlet submodelId = msg.req.params.submodelId;\nlet persist = \"false\";\nif (msg.req.query.content == \"value\") {\n\n    msg.payload.value = msg.submodelElement[msg.submodelElementId];\n    submodelElement = msg.payload;\n\n} else {\n    submodelElement = msg.submodelElement;\n    persist = \"true\";\n}\n\n\nlet updateSubmodelElementValues = function (submodelElements, indexIdPath, collectionIds, value) {\n\n    if (indexIdPath < collectionIds.length) {\n\n        let idPath = collectionIds[indexIdPath];\n\n        for (let submodelElement = 0; submodelElement < submodelElements.length; submodelElement++) {\n\n            let submodelElementIdentifier = submodelElements[submodelElement].idShort;\n\n            let modelType = submodelElements[submodelElement].modelType.name;\n\n            if (submodelElementIdentifier === idPath && modelType === \"SubmodelElementCollection\" && indexIdPath < (collectionIds.length - 1)) {\n\n                indexIdPath = indexIdPath + 1;\n\n                return updateSubmodelElementValues(submodelElements[submodelElement].value, indexIdPath, collectionIds, value);\n\n            } else if (submodelElementIdentifier === idPath && modelType === \"SubmodelElementCollection\" && indexIdPath === (collectionIds.length - 1)) {\n\n                let values = value;\n\n                let keys = Object.keys(values);\n\n                for (let keyIndex = 0; keyIndex < keys.length; keyIndex++) {\n\n                    let selectedValue = 0;\n\n                    selectedValue = values[keys[keyIndex]];\n                    //msg.debug15 = selectedValue;\n                    //return msg;\n                    if (typeof selectedValue != 'object') {\n                        for (let valuesIndex = 0; valuesIndex < submodelElements[submodelElement].value.length; valuesIndex++) {\n                            if (submodelElements[submodelElement].value[valuesIndex].idShort == keys[keyIndex]) {\n                                submodelElements[submodelElement].value[valuesIndex].value = selectedValue;\n                                break;\n                            }\n                        }\n                    }\n\n\n                }\n\n                return true;\n\n            }\n            else if (submodelElementIdentifier === idPath && (modelType === \"Property\" || modelType === \"Blob\")) {\n                //msg.debug11 = \"Entrei \" + submodelElements[submodelElement].idShort + \" and \" + idPath + \" \" + value;\n\n                submodelElements[submodelElement].value = value;\n                return true;\n\n            }\n\n        }\n\n    } else {\n\n        return false;\n\n    }\n\n}\n\nvar submodelCollectionId = [];\n\nlet manifest = context.flow.get(\"manifest\");\nif (msg.jsonataStatus == \"Success\") {\n\n    let submodelRoot = msg.jsonataResult[0];\n\n    let pathsToSubmodelElements = msg.pathsToUpdate;\n\n    let submodelRootIdentifier = submodelRoot.identification.id;\n\n    let manifestSubmodels = manifest.submodels;\n\n    let manifestSubmodelElements = {};\n\n    let stratingJsonDecomposition = msg.submodelElementId.split(\".\");\n\n    for (let manifestSubmodel = 0; manifestSubmodel < manifestSubmodels.length; manifestSubmodel++) {\n\n        let manifestSubmodelIdentifier = manifestSubmodels[manifestSubmodel].identification.id;\n\n        if (submodelRootIdentifier === manifestSubmodelIdentifier) {\n\n            manifestSubmodelElements = manifestSubmodels[manifestSubmodel].submodelElements;\n\n        }\n\n    }\n\n    for (let pathIndex = 0; pathIndex < pathsToSubmodelElements.length; pathIndex++) {\n\n        let collectionIds = pathsToSubmodelElements[pathIndex].split(\".\");\n        msg.collectionIds = collectionIds;\n        let value = msg.submodelElement[msg.submodelElementId];\n        //msg.getValue1 = value;\n        let jsonObjectValue = {};\n\n        let processedValue = {};\n\n        if (collectionIds.length > 1) {\n            jsonObjectValue = JSON.parse(value);\n            let decomposeJsonObj = jsonObjectValue;\n            for (let index = stratingJsonDecomposition.length; index < collectionIds.length; index++) {\n                decomposeJsonObj = decomposeJsonObj[collectionIds[index]];\n            }\n            if (typeof decomposeJsonObj === \"string\") {\n                processedValue = JSON.stringify(decomposeJsonObj.replace(/^\"|\"$/g, ''));\n            } else {\n                processedValue = decomposeJsonObj;\n            }\n\n            //msg.stringified = decomposeJsonObj;\n\n        } else {\n            if (typeof value == \"object\") {\n                jsonObjectValue = JSON.parse(value);\n            } else {\n                processedValue = value;\n            }\n\n        }\n        //msg.getValue2 = processedValue;\n        //msg.getValue3 = value;\n        updateSubmodelElementValues(manifestSubmodelElements, 0, collectionIds, processedValue);\n\n    }\n    context.flow.set(\"manifest\", manifest);\n\n    if (persist == \"true\") {\n\n        return [msg, null];\n\n    } else {\n\n        return [null, msg];\n    }\n\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Submodel with id:\" + submodelId + \" not found\";\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 2090,
        "y": 1460,
        "wires": [
            [
                "2e0ef87ae37655e9",
                "06cdab4690033b11"
            ],
            [
                "06cdab4690033b11"
            ]
        ]
    },
    {
        "id": "e18a6480a564220d",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1730,
        "y": 1620,
        "wires": [
            [
                "55642c2f54fe88ec"
            ],
            [
                "66b1db9209510ea0",
                "f26f2711b159da25"
            ]
        ]
    },
    {
        "id": "6f9c803ab9cca499",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "404",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1680,
        "wires": [
            [
                "814ecf2813124b8e"
            ],
            [
                "f26f2711b159da25"
            ]
        ]
    },
    {
        "id": "5c835f2d90b6596f",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "submodelElement",
        "func": "msg.submodelElement = msg.payload;\nmsg.submodelElementId = msg.req.params.id;\nmsg.req.params.id = msg.req.params.submodelId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 1680,
        "wires": [
            [
                "7d372240b1186833"
            ]
        ]
    },
    {
        "id": "f26f2711b159da25",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "updateSubmodelElementNormal Out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1680,
        "wires": []
    },
    {
        "id": "7d372240b1186833",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "73fa67f7ce94427b"
        ],
        "timeout": "30",
        "x": 910,
        "y": 1680,
        "wires": [
            [
                "6f9c803ab9cca499"
            ]
        ]
    },
    {
        "id": "ab943405e80b0646",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "updateSubmodelElementNormal In",
        "links": [],
        "x": 315,
        "y": 1680,
        "wires": [
            [
                "5c835f2d90b6596f"
            ]
        ]
    },
    {
        "id": "66b1db9209510ea0",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 1660,
        "wires": []
    },
    {
        "id": "3bfd1d54ac6a712e",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "86b4b166afaa8721"
        ],
        "timeout": "30",
        "x": 1530,
        "y": 1620,
        "wires": [
            [
                "e18a6480a564220d"
            ]
        ]
    },
    {
        "id": "814ecf2813124b8e",
        "type": "change",
        "z": "7585249f.880c0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "submodelElementId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1620,
        "wires": [
            [
                "3bfd1d54ac6a712e"
            ]
        ]
    },
    {
        "id": "22676ba099ea6e73",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "timeout": "30",
        "x": 2250,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "9d52563a1d0e86d3",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "preprocessing and flattening JSON",
        "func": "function getFlatObject(object) {\n    function iter(o, p) {\n        if (o && typeof o === 'object') {\n            Object.keys(o).forEach(function (k) {\n                iter(o[k], p.concat(k));\n            });\n            return;\n        }\n        path[p.join('.')] = o;\n    }\n\n    var path = {};\n    iter(object, []);\n    return path;\n}\n\nlet flattenObject;\nlet object = JSON.parse(msg.value);\n\nif (object.hasOwnProperty(\"blob\")) {\n    let data = object.blob;\n    flattenObject = getFlatObject(data);\n    //msg.object = data;\n} else {\n    flattenObject = getFlatObject(JSON.parse(msg.value));\n}\n\n//let flattenObject = getFlatObject(JSON.parse(msg.value));\nlet keys = Object.keys(flattenObject);\nmsg.flattenObject = flattenObject;\nfor (let keyIndex = 0; keyIndex < keys.length; keyIndex++) {\n    let substringsArray = keys[keyIndex].split(\".\");\n    keys[keyIndex] = keys[keyIndex].replace(\".\" + substringsArray[substringsArray.length - 1], \"\");\n}\nlet uniqueKeys = Array.from(new Set(keys));\n\nlet pathsToUpdate = [];\nif (uniqueKeys.length > 1) {\n    for (let uniqueKeyIndex = 0; uniqueKeyIndex < uniqueKeys.length; uniqueKeyIndex++) {\n        uniqueKeys[uniqueKeyIndex] = msg.submodelElementId + \".\" + uniqueKeys[uniqueKeyIndex];\n        pathsToUpdate.push(uniqueKeys[uniqueKeyIndex]);\n    }\n} else {\n    uniqueKeys[0] = msg.submodelElementId;\n    pathsToUpdate.push(uniqueKeys[0]);\n}\nmsg.pathsToUpdate = pathsToUpdate;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 1460,
        "wires": [
            [
                "b9eb97851f3682d9"
            ]
        ]
    },
    {
        "id": "55642c2f54fe88ec",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "Update SubmodelElement",
        "func": "var verifySubmodelBelongsToAasId = function (aasId, shells, submodel) {\n    for (var index = 0; index < shells.length; index++) {\n        if (shells[index].identification.id === aasId) {\n            var submodelRefs = shells[index].submodels;\n            for (var index2 = 0; index2 < submodelRefs.length; index2++) {\n                var ref = submodelRefs[index2];\n                if (ref.keys[0].value === submodel.identification.id) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\nvar iterate = function (submodelToUpdate, collectionIds, submodelElements) {\n    for (var index = 0; index < submodelElements.length; index++) {\n        if (submodelElements[index].modelType.name !== \"SubmodelElementCollection\" || (submodelElements[index].modelType.name === \"SubmodelElementCollection\" && collectionIds.length < 1)) {\n            if (submodelElements[index].idShort === submodelToUpdate.idShort) {\n                submodelElements[index] = submodelToUpdate;\n                return submodelToUpdate;\n\n            }\n\n        } else {\n            for (var collIndex = 0; collIndex < collectionIds.length; collIndex++) {\n                var collectionId = collectionIds[collIndex];\n                if (submodelElements[index].idShort === collectionId) {\n                    collectionIds.splice(collIndex, 1);\n                    var result = iterate(submodelToUpdate, collectionIds, submodelElements[index].value);\n                    return result;\n                }\n            }\n\n        }\n    }\n    return \"\";\n}\n\nlet manifest = context.flow.get(\"manifest\");\nlet aasid = msg.req.params.aasid;\nvar submodelElementId = msg.req.params.id;\nvar submodelId = msg.req.params.submodelId;\n\nvar submodelCollectionId = [];\nvar submodelToUpdate = msg.submodelElement;\n\nif (msg.jsonataStatus == \"Success\") {\n\n\n    for (var index1 = 0; index1 < manifest.submodels.length; index1++) {\n\n        let verified = verifySubmodelBelongsToAasId(aasid, manifest.assetAdministrationShells, manifest.submodels[index1]);\n\n        if (verified) {\n            var result = iterate(submodelToUpdate, submodelCollectionId, manifest.submodels[index1].submodelElements);\n            if (result != \"\") {\n                context.flow.set(\"manifest\", manifest);\n                msg.payload = result;\n                msg.statusCode = \"200\";\n                return [msg, null];\n            }\n        }\n    }\n\n    msg.statusCode = \"404\";\n    msg.payload = \"SubmodelElement with id:\" + submodelElementId + \" not found\";\n\n\n\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = \"Submodel with id:\" + submodelId + \" not found\";\n}\n\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 1580,
        "wires": [
            [
                "22676ba099ea6e73",
                "f26f2711b159da25"
            ],
            [
                "f26f2711b159da25"
            ]
        ]
    },
    {
        "id": "c38a6d952fa9ab40",
        "type": "inject",
        "z": "7585249f.880c0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 570,
        "y": 2260,
        "wires": [
            [
                "20aa7bb66b4bf13e"
            ]
        ]
    },
    {
        "id": "20aa7bb66b4bf13e",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "function 1",
        "func": "function getFlatObject(object) {\n    function iter(o, p) {\n        if (o && typeof o === 'object') {\n            Object.keys(o).forEach(function (k) {\n                iter(o[k], p.concat(k));\n            });\n            return;\n        }\n        path[p.join('.')] = o;\n    }\n\n    var path = {};\n    iter(object, []);\n    return path;\n}\n\nlet manifest = context.flow.get(\"manifest\");\nlet flattenObject = getFlatObject(manifest);\nmsg.payload = flattenObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 2260,
        "wires": [
            [
                "20eb23e457527d08"
            ]
        ]
    },
    {
        "id": "20eb23e457527d08",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2260,
        "wires": []
    },
    {
        "id": "af4b6639.02a008",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "InvokeInternalDriver",
        "func": "msg.source = context.global.get('AASIdentifier');\nmsg.staticDocs = context.global.get(\"staticDocs\");\nmsg.topic = \"request\";\nvar af = context.global.get(\"actionflows\");\nvar link = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nvar action_ = af.invoke(link, msg);\naction_.then(function(msg){\n    node.send(msg);\n});\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7d0ec41d.2d0d8c",
        "type": "comment",
        "z": "670d9c89.6d0424",
        "name": "Internal Interface Entry Point",
        "info": "",
        "x": 260,
        "y": 20,
        "wires": []
    },
    {
        "id": "c9d662c9.664cf",
        "type": "inject",
        "z": "670d9c89.6d0424",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 225.952392578125,
        "y": 75.857177734375,
        "wires": [
            [
                "6f094db8.345924"
            ]
        ]
    },
    {
        "id": "6f094db8.345924",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "flowVariables",
        "func": "context.flow.set('subscriptions', []);\ncontext.global.set('statusCheckSBI', \"\");",
        "outputs": 1,
        "noerr": 0,
        "x": 810.3273315429688,
        "y": 75.85719299316406,
        "wires": [
            []
        ]
    },
    {
        "id": "3c4d0520.a593ba",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "getSubscriptions",
        "func": "var subscriptions = context.flow.get(\"subscriptions\") || [];\nmsg.payload = subscriptions;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 1100,
        "wires": [
            [
                "125cba557ead93be"
            ]
        ]
    },
    {
        "id": "66816677.7a4348",
        "type": "msg-speed",
        "z": "670d9c89.6d0424",
        "name": "",
        "frequency": "min",
        "interval": "1",
        "estimation": true,
        "ignore": false,
        "x": 910,
        "y": 620,
        "wires": [
            [
                "b0715b05.2c6488"
            ],
            [
                "5d86388d.5f97d"
            ]
        ]
    },
    {
        "id": "2c43db2c.fe9c9c",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "stats",
        "func": "let subscriptions = context.flow.get(\"subscriptions\");\nif(subscriptions.length > 0){\n    let stats = context.global.get(\"statsNBI\");\n    let msgSize = msg.averageMsgSize;\n    let msgSizeIntervalAndFrequency = msg.intervalAndFrequency;\n    stats.msgSize = msgSize;\n    stats.msgSizeIntervalAndFrequency = msgSizeIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n} else {\n    let stats = context.global.get(\"statsNBI\");\n    let msgSize = 0;\n    let msgSizeIntervalAndFrequency = \"n/a\";\n    stats.msgSize = msgSize;\n    stats.msgSizeIntervalAndFrequency = msgSizeIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1950,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "fbd472e7.d10f48",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "set Stats SBI Variable",
        "func": "context.global.set(\"statsSBI\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 860,
        "wires": [
            [
                "a1e4b28.4d15dd"
            ]
        ]
    },
    {
        "id": "a1e4b28.4d15dd",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 860,
        "wires": []
    },
    {
        "id": "1cd120a.1a88b5f",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "checkHealthStatus",
        "func": "var statusCheck = msg.payload.statusCheck;\ncontext.global.set(\"statusCheckSBI\", statusCheck);\nmsg.payload = { \"statusCheckSBI\": statusCheck };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 1220,
        "wires": [
            [
                "796fdeb5.8f68b8"
            ]
        ]
    },
    {
        "id": "4ee113af.7624f4",
        "type": "inject",
        "z": "670d9c89.6d0424",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "connectionStatusCheck",
        "payloadType": "str",
        "x": 360,
        "y": 1220,
        "wires": [
            [
                "ee3040f0bd4fbbdf"
            ]
        ]
    },
    {
        "id": "796fdeb5.8f68b8",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "status_SBI_Out",
        "links": [
            "d7f84005.ce11e8"
        ],
        "x": 1875,
        "y": 1220,
        "wires": []
    },
    {
        "id": "cf377a9a.6c438",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "prepare Observation",
        "func": "//var observation = JSON.parse(msg.payload);\nvar subscriptions = context.flow.get(\"subscriptions\");\nvar outMsgs = [];\nfor (var subscription = 0; subscription < subscriptions.length; subscription++) {\n    //var splittedSubscription = subscriptions[subscription].split(\";\");\n    //if (msg.payload.source.includes(splittedSubscription[0]) && msg.payload.source.includes(splittedSubscription[1]) && msg.payload.source.includes(splittedSubscription[2])){\n    if (msg.payload.source.includes(subscriptions[subscription])) {\n        var observation = msg.payload;\n        //observation.source = context.global.get(\"AASIdentifier\");\n        var outMsg = observation;\n        outMsgs.push(outMsg);\n        //msg.topic = splittedSubscription[3];\n    }\n}\n//var observation = msg.payload;\n//observation.source = context.global.get(\"AASIdentifier\");\n//msg.payload = observation;\n//return msg;\nreturn [outMsgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 600,
        "wires": [
            [
                "4fc7fe8f.a5bc58",
                "35ab961d.d6237a"
            ]
        ]
    },
    {
        "id": "4fc7fe8f.a5bc58",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1590,
        "y": 560,
        "wires": []
    },
    {
        "id": "e05fcd52.be3ca8",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "routedCallback",
        "mode": "link",
        "links": [
            "3e11fc1c.d74334"
        ],
        "x": 1995,
        "y": 620,
        "wires": []
    },
    {
        "id": "35ab961d.d6237a",
        "type": "msg-size",
        "z": "670d9c89.6d0424",
        "name": "",
        "frequency": "min",
        "interval": 1,
        "statusContent": "avg",
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "humanReadableStatus": true,
        "x": 1700,
        "y": 600,
        "wires": [
            [
                "2c43db2c.fe9c9c"
            ],
            [
                "e05fcd52.be3ca8"
            ]
        ]
    },
    {
        "id": "b0715b05.2c6488",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "stats",
        "func": "let subscriptions = context.flow.get(\"subscriptions\");\nif(subscriptions.length > 0){\n    let stats = context.global.get(\"statsNBI\") || {};\n    let msgSpeed = msg.payload;\n    let msgIntervalAndFrequency = msg.intervalAndFrequency;\n    stats.msgSpeed = msgSpeed;\n    stats.IntervalAndFrequency = msgIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n} else {\n    let stats = context.global.get(\"statsNBI\") || {};\n    let msgSpeed = 0;\n    let msgIntervalAndFrequency = \"n/a\";\n    stats.msgSpeed = msgSpeed;\n    stats.IntervalAndFrequency = msgIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "8ba74a55.e37468",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 900,
        "wires": []
    },
    {
        "id": "5d86388d.5f97d",
        "type": "Load Balance",
        "z": "670d9c89.6d0424",
        "defaultcapacity": 100,
        "dynamic": "d7e6d6dc.d37318",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 1120,
        "y": 620,
        "wires": [
            [],
            [
                "cf377a9a.6c438"
            ],
            [
                "b33ebee8.a7fa18"
            ]
        ]
    },
    {
        "id": "b33ebee8.a7fa18",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "prepare Observation",
        "func": "//var observation = JSON.parse(msg.payload);\nvar subscriptions = context.flow.get(\"subscriptions\");\nvar outMsgs = [];\nfor (var subscription = 0; subscription < subscriptions.length; subscription++) {\n    //var splittedSubscription = subscriptions[subscription].split(\";\");\n    //if (msg.payload.source.includes(splittedSubscription[0]) && msg.payload.source.includes(splittedSubscription[1]) && msg.payload.source.includes(splittedSubscription[2])){\n    if (msg.payload.source.includes(subscriptions[subscription])) {\n        var observation = msg.payload;\n        //observation.source = context.global.get(\"AASIdentifier\");\n        var outMsg = observation;\n        outMsgs.push(outMsg);\n        //msg.topic = splittedSubscription[3];\n    }\n}\n//var observation = msg.payload;\n//observation.source = context.global.get(\"AASIdentifier\");\n//msg.payload = observation;\n//return msg;\nreturn [outMsgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 640,
        "wires": [
            [
                "35ab961d.d6237a"
            ]
        ]
    },
    {
        "id": "02bb228b85db556d",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "callSBIReadSubscriptions in",
        "links": [],
        "x": 280,
        "y": 1100,
        "wires": [
            [
                "3c4d0520.a593ba"
            ]
        ],
        "l": true
    },
    {
        "id": "125cba557ead93be",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "callSBIReadSubscriptions out",
        "mode": "return",
        "links": [],
        "x": 1885,
        "y": 1100,
        "wires": []
    },
    {
        "id": "eeab441ae2b4c1e1",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "prepareUpdate",
        "func": "var update = {};\nupdate.link = msg.payload.link;\nupdate.value = msg.payload.data;\nupdate.content = \"value\";\nreturn update;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 980,
        "wires": [
            [
                "27003dfc19eeaf18",
                "1fc06f6a8f3492b8"
            ]
        ]
    },
    {
        "id": "27003dfc19eeaf18",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 960,
        "wires": []
    },
    {
        "id": "1fc06f6a8f3492b8",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "updateValueCallback",
        "mode": "link",
        "links": [
            "7b48ced64946a8d2"
        ],
        "x": 1895,
        "y": 980,
        "wires": []
    },
    {
        "id": "36f799fe398b26b2",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 710,
        "y": 580,
        "wires": []
    },
    {
        "id": "1ee9cdfac8c39c44",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "UpdateSubscriptions",
        "func": "var subscriptions = context.flow.get(\"subscriptions\");\nvar subscription = msg.payload.observableReference;\nif (msg.topic === \"observe\") {\n    if (subscriptions.includes(subscription)) return null;\n    else {\n        subscriptions.push(subscription);\n        context.flow.set(\"subscriptions\", subscriptions);\n        return msg;\n    }\n} else if (msg.topic === \"unobserve\") {\n    if (subscriptions.length > 0) {\n        for (var index = 0; index < subscriptions.length; index++) {        \n            if (subscriptions[index] === subscription) {\n                subscriptions.splice(index, 1);\n                context.flow.set(\"subscriptions\", subscriptions);\n                return msg;\n            }\n        }\n    }\n\n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 1400,
        "wires": [
            [
                "658d3def08041704",
                "46a5a9b368202acd"
            ]
        ]
    },
    {
        "id": "a3c38653d83ba91e",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "ResetSubscriptions",
        "func": "context.flow.set(\"subscriptions\", []);\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 1480,
        "wires": [
            [
                "bbd803fb8d0f8ede",
                "65e9dd4ea589116f"
            ]
        ]
    },
    {
        "id": "1ec43281754fe568",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 1340,
        "wires": []
    },
    {
        "id": "c51eb8701d678fcf",
        "type": "function",
        "z": "670d9c89.6d0424",
        "name": "prepare INSERT Statement",
        "func": "let observation = msg.payload;\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\";\nmsg.payload = [context.global.get('AASIdentifier'), observation.observableReference, observation.timestamp, observation.payload];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1340,
        "wires": [
            [
                "0ae4afa7de3588c6"
            ]
        ]
    },
    {
        "id": "0ae4afa7de3588c6",
        "type": "sqlite",
        "z": "670d9c89.6d0424",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1150,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "658d3def08041704",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 1360,
        "wires": []
    },
    {
        "id": "ee3040f0bd4fbbdf",
        "type": "function",
        "z": "670d9c89.6d0424",
        "name": "call driver for getting Connection Status",
        "func": "msg.target = \"driver.connection.check\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1220,
        "wires": [
            [
                "921dd9207d4fd2a3"
            ]
        ]
    },
    {
        "id": "921dd9207d4fd2a3",
        "type": "link call",
        "z": "670d9c89.6d0424",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 1220,
        "wires": [
            [
                "1cd120a.1a88b5f",
                "e0c0795b.6a17b8"
            ]
        ]
    },
    {
        "id": "e0c0795b.6a17b8",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1180,
        "wires": []
    },
    {
        "id": "9231865ff3148b49",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "southbound.updateSubscriptions",
        "links": [],
        "x": 290,
        "y": 1400,
        "wires": [
            [
                "c51eb8701d678fcf",
                "1ee9cdfac8c39c44",
                "1ec43281754fe568"
            ]
        ],
        "l": true
    },
    {
        "id": "46a5a9b368202acd",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "southbound.updateSubscriptions",
        "mode": "return",
        "links": [],
        "x": 1875,
        "y": 1400,
        "wires": []
    },
    {
        "id": "3b16557852968add",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "southbound.resetSebscriptions",
        "links": [],
        "x": 290,
        "y": 1480,
        "wires": [
            [
                "a3c38653d83ba91e"
            ]
        ],
        "l": true
    },
    {
        "id": "bbd803fb8d0f8ede",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "southbound.resetSebscriptions out",
        "mode": "return",
        "links": [],
        "x": 1875,
        "y": 1480,
        "wires": []
    },
    {
        "id": "65e9dd4ea589116f",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1500,
        "wires": []
    },
    {
        "id": "1507dd29d9896744",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "southbound.routed",
        "links": [],
        "x": 250,
        "y": 620,
        "wires": [
            [
                "bb464dc962e986c0"
            ]
        ],
        "l": true
    },
    {
        "id": "4380234d202dd256",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "southbound.routed out",
        "mode": "return",
        "links": [],
        "x": 465,
        "y": 680,
        "wires": []
    },
    {
        "id": "3abd27719863de64",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "southbound.metrics",
        "links": [],
        "x": 250,
        "y": 860,
        "wires": [
            [
                "e35d4cb1f2b5081a"
            ]
        ],
        "l": true
    },
    {
        "id": "a81af3fe552c97a0",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "southbound.routed out",
        "mode": "return",
        "links": [],
        "x": 465,
        "y": 900,
        "wires": []
    },
    {
        "id": "b21cf6aa08b3e9e4",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "southbound.updateValue",
        "links": [],
        "x": 270,
        "y": 980,
        "wires": [
            [
                "201be4c08d5d19e0"
            ]
        ],
        "l": true
    },
    {
        "id": "05f103af299b62e2",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "southbound.routed out",
        "mode": "return",
        "links": [],
        "x": 465,
        "y": 1020,
        "wires": []
    },
    {
        "id": "ca577eee7145cfb7",
        "type": "unsafe-function",
        "z": "3db1c009.99d51",
        "name": "PayloadProcessing",
        "func": "var msg1 = {};\nlet observation = {};\nobservation.id = msg.id;\nobservation.source = msg.source;\nobservation.direction = msg.direction;\nobservation.observableReference = msg.observableReference;\nobservation.timestamp = msg.timestamp;\nobservation.payload = msg.payload;\nobservation.topic = msg.topic;\n//msg1.topic = context.global.get('AASIdentifier');\nif (msg.topic == \"\" || typeof msg.topic == \"undefined\") {\n    msg1.topic = msg.payload.observableReference;\n    msg1.payload = observation;\n} else {\n    msg1.topic = msg.topic;\n    msg1.payload = observation;\n}\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 420,
        "wires": [
            [
                "a358175dc5be21b6",
                "e33e736251599ab4"
            ]
        ]
    },
    {
        "id": "a358175dc5be21b6",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1310,
        "y": 340,
        "wires": []
    },
    {
        "id": "96889178a4b233f6",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 220,
        "wires": []
    },
    {
        "id": "961e5989502b45f9",
        "type": "mqtt out",
        "z": "3db1c009.99d51",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "e70d9188.7d95e",
        "x": 1830,
        "y": 380,
        "wires": []
    },
    {
        "id": "2a2379bd896bd5d3",
        "type": "comment",
        "z": "3db1c009.99d51",
        "name": "To MQTT",
        "info": "",
        "x": 1000,
        "y": 340,
        "wires": []
    },
    {
        "id": "7de52c9b9620a462",
        "type": "Load Balance",
        "z": "3db1c009.99d51",
        "defaultcapacity": 100,
        "dynamic": "d7e6d6dc.d37318",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 1580,
        "y": 420,
        "wires": [
            [],
            [
                "961e5989502b45f9",
                "bc4db7d796cfe8d3"
            ],
            [
                "411cbdf2e7b669be"
            ]
        ]
    },
    {
        "id": "411cbdf2e7b669be",
        "type": "mqtt out",
        "z": "3db1c009.99d51",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "e70d9188.7d95e",
        "x": 1830,
        "y": 460,
        "wires": []
    },
    {
        "id": "bc4db7d796cfe8d3",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1510,
        "y": 320,
        "wires": []
    },
    {
        "id": "8e44c67736d4e9ae",
        "type": "link in",
        "z": "3db1c009.99d51",
        "name": "MQTT in",
        "links": [],
        "x": 335,
        "y": 300,
        "wires": [
            [
                "ca577eee7145cfb7",
                "96889178a4b233f6",
                "cde2fdea5a797ff6"
            ]
        ]
    },
    {
        "id": "cde2fdea5a797ff6",
        "type": "link out",
        "z": "3db1c009.99d51",
        "name": "MQTT out",
        "mode": "return",
        "links": [],
        "x": 1775,
        "y": 300,
        "wires": []
    },
    {
        "id": "e33e736251599ab4",
        "type": "switch",
        "z": "3db1c009.99d51",
        "name": "",
        "property": "encrypt",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 420,
        "wires": [
            [
                "7de52c9b9620a462"
            ],
            [
                "45c7bb3fdb70947c"
            ]
        ]
    },
    {
        "id": "68db3fe56b881c75",
        "type": "inject",
        "z": "3db1c009.99d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 540,
        "wires": [
            [
                "7f98e5c8bb73a7bd"
            ]
        ]
    },
    {
        "id": "7f98e5c8bb73a7bd",
        "type": "unsafe-function",
        "z": "3db1c009.99d51",
        "name": "PayloadProcessing",
        "func": "var msg1 = {};\nlet observation = {};\nobservation.id = \"test\";\nobservation.source = \"myAAS\";\nobservation.direction = \"out\";\nobservation.observableReference = \"msg.observableReference\";\nobservation.timestamp = \"msg.timestamp\";\nobservation.payload = \"msg.payload\";\nobservation.topic = \"msg.topic\";\n//msg1.topic = context.global.get('AASIdentifier');\nif (msg.topic == \"\" || typeof msg.topic == \"undefined\") {\n    msg1.topic = msg.payload.observableReference;\n    msg1.payload = observation;\n} else {\n    msg1.topic = msg.topic;\n    msg1.payload = observation;\n}\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 540,
        "wires": [
            [
                "e33e736251599ab4"
            ]
        ]
    },
    {
        "id": "61a1b61a35c98e6c",
        "type": "unsafe-function",
        "z": "3db1c009.99d51",
        "name": "PayloadProcessing",
        "func": "var msg1 = {};\nlet observation = {};\nobservation.id = msg.id;\nobservation.source = msg.source;\nobservation.direction = msg.direction;\nobservation.observableReference = msg.observableReference;\nobservation.timestamp = msg.timestamp;\nobservation.payload = msg.payload;\nobservation.topic = msg.topic;\n//msg1.topic = context.global.get('AASIdentifier');\nif (msg.topic == \"\" || typeof msg.topic == \"undefined\") {\n    msg1.topic = \"\";\n    msg1.payload = JSON.stringify(observation);\n} else {\n    msg1.topic = \"\";\n    msg1.payload = JSON.stringify(observation);\n}\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 880,
        "wires": [
            [
                "d8de01844ad18dbc",
                "9ce5fa4b1ca22e59"
            ]
        ]
    },
    {
        "id": "092c444b39d7671d",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 470,
        "y": 780,
        "wires": []
    },
    {
        "id": "f2691110f2923b4c",
        "type": "Load Balance",
        "z": "3db1c009.99d51",
        "defaultcapacity": 100,
        "dynamic": "d7e6d6dc.d37318",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 1240,
        "y": 920,
        "wires": [
            [],
            [
                "6eeeab6dfeb25960"
            ],
            [
                "8b50dd825e2ac7dc"
            ]
        ]
    },
    {
        "id": "d8de01844ad18dbc",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1210,
        "y": 860,
        "wires": []
    },
    {
        "id": "30d7173d616dedec",
        "type": "link in",
        "z": "3db1c009.99d51",
        "name": "KAFKA in",
        "links": [],
        "x": 335,
        "y": 820,
        "wires": [
            [
                "5d339e7318eb4734",
                "092c444b39d7671d",
                "61a1b61a35c98e6c"
            ]
        ]
    },
    {
        "id": "5d339e7318eb4734",
        "type": "link out",
        "z": "3db1c009.99d51",
        "name": "KAFKA out",
        "mode": "return",
        "links": [],
        "x": 1815,
        "y": 820,
        "wires": []
    },
    {
        "id": "9ce5fa4b1ca22e59",
        "type": "switch",
        "z": "3db1c009.99d51",
        "name": "",
        "property": "encrypt",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 920,
        "wires": [
            [
                "f2691110f2923b4c"
            ],
            [
                "b278d6abfcbfcdfc"
            ]
        ]
    },
    {
        "id": "8dcbaf6c67ef2ae4",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1190,
        "y": 1180,
        "wires": []
    },
    {
        "id": "0b49f5a71a590cb6",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1190,
        "y": 1220,
        "wires": []
    },
    {
        "id": "802986f61fc9d518",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1210,
        "y": 1440,
        "wires": []
    },
    {
        "id": "2ac447e38ff068ba",
        "type": "inject",
        "z": "3db1c009.99d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "listTopics",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 1200,
        "wires": [
            [
                "04783421e5b9026b"
            ]
        ]
    },
    {
        "id": "24179aae9a10d5f7",
        "type": "link in",
        "z": "3db1c009.99d51",
        "name": "encrypt in",
        "links": [],
        "x": 335,
        "y": 1620,
        "wires": [
            [
                "8692a308ffe9b589"
            ]
        ]
    },
    {
        "id": "5b9a1bfddb52fef6",
        "type": "link out",
        "z": "3db1c009.99d51",
        "name": "encrypt out",
        "mode": "return",
        "links": [],
        "x": 1575,
        "y": 1620,
        "wires": []
    },
    {
        "id": "8692a308ffe9b589",
        "type": "encrypt",
        "z": "3db1c009.99d51",
        "name": "",
        "algorithm": "AES",
        "key": "bd4nrg",
        "x": 940,
        "y": 1620,
        "wires": [
            [
                "5b9a1bfddb52fef6"
            ]
        ]
    },
    {
        "id": "b278d6abfcbfcdfc",
        "type": "link call",
        "z": "3db1c009.99d51",
        "name": "",
        "links": [
            "24179aae9a10d5f7"
        ],
        "timeout": "30",
        "x": 1040,
        "y": 980,
        "wires": [
            [
                "f2691110f2923b4c"
            ]
        ]
    },
    {
        "id": "45c7bb3fdb70947c",
        "type": "link call",
        "z": "3db1c009.99d51",
        "name": "",
        "links": [
            "24179aae9a10d5f7"
        ],
        "timeout": "30",
        "x": 1280,
        "y": 480,
        "wires": [
            [
                "7de52c9b9620a462"
            ]
        ]
    },
    {
        "id": "b75adddeb2fb3e6d",
        "type": "msg-router",
        "z": "3db1c009.99d51",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": false,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": false,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 590,
        "y": 120,
        "wires": [
            [
                "937a39644144b852"
            ],
            [
                "ed2c7ff5741eb991"
            ],
            []
        ]
    },
    {
        "id": "99b95b4d975cf063",
        "type": "link in",
        "z": "3db1c009.99d51",
        "name": "callNBI in",
        "links": [],
        "x": 255,
        "y": 120,
        "wires": [
            [
                "b75adddeb2fb3e6d"
            ]
        ]
    },
    {
        "id": "29d98f1144bd68bb",
        "type": "link out",
        "z": "3db1c009.99d51",
        "name": "callNBI out",
        "mode": "return",
        "links": [],
        "x": 2195,
        "y": 140,
        "wires": []
    },
    {
        "id": "937a39644144b852",
        "type": "link call",
        "z": "3db1c009.99d51",
        "name": "",
        "links": [
            "8e44c67736d4e9ae"
        ],
        "timeout": "30",
        "x": 1160,
        "y": 80,
        "wires": [
            [
                "29d98f1144bd68bb"
            ]
        ]
    },
    {
        "id": "ed2c7ff5741eb991",
        "type": "link call",
        "z": "3db1c009.99d51",
        "name": "",
        "links": [
            "30d7173d616dedec"
        ],
        "timeout": "30",
        "x": 1160,
        "y": 140,
        "wires": [
            [
                "29d98f1144bd68bb"
            ]
        ]
    },
    {
        "id": "04783421e5b9026b",
        "type": "Kafka Admin",
        "z": "3db1c009.99d51",
        "name": "",
        "broker": "6ff683fad530755b",
        "x": 990,
        "y": 1200,
        "wires": [
            [
                "8dcbaf6c67ef2ae4"
            ],
            [
                "0b49f5a71a590cb6"
            ]
        ]
    },
    {
        "id": "c46120c57b198d8f",
        "type": "Kafka Consumer",
        "z": "3db1c009.99d51",
        "name": "",
        "broker": "",
        "regex": false,
        "topics": [
            {
                "topic": "",
                "offset": 0,
                "partition": 0
            }
        ],
        "groupId": "kafka-node-group",
        "autoCommit": "true",
        "autoCommitIntervalMs": 5000,
        "fetchMaxWaitMs": 100,
        "fetchMinBytes": 1,
        "fetchMaxBytes": 1048576,
        "fromOffset": 0,
        "encoding": "utf8",
        "keyEncoding": "utf8",
        "connectionType": "Consumer",
        "convertToJson": false,
        "x": 950,
        "y": 1440,
        "wires": [
            [
                "802986f61fc9d518"
            ]
        ]
    },
    {
        "id": "6eeeab6dfeb25960",
        "type": "Kafka Producer",
        "z": "3db1c009.99d51",
        "name": "",
        "broker": "",
        "topic": "",
        "topicSlash2dot": false,
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "partitionerType": 0,
        "key": "",
        "partition": 0,
        "attributes": 0,
        "connectionType": "Producer",
        "convertFromJson": false,
        "x": 1520,
        "y": 900,
        "wires": []
    },
    {
        "id": "8b50dd825e2ac7dc",
        "type": "Kafka Producer",
        "z": "3db1c009.99d51",
        "name": "",
        "broker": "",
        "topic": "",
        "topicSlash2dot": false,
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "partitionerType": 0,
        "key": "",
        "partition": 0,
        "attributes": 0,
        "connectionType": "Producer",
        "convertFromJson": false,
        "x": 1520,
        "y": 960,
        "wires": []
    },
    {
        "id": "f9b5420cad128eaf",
        "type": "inject",
        "z": "3db1c009.99d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "encrypt_cmd",
        "payload": "on",
        "payloadType": "str",
        "x": 600,
        "y": 1720,
        "wires": [
            [
                "a89170b27e831c5c"
            ]
        ]
    },
    {
        "id": "5360c0d6891e9fb7",
        "type": "inject",
        "z": "3db1c009.99d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "encrypt_cmd",
        "payload": "off",
        "payloadType": "str",
        "x": 610,
        "y": 1760,
        "wires": [
            [
                "a89170b27e831c5c"
            ]
        ]
    },
    {
        "id": "a89170b27e831c5c",
        "type": "function",
        "z": "3db1c009.99d51",
        "name": "Encryption",
        "func": "if(msg.topic === \"encrypt_cmd\"){\n    if(msg.payload === \"on\"){\n        context.flow.set(\"encrypt\", true);\n    } else if (msg.payload === \"off\") {\n        context.flow.set(\"encrypt\", false);\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1740,
        "wires": [
            [
                "8db2cd280f2c6c33"
            ]
        ]
    },
    {
        "id": "8db2cd280f2c6c33",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 1740,
        "wires": []
    },
    {
        "id": "9b99d064808aa5a3",
        "type": "inject",
        "z": "d6ac686a8b33b0c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 600,
        "y": 740,
        "wires": [
            [
                "4c73862aca011a2c",
                "d9231ce7a7157e12"
            ]
        ]
    },
    {
        "id": "4c73862aca011a2c",
        "type": "function",
        "z": "d6ac686a8b33b0c0",
        "name": "",
        "func": "msg.topic = \"select * FROM aasLogs\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 740,
        "wires": [
            [
                "e5d1870f13a17d9c"
            ]
        ]
    },
    {
        "id": "e5d1870f13a17d9c",
        "type": "sqlite",
        "z": "d6ac686a8b33b0c0",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1130,
        "y": 740,
        "wires": [
            [
                "d46e4990ad8a2374"
            ]
        ]
    },
    {
        "id": "d46e4990ad8a2374",
        "type": "debug",
        "z": "d6ac686a8b33b0c0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 740,
        "wires": []
    },
    {
        "id": "d9231ce7a7157e12",
        "type": "function",
        "z": "d6ac686a8b33b0c0",
        "name": "",
        "func": "msg.topic = \"select * FROM accountLogs\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 800,
        "wires": [
            [
                "4da6b4b63bc9c3be"
            ]
        ]
    },
    {
        "id": "4da6b4b63bc9c3be",
        "type": "sqlite",
        "z": "d6ac686a8b33b0c0",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1130,
        "y": 800,
        "wires": [
            [
                "d46e4990ad8a2374"
            ]
        ]
    },
    {
        "id": "2706d3c7.5d9a2c",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "parameterizedHttpRequest",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\n\nmsg1.method = 'GET';\nmsg1.url = context.global.get('namespace') + \"/aasServer/env\";\n\n//msg2.descriptionId = \"b5595a4a-40a5-46e6-a9c6-f493f99a72a1\"; \n\n//msg3.method = 'GET';\n//msg3.url = context.global.get('namespace') + \"/aasServer/submodels\";\n\nreturn [msg1, msg2, msg];",
        "outputs": 3,
        "noerr": 0,
        "x": 1040,
        "y": 240,
        "wires": [
            [
                "8adcfea2.e5f07"
            ],
            [
                "6b21701a6d975a70"
            ],
            [
                "655852a0.36bea4"
            ]
        ]
    },
    {
        "id": "b0b325ea.8aff3",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "Refresh button",
        "group": "28ba0356.ef188c",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "#14524e",
        "icon": "cached",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 520,
        "y": 300,
        "wires": [
            [
                "2706d3c7.5d9a2c"
            ]
        ]
    },
    {
        "id": "649d6c1f.031b2c",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "flowVariables",
        "func": "context.flow.set('logs', []);\n\nvar fs = context.global.get('fs');\nvar path = context.global.get('path');\ncontext.flow.set('accounts', []);\ncontext.flow.set('accountlog', []);\n\nvar fileName = \"httpauthfile.txt\";\nvar basePath = context.global.get('staticDocs');\nvar filePath = path.join(basePath, \"httpauth\", fileName);\n\nfs.readFile(filePath, \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    let content = data;\n    var contentArray = content.split(\"\\n\");\n    //var account = {username: contentArray[0], password: contentArray[2]};\n    var accounts = context.flow.get('accounts');\n    for(var account in contentArray){\n        accounts.push(contentArray[account]);    \n    }\n    \n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    exit();          // Or put the next step in a function and invoke it\n    \n    });\n    \nfunction exit() {\n    //msg.payload = content;\n    node.send(msg);\n    \n}\n    \n    //return msg;\n    //context.flow.set('Body', \\\"\\\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 687.0001220703125,
        "y": 153.3333511352539,
        "wires": [
            [
                "2706d3c7.5d9a2c",
                "f19e8da.11a8c7"
            ]
        ]
    },
    {
        "id": "8adcfea2.e5f07",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1340.0000915527344,
        "y": 221.66668701171875,
        "wires": [
            [
                "5e2d4012.8c261",
                "aa9b9e00.d9a198"
            ]
        ]
    },
    {
        "id": "c18d191f.026578",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "detectBrowserReload",
        "func": "var payload = msg.payload;\nif(payload === \"connect\"){\n    return msg;\n}\n\nreturn null;\n//context.flow.set('Body', \"\");",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 240,
        "wires": [
            [
                "2706d3c7.5d9a2c"
            ]
        ]
    },
    {
        "id": "7e763d50.949554",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "b0b325ea.8aff3"
            ]
        ]
    },
    {
        "id": "2cf012d1.4a7f5e",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "NotificationMessage",
        "func": "//Retreiving Libraries from the Settings.json file\nmsg.payload = \"Manifest has been (re)loaded\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 580,
        "wires": [
            [
                "f3b7793f.d22a9"
            ]
        ]
    },
    {
        "id": "648a464.2a92838",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1177.5,
        "y": 618.75,
        "wires": []
    },
    {
        "id": "43780ceb.0f273c",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 480,
        "y": 160,
        "wires": [
            [
                "649d6c1f.031b2c"
            ]
        ]
    },
    {
        "id": "f19e8da.11a8c7",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1130,
        "y": 160,
        "wires": []
    },
    {
        "id": "5e2d4012.8c261",
        "type": "join",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1950,
        "y": 220,
        "wires": [
            [
                "d8a4f595.617738",
                "a8614b5f.c2fa5"
            ]
        ]
    },
    {
        "id": "3b691b47.1422f4",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1530,
        "y": 260,
        "wires": []
    },
    {
        "id": "e829d4f5.0e483",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "SubmodelsProcessing",
        "func": "var msg1 = {};\nvar payload = {};\n//var splitted = msg.payload[0].value[0].value.split(\" \");\n//var splitted = msg.payload.value[0].value.split(\" \");\n//var splitted = msg.payload[0].value.split(\" \");\npayload.type = msg.payload.type;\npayload.hostname = msg.payload.hostname;;\npayload.release = msg.payload.release;;\npayload.platform = msg.payload.platform;\npayload.arch =msg.payload.arch;\npayload.namespace = context.global.get('namespace');\nmsg1.payload = payload;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 1740,
        "y": 300,
        "wires": [
            [
                "5e2d4012.8c261"
            ]
        ]
    },
    {
        "id": "5a1e731e.6fd0ec",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "c18d191f.026578"
            ]
        ]
    },
    {
        "id": "f3b7793f.d22a9",
        "type": "ui_toast",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Manifest",
        "name": "Notify Manifest Changes",
        "x": 1550,
        "y": 580,
        "wires": []
    },
    {
        "id": "d8a4f595.617738",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2130,
        "y": 180,
        "wires": []
    },
    {
        "id": "a8614b5f.c2fa5",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "SubmodelsProcessing",
        "func": "//Retreiving Libraries from the Settings.json file\nvar outMsg = {};\nvar payload = [];\noutMsg.identifier = context.global.get(\"AASIdentifier\");\noutMsg.payload = payload;\nfor(var element = 0; element < msg.payload.length; element++){\n    if(typeof(msg.payload[element].assetAdministrationShells) !== 'undefined' && msg.payload[element] !== null){\n         outMsg.payload[1] = msg.payload[element];\n    } else {\n        outMsg.payload[0] = msg.payload[element];\n    }\n}\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2160,
        "y": 220,
        "wires": [
            [
                "a218c1c9.bf3c",
                "b36514b5.7418a8"
            ]
        ]
    },
    {
        "id": "a218c1c9.bf3c",
        "type": "msg-router",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 6,
        "x": 2380,
        "y": 220,
        "wires": [
            [
                "8b178b4f.b48a5"
            ],
            [
                "dbc07abd.87dac8"
            ],
            [
                "b1d7bd45.436bf8"
            ],
            [
                "28a6230f679f8eeb"
            ],
            [
                "eb868983.45c2e8"
            ],
            [
                "7a918d3a.b1ea34"
            ]
        ]
    },
    {
        "id": "a5d497d.a955b68",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "b9ac7006.de90a",
        "name": "Counters",
        "order": 1,
        "width": 10,
        "height": "20",
        "format": "    <script>\n        (function(scope) {\n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    var aass = msg.payload[1].assetAdministrationShells;\n                    scope.aasCounter = aass.length;\n                    var assets = msg.payload[1].assets;\n                    scope.assetCounter = assets.length;\n                    var submodels = msg.payload[1].submodels;\n                    scope.submodelsCounter = submodels.length;\n                    scope.submodelElementsCounter = 0;\n                    for(var submodel in submodels){\n                        scope.submodelElementsCounter = scope.submodelElementsCounter + submodels[submodel].submodelElements.length;\n                    }\n                    scope.conceptDescriptionsCounter = msg.payload[1].conceptDescriptions.length;\n                }\n            });\n        })(scope)\n    </script>\n        <div class=\"container\">\n            <h5><span class=\"badge badge-warning\">Asset Administration Shells: {{aasCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Assets: {{assetCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Submodels: {{submodelsCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Submodel Elements: {{submodelElementsCounter}}</span></h5>\n            <h5><span class=\"badge badge-warning\">Concept Descriptions: {{conceptDescriptionsCounter}}</span></h5>\n        </div>\n        <div>\n            <img width=\"300\" height=\"300\" src=\"{{msg.qrcode}}\">\n        </div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3380,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "8b178b4f.b48a5",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2757.08349609375,
        "y": 168.58338928222656,
        "wires": []
    },
    {
        "id": "dbc07abd.87dac8",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "8fc17f5a.38023",
        "name": "Header Submodel",
        "order": 1,
        "width": 15,
        "height": 30,
        "format": "<div id=\"deck11\" class=\"card-group\">\n            <div class=\"card-body\">\n            <div class=\"card text-white bg-light mb-3\" style=\"max-width: 45rem;\">\n                <ul class=\"list-group list-group-flush\">\n                 <li class=\"list-group-item\">\n                    <button class=\"btn btn-link text-dark\" data-toggle=\"collapse\" data-target=\"#collapse11\" aria-expanded=\"true\" aria-controls=\"#collapse11\">\n                            {{msg.identifier}} Overview\n                    </button> <span class=\"badge  badge-warning badge-pill\">{{msg.payload[1].assetAdministrationShells.length}}</span>\n                     <!--<a class=\"text-dark\" data-toggle=\"collapse\" href=\"#collapse11\">{{msg.identifier}} Overview</a>!-->\n                     <ul id=\"collapse11\" class=\"list-group list-group-flush panel-collapse collapse\">\n                        <li class=\"list-group-item list-group-item-info\" ng-repeat=\"shell in msg.payload[1].assetAdministrationShells\" ng-init=\"shellIndex=$index\">\n                        <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse21\" aria-expanded=\"true\" aria-controls=\"#collapse21\">\n                            Administration Shell: {{shellIndex}}\n                        </button>\n                        <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse21\" aria-expanded=\"true\" >Administration Shell: {{shellIndex}} </a>!-->\n                            <ul id=\"collapse21\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                <li class=\"list-group-item\">\n                                    <a class=\"text-black-50\">Identififcation : <strong>{{shell.identification.id}}</strong></a>\n                                </li>\n                                <li class=\"list-group-item \">\n                                    <a class=\"text-black-50\">Asset Identification : <strong>{{shell.asset.keys[0].value}}</strong></a>\n                                </li>\n                                <li class=\"list-group-item\">\n                                    <a class=\"text-black-50\">Derived From : <strong>{{shell.derivedFrom.keys[0].value}}</strong></a>\n                                </li>\n                                <!--<li class=\"list-group-item list-group-item-info\">!--><li class=\"list-group-item\">\n                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse31\" aria-expanded=\"true\" aria-controls=\"#collapse31\">\n                                        Administration\n                                    </button>\n                                <!--<a class=\"text-black-50\"  data-toggle=\"collapse\" href=\"#collapse31\">Administration</a>!-->\n                                    <ul id=\"collapse31\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                        <li class=\"list-group-item list-group-item-info\">\n                                            <a class=\"text-info\" >version: {{shell.administration.version}}</a>\n                                        </li>\n                                         <li class=\"list-group-item list-group-item-info\">\n                                            <a class=\"text-info\" >version: {{shell.administration.revision}}</a>\n                                        </li>\n                                    </ul>\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                 </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3400.08349609375,
        "y": 202.08338928222656,
        "wires": [
            [
                "ed973683.3fdac8"
            ]
        ]
    },
    {
        "id": "b1d7bd45.436bf8",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "7a30c02.5d2894",
        "name": "Header Overview",
        "order": 1,
        "width": 15,
        "height": "20",
        "format": "    <script>\n        this.scope.sendRequest = function(element){\n            this.send({payload:{virtualLocation:element.Attribute[1].Value[0]}});\n        }\n        this.scope.isVisible = function(element){\n            if(element.Attribute[0].Attribute[0].Value[0] == \"\" && element.Attribute[0].Attribute[0].Value[1] == \"\")\n                return false;\n            else return true;\n        }\n    </script>\n\n    <div id=\"deck\" class=\"card-group\">\n            <div class=\"card-body\">\n            <div class=\"card text-white bg-light mb-3\" style=\"max-width: 45rem;\">\n                <ul class=\"list-group list-group-flush\">\n                 <li class=\"list-group-item\">\n                     <a class=\"text-dark\">{{msg.identifier}} Running Platform</a>\n                     <ul class=\"list-group list-group-flush\">\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Hostname : <strong>{{msg.payload[0].hostname}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Type : <strong>{{msg.payload[0].type}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Platform : <strong>{{msg.payload[0].platform}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Architecture : <strong>{{msg.payload[0].arch}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Release : <strong>{{msg.payload[0].release}}</strong></a>\n                        </li>\n                        <li class=\"list-group-item list-group-item-info\">\n                            <a class=\"text-info\">Namespace : <strong>{{msg.payload[0].namespace}}</strong></a>\n                        </li>\n                    </ul>\n                 </li>\n                </ul>\n            </div>\n            </div>\n    </div>\n    <div id=\"deck\" class=\"card-group\">\n            <div class=\"card-body\">\n            <div class=\"card text-white bg-light mb-3\" style=\"max-width: 45rem;\">\n                <ul class=\"list-group list-group-flush\">\n                 <li class=\"list-group-item\">\n                     <a class=\"text-dark\">{{msg.identifier}} Overview</a>\n                     <ul class=\"list-group list-group-flush\">\n                        <li class=\"list-group-item list-group-item-info\" ng-repeat=\"shell in msg.payload[1].assetAdministrationShells\" ng-init=\"shellIndex=$index\">\n                        <a class=\"text-info\" aria-expanded=\"true\" >Administration Shell: {{shellIndex}} </a>\n                        <ul class=\"list-group list-group-flush\">\n                            <li class=\"list-group-item\">\n                                <a class=\"text-black-50\">Identififcation : <strong>{{shell.identification.id}}</strong></a>\n                            </li>\n                            <li class=\"list-group-item \">\n                                <a class=\"text-black-50\">Asset Identification : <strong>{{shell.asset.keys[0].value}}</strong></a>\n                            </li>\n                            <li class=\"list-group-item\">\n                                <a class=\"text-black-50\">Derived From : <strong>{{shell.derivedFrom.keys[0].value}}</strong></a>\n                            </li>\n                        </ul>\n                        </li>\n                    </ul>\n                 </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n\n",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 3401.3334045410156,
        "y": 241.6667022705078,
        "wires": [
            []
        ]
    },
    {
        "id": "40ba0174.feea08",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "LiveDataSelectedElements",
        "func": "//Retreiving Libraries from the Settings.json file\nif(msg.payload != \"init\"){\n    var selectedElements = context.flow.get('selectedElements');\n    var selectedElement = msg.payload;\n    \n    if(selectedElements.lenght == 0){\n        //selectedElements.push(selectedElement._Attribs.ID);\n        selectedElements.push(selectedElement);\n    } else {\n        var found = false;\n        for(var element = 0; element < selectedElements.length; element++){\n            //if(selectedElement._Attribs.ID == selectedElements[element]){\n            if(selectedElement.selectedElement.idShort == selectedElements[element].selectedElement.idShort && selectedElement.submodelId == selectedElements[element].submodelId && selectedElement.shellId == selectedElements[element].shellId){\n                selectedElements.splice(element, 1);\n                found = true;\n                break;\n            }\n        }\n        if(!found){\n            //selectedElements.push(selectedElement._Attribs.ID);\n            selectedElements.push(selectedElement);\n        }\n    }\n    context.flow.set('selectedElements', selectedElements);\n    msg.payload = selectedElements;\n    return msg;\n} else {\n    context.flow.set('selectedElements', []);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 3460,
        "y": 600,
        "wires": [
            [
                "13eaa4a6.391393"
            ]
        ]
    },
    {
        "id": "ed973683.3fdac8",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3601.58349609375,
        "y": 202.08338928222656,
        "wires": []
    },
    {
        "id": "13eaa4a6.391393",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3650,
        "y": 600,
        "wires": []
    },
    {
        "id": "655852a0.36bea4",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1330,
        "y": 500,
        "wires": []
    },
    {
        "id": "7a918d3a.b1ea34",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "retrievingSubmodels",
        "func": "var outMsg = {};\nvar administrationShells = msg.payload[1].assetAdministrationShells;\nvar submodels = msg.payload[1].submodels;\nvar shells = [];\nfor(var shellIndex = 0; shellIndex < administrationShells.length; shellIndex++){\n    var element = {};\n    var shell = administrationShells[shellIndex];\n    element.shellIdShort = shell.idShort;\n    element.shellIdentifier = shell.identification.id;\n    element.submodels = [];\n    var shellSubmodels = shell.submodels;\n    for(var submodelIndex = 0; submodelIndex < submodels.length; submodelIndex++){\n        for(var shellSubmodelIndex = 0; shellSubmodelIndex < shellSubmodels.length; shellSubmodelIndex++){\n            if(submodels[submodelIndex].identification.id === shellSubmodels[shellSubmodelIndex].keys[0].value){\n                element.submodels.push(submodels[submodelIndex]);\n            }\n        }\n    }\n    shells.push(element);\n}\n//outMsg.payload = msg.payload[1].submodels;\noutMsg.payload = shells;\noutMsg.subscriptions = context.flow.get(\"subscriptions\") || [];\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2620,
        "y": 600,
        "wires": [
            [
                "a845f73417945e9c"
            ]
        ]
    },
    {
        "id": "aa9b9e00.d9a198",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1530,
        "y": 183.3333282470703,
        "wires": []
    },
    {
        "id": "eb868983.45c2e8",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "retrievingConceptDescriptions",
        "func": "var outMsg = {};\noutMsg.payload = msg.payload[1].conceptDescriptions;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2650,
        "y": 520,
        "wires": [
            [
                "2fa38586.c0acea",
                "f76cbbfe.4be85"
            ]
        ]
    },
    {
        "id": "57cc2b70.afb41c",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3390,
        "y": 560,
        "wires": []
    },
    {
        "id": "2fa38586.c0acea",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2950,
        "y": 500,
        "wires": []
    },
    {
        "id": "b36514b5.7418a8",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2370,
        "y": 140,
        "wires": []
    },
    {
        "id": "b77c222a.ae9128",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "d": true,
        "g": "cffb33fa.8a9ae",
        "group": "f57f5dd7.e298c",
        "name": "Active Subscriptions",
        "order": 0,
        "width": "34",
        "height": "20",
        "format": "<script>\n    (function(scope) {\n            //scope.connections = [];\n            scope.$watch('msg', function(msg){\n                //scope.connections = [];\n                if (msg) {\n                    if (msg.payload) {\n                        scope.subscriptions = [];\n                        for (var index in msg.payload){\n                            var subscription = msg.payload[index].split(\";\");\n                            scope.subscriptions.push(subscription);\n                        }\n                        //scope.connections = msg.payload;\n                    }\n                }\n            });\n            scope.init = function() {\n                //scope.connections = [];\n                //scope.send({payload:scope.connections});\n            }\n        })(scope)\n</script>\n<div id=\"subscriptions_Table\" ng-init=\"init()\">\n    <table class=\"table table-sm\">\n        <thead class=\"text-dark\">\n            <tr>\n                <th scope=\"col\">AAS Id</th>\n                <th scope=\"col\">Submodel idShort</th>\n                <th scope=\"col\">Submodel Element idShort</th>\n                <th scope=\"col\">Status</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr class=\"table-info\" ng-repeat=\"s in subscriptions\">\n                <td><a class=\"text-dark\">{{s[0]}}</a></td>\n                <td><a class=\"text-dark\">{{s[1]}}</a></td>\n                <td><a class=\"text-dark\">{{s[2]}}</a></td>\n                <td><a class=\"text-success\">Subscribed</a></td>\n\n                <!--<td><a class=\"text-dark\">{{i.value}}</a></td>!-->\n                <!--<td style=\"cursor:pointer;\" ng-click=\"remove(i)\" title=\"Remove\">&times;</td>!-->\n            </tr>\n        </tbody>\n\n    </table>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3560,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "dbf5d24c.fba6",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "events": "change",
        "x": 2610,
        "y": 2800,
        "wires": [
            [
                "a44bac1b.4c70e8"
            ]
        ]
    },
    {
        "id": "57455a67.915dcc",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3070,
        "y": 2800,
        "wires": [
            [
                "bf3d8ae0.fc9768",
                "f0cbc0ca.f85c9",
                "df98a659a5b217dc"
            ]
        ]
    },
    {
        "id": "a44bac1b.4c70e8",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "func": "\nmsg.method = 'GET';\nmsg.url = context.global.get('namespace') + \"/aasServer/subscriptions\";\n///aasServer/shells/connections\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2860,
        "y": 2800,
        "wires": [
            [
                "57455a67.915dcc",
                "84848923.c67118"
            ]
        ]
    },
    {
        "id": "bf3d8ae0.fc9768",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3290,
        "y": 2740,
        "wires": []
    },
    {
        "id": "5eb9f32e.f40bd4",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2620,
        "y": 3000,
        "wires": [
            [
                "a44bac1b.4c70e8"
            ]
        ]
    },
    {
        "id": "84848923.c67118",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3110,
        "y": 2720,
        "wires": []
    },
    {
        "id": "f0cbc0ca.f85c9",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "connectionsNr",
        "func": "var outMsg = {};\noutMsg.payload = {};\noutMsg.payload.data = msg.payload.length;\noutMsg.payload.link = \"activeSubscriptions\";\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3310,
        "y": 2840,
        "wires": [
            [
                "078956014bccb540"
            ]
        ]
    },
    {
        "id": "33199ab4.21681e",
        "type": "ui_iframe",
        "z": "2164c119.f88826",
        "g": "9eaca16.128cb6",
        "group": "175d54ea.788a73",
        "name": "Dashboards Link",
        "order": 1,
        "width": "30",
        "height": "25",
        "url": "",
        "origin": "*",
        "x": 630,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "9a1f71ad.ecf3e8",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "9eaca16.128cb6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "portfw",
                "v": "PORT_FORWARDING",
                "vt": "env"
            },
            {
                "p": "host",
                "v": "HOST",
                "vt": "env"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 2220,
        "wires": [
            [
                "726ded99.bd5cac"
            ]
        ]
    },
    {
        "id": "726ded99.bd5cac",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "9eaca16.128cb6",
        "name": "",
        "func": "if(msg.host === \"\"){\n    msg.url = \"http://localhost:\" + msg.portfw + \"/flexdash\";\n} else {\n    msg.url = \"http://\" + msg.host + \":\" + msg.portfw + \"/flexdash\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 2220,
        "wires": [
            [
                "33199ab4.21681e",
                "d4ad2f78.a01488"
            ]
        ]
    },
    {
        "id": "ad9570df.a95b4",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 2750,
        "y": 700,
        "wires": []
    },
    {
        "id": "8de2ce5c.1783c8",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "77c7337d.b33f54",
        "name": "Asset",
        "order": 1,
        "width": 10,
        "height": "20",
        "format": "<img src=\"{{msg.payload}}\">",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 3150,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "90855920.b8ec9",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "group": "",
        "name": "Load Bootstrap libraries",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/bootstrap.min.css\" />\n<link rel=\"stylesheet\" href=\"css/novaas.css\">\n<script type=\"text/javascript\" src=\"/css/jquery-3.3.1.slim.min.js\"></script>\n<script type=\"text/javascript\" src=\"/css/popper.min.js\"></script>\n<script type=\"text/javascript\" src=\"/css/bootstrap.min.js\"></script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 270,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d4ad2f78.a01488",
        "type": "debug",
        "z": "2164c119.f88826",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 2040,
        "wires": []
    },
    {
        "id": "db56541d.47959",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3390,
        "y": 640,
        "wires": []
    },
    {
        "id": "45903dfe.700804",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2750,
        "y": 440,
        "wires": [
            [
                "dae4e81e.eb5528"
            ]
        ]
    },
    {
        "id": "dae4e81e.eb5528",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "func": "msg.payload = context.global.get(\"ThumbnailFilePath\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2960,
        "y": 440,
        "wires": [
            [
                "8de2ce5c.1783c8"
            ]
        ]
    },
    {
        "id": "ac226da6.8565c8",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "c68d835e.db3b2",
        "name": "Submodels",
        "order": 1,
        "width": 20,
        "height": 30,
        "format": "<script>\n    (function(scope) {\n        //scope.root = \"\";\n        scope.depth = \"\";\n        /* scope.init = function() {\n        //scope.observations = [];\n        scope.send({payload:scope.observations});\n        }*/\n        scope.path = function(root, element){\n            if(element == ''){\n                return root;\n            } else {\n                return root + \".\" + element;\n            }\n        \n        }\n\n        scope.valueId = function(aasId, submodelId, element, root){\n            let id = \"\";\n            if(root !== ''){\n                id = aasId + \"_\" + submodelId + \"_\" + root + \"_\" + element;\n                id = id.replace(/\\./g,'_');\n            } else {\n                id = aasId + \"_\" + submodelId + \"_\" + element;\n                id = id.replace(/\\./g,'_');\n            }\n            return id;\n        }\n\n        scope.changeTextColor = function(aasId, submodelId, submodelElementId, root, subscriptions){\n            let stringifyText = \"\";\n            if(root != \"\"){\n                stringifyText = aasId + \";\" + submodelId + \";\" + root + \".\" + submodelElementId;\n            } else {\n                stringifyText = aasId + \";\" + submodelId + \";\" + submodelElementId;\n            }\n            for(let element in subscriptions){\n                var subscription = subscriptions[element];\n                //var result = subscription.includes(stringifyText);\n                if(subscription === stringifyText){\n                    return \"true\";\n                }\n            }\n    \n            return \"false\";\n        }\n    \n    })(scope)\n</script>\n<script type=\"text/ng-template\" id=\"tree_view\">\n    <li class=\"list-group-item list-group-item-info\" >\n                                            <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"collapse22_{{submodelElement.idShort}}_{{depth}}\">\n                                                Submodel Element Collection idShort: <strong>{{submodelElement.idShort}}</strong>\n                                            </button> <span class=\"badge  badge-warning badge-pill\">{{submodelElement.value.length}}</span>\n                                            <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" >idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                <ul id=\"collapse22_{{submodelElement.idShort}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li class=\"list-group-item\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelElementIndex=$index\">\n                                                        <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\">\n                                                            <label for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-black-50'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                    Property idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                             <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item list-group-item-info\">\n                                                                        <a class=\"text-info\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item list-group-item-info\">\n                                                                        <a id=\"{{valueId(shell.shellIdShort, submodel.idShort, submodelElement.idShort, root)}}\" class=\"text-info\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                    </li>\n                                                            </ul>\n                                                        </div>\n                                                        <!--<div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view2'\" ng-init=\"depth = depth + 1 + submodelElementIndex\">\n                                                                <!--<ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view2'\" ng-init=\"depth = depth + 1\">\n                                                                </ul>!-->\n                                                            <!--</div>!-->\n                                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                <div ng-include=\"'tree_view2'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\"\n                                                                    ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                            </div>\n                                                    </li>\n                                                </ul>\n                                            \n                                        </li>\n        \n       \n           \n        </script>\n<script type=\"text/ng-template\" id=\"tree_view2\">\n    <li class=\"list-group-item \" >\n                                            <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"collapse22_{{submodelElement.idShort}}_{{depth}}\">\n                                                Submodel Element Collection idShort: <strong>{{submodelElement.idShort}}</strong>\n                                            </button> <span class=\"badge  badge-warning badge-pill\">{{submodelElement.value.length}}</span>\n                                            <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse22_{{submodelElement.idShort}}_{{depth}}\" >idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                <ul id=\"collapse22_{{submodelElement.idShort}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li class=\"list-group-item list-group-item-info\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelElementIndex=$index\">\n                                                        <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\">\n                                                            <label for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                   Property idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                             <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                    </li>\n                                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                    </li>\n                                                                    <li class=\"list-group-item\">\n                                                                        <a id=\"{{valueId(shell.shellIdShort, submodel.idShort, submodelElement.idShort, root)}}\" class=\"text-black-50\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                    </li>\n                                                            </ul>\n                                                        </div>\n                                                        <!--<div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\" ng-init=\"depth = depth + 1 + submodelElementIndex\">\n                                                                <!--<ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\" ng-init=\"depth = depth + 1\">\n                                                                </ul>!-->\n                                                            <!--</div>!-->\n                                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                <div ng-include=\"'tree_view'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\"\n                                                                    ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                            </div>\n                                                    </li>\n                                                </ul>\n                                            \n                                        </li>\n        \n       \n           \n        </script>\n<div id=\"deck12\" class=\"card-group\">\n    <div class=\"card-body\">\n        <div class=\"input-group input-group-sm mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"global search...\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\" ng-model=\"search\">\n        </div>\n        <div id=\"accordion\" class=\"card text-white bg-light mb-3\">\n            <ul class=\"list-group list-group-flush\">\n                <li class=\"list-group-item\">\n                    <button class=\"btn btn-link text-dark\" data-toggle=\"collapse\" data-target=\"#collapse02\" aria-expanded=\"true\" aria-controls=\"#collapse02\">\n                            Administration Shells and Submodels\n                            </button> <span class=\"badge  badge-warning badge-pill\">{{msg.payload.length}}</span>\n                    <ul id=\"collapse02\" class=\"list-group list-group-flush panel-collapse collapse\">\n                        <li class=\"list-group-item list-group-item-info\"\n                            ng-repeat=\"shell in msg.payload | filter:search\">\n                            <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse12_{{shell.shellIdShort}}\" aria-expanded=\"true\" aria-controls=\"collapse12_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">\n                                        Asset Administration Shell idShort: <strong>{{shell.shellIdShort}}</strong>\n                                    </button>\n                            <span class=\"badge  badge-warning badge-pill\">{{shell.submodels.length}}</span>\n                            <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse12_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">idShort: <strong>{{shell.shellIdShort}}</strong></a>!-->\n                            <ul id=\"collapse12_{{shell.shellIdShort}}\"\n                                class=\"list-group list-group-flush panel-collapse collapse\">\n                                <li class=\"list-group-item\" ng-repeat=\"submodel in shell.submodels | filter:search\"\n                                    ng-init=\"submodelIndex=$index\">\n                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse22_{{submodel.idShort}}_{{submodelIndex}}\" aria-expanded=\"true\" aria-controls=\"collapse22_{{submodel.idShort}}_{{submodelIndex}}\" ng-if=\"submodel != ''\">\n                                               Submodel idShort: <strong>{{submodel.idShort}}</strong>\n                                            </button>\n                                    <span class=\"badge  badge-warning badge-pill\">{{submodel.submodelElements.length}}</span>\n                                    <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse22_{{submodel.idShort}}\" ng-if=\"submodel != ''\">idShort: <strong>{{submodel.idShort}}</strong></a>!-->\n                                    <ul id=\"collapse22_{{submodel.idShort}}_{{submodelIndex}}\"\n                                        class=\"list-group list-group-flush panel-collapse collapse\">\n                                        <li class=\"list-group-item list-group-item-info\"\n                                            ng-repeat=\"submodelElement in submodel.submodelElements | filter:search\"\n                                            ng-init=\"submodelElementIndex=$index\">\n                                            <div ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection'\">\n                                                <label for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,'',{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                    Property idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}\"\n                                                    class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\"\n                                                        class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id:\n                                                            <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Category:\n                                                            <strong>{{submodelElement.category}}</strong></a>\n                                                    </li>\n                                                    <li class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type:\n                                                            <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type:\n                                                            <strong>{{submodelElement.mimeType}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type:\n                                                            <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                    </li>\n                                                    <li class=\"list-group-item\">\n                                                        <a id=\"{{valueId(shell.shellIdShort, submodel.idShort, submodelElement.idShort, '')}}\"\n                                                            class=\"text-black-50\" data-toggle=\"collapse\">Value:\n                                                            <strong>{{submodelElement.value}}</strong></a>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                            <!--<div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                <!--ng-include=\"'tree_view'\" ng-init=\"depth = 2 + submodelIndex\">\n                                                <!-- <ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\">\n                                                                </ul>!-->\n                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                <div ng-include=\"'tree_view'\" ng-if=\"true\"\n                                                    onload=\"root = path(submodelElement.idShort, '')\"\n                                                    ng-init=\"depth = 2 + submodelIndex\"></div>\n                                            </div>\n                                            <!--</div>!-->\n                                        </li>\n                                    </ul>\n\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                    <!--<a class=\"text-dark\" data-toggle=\"collapse\" href=\"#collapse02\">Administration Shells and Submodels</a>!-->\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3190,
        "y": 580,
        "wires": [
            [
                "57cc2b70.afb41c"
            ]
        ]
    },
    {
        "id": "566bb148.1d86f",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "dc6a962d74630b25",
        "name": "Submodels_Login",
        "order": 1,
        "width": 20,
        "height": "30",
        "format": "<script>\n    (function(scope) {\n                 //scope.root = \"\";\n                 scope.depth = \"\";\n/*            scope.init = function() {\n                //scope.observations = [];\n                scope.send({payload:scope.observations});\n            }*/\n            scope.sendRequest = function(op){\n                var reqType = (op.type == \"operation\")?\"invoke\":(op.type == \"event\")?\"subscribe\":\"error, unkown type!!\";\n                this.send({payload:{action:op.action,to:op.to,requestType:reqType}});\n            }\n            scope.extractingElement = function(element, submodelId, shellId){\n                this.send({payload:{selectedElement: element, submodelId: submodelId, aasid: shellId}});\n            }\n            scope.extractingElementColl = function(element, root, submodelId, shellId){\n                //scope.root = submodelId;\n                this.send({payload:{selectedElement: element, path: root,submodelId: submodelId, aasid: shellId}});\n            }\n            scope.init = function(){\n                this.send({payload:\"init\"});\n            }\n            scope.path = function(root, element){\n                if(element == ''){\n                    return root;\n                } else {\n                    return root + \".\" + element;\n                }\n                \n            }\n            scope.changeTextColor = function(aasId, submodelId, submodelElementId, root, subscriptions){\n                let stringifyText = \"\";\n                if(root != \"\"){\n                    stringifyText = aasId + \";\" + submodelId + \";\" + root + \".\" + submodelElementId;\n                } else {\n                    stringifyText = aasId + \";\" + submodelId + \";\" + submodelElementId;\n                }\n                for(let element in subscriptions){\n                    var subscription = subscriptions[element];\n                    //var result = subscription.includes(stringifyText);\n                    if(subscription === stringifyText){\n                        return \"true\";\n                    }\n                }\n            \n                return \"false\";\n            }\n\n        })(scope)\n        \n</script>\n<script type=\"text/ng-template\" id=\"tree_view\">\n\n\n    <li class=\"list-group-item list-group-item-info\">\n                                                                    <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                    idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                    </button>\n                                                                    <ul id='collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}' class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li class=\"custom-control custom-checkbox list-group-item list-group-item-light\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelCollElementIndex=$index\" ng-if=\"submodelElement.category != 'CONSTANT'\">\n                                                                    <div ng-if=\" submodelElement.modelType.name === 'File'\" class=\"custom-control custom-checkbox\">\n                                                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" ng-click=\"extractingElementColl(submodelElement, root, submodel.idShort, shell.shellIdentifier)\">\n                                                                    <label class=\"custom-control-label\" for=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">\n                                                                        <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-black-50'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}\">\n                                                                            idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                        </button>\n                                                                        <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                                    </label>\n                                                                        <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                            <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                            </li>\n                                                                            <li class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.valueType\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category === 'CONSTANT' || submodelCollElement.category === 'PARAMETER'\" class=\"list-group-item list-group-item-info\">\n                                                                                <a class=\"text-info\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                            </li>\n                                                                        </ul>\n                                                                        </div>\n                                                                        <div class=\"small text-black-50\" ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection' && submodelElement.modelType.name !== 'File'\">\n                                                                            idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                        </div>\n                                                                        <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                            <div ng-include=\"'tree_view2'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\" ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                                        </div>\n                                                                        <!--<div><ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view2'\"></ul></div>!-->\n                                                                        </li>\n                                                                        </ul>\n                                                                        </li>\n                                                        \n        \n            \n        </script>\n<script type=\"text/ng-template\" id=\"tree_view2\">\n\n\n    <li class=\"list-group-item\">\n                                                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}\">\n                                                                    idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                    </button>\n                                                                    <ul id='collapse42_{{submodelElement.idShort}}_{{submodelElementIndex}}_{{depth}}' class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                    <li class=\"custom-control custom-checkbox list-group-item list-group-item-info\" ng-repeat=\"submodelElement in submodelElement.value | filter:search\" ng-init=\"submodelCollElementIndex=$index\" ng-if=\"submodelElement.category != 'CONSTANT' \">\n                                                                    <div  ng-if=\" submodelElement.modelType.name === 'File'\" class=\"custom-control custom-checkbox\">\n                                                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" ng-click=\"extractingElementColl(submodelElement, root, submodel.idShort, shell.shellIdentifier)\">\n                                                                    <label class=\"custom-control-label\" for=\"{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">\n                                                                        <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,root,{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" aria-expanded=\"true\" aria-controls=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}\">\n                                                                            idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                        </button>\n                                                                        <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                                    </label>\n                                                                        <ul id=\"collapse32_{{submodelElement.idShort}}_{{submodelCollElementIndex}}_{{depth}}\" class=\"list-group list-group-flush panel-collapse collapse\">\n                                                                            <li ng-if=\"submodelElement.semanticId.keys[0]\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id: <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Category: <strong>{{submodelElement.category}}</strong></a>\n                                                                            </li>\n                                                                            <li class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type: <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type: <strong>{{submodelElement.mimeType}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type: <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                                            </li>\n                                                                            <li ng-if=\"submodelElement.category === 'CONSTANT' || submodelCollElement.category === 'PARAMETER'\" class=\"list-group-item\">\n                                                                                <a class=\"text-black-50\" data-toggle=\"collapse\">Value: <strong>{{submodelElement.value}}</strong></a>\n                                                                            </li>\n                                                                        </ul>\n                                                                        </div>\n                                                                        <div class=\"small text-info\"\n                                                                            ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection' && submodelElement.modelType.name !== 'File'\">\n                                                                            idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                        </div>\n                                                                        <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                                            <div ng-include=\"'tree_view'\" ng-if=\"true\" onload=\"root = path(root, submodelElement.idShort)\" ng-init=\"depth = depth + 1 + submodelElementIndex\"></div>\n                                                                        </div>\n                                                                        <!--<div><ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\" ></ul></div>!-->\n                                                                        </li>\n                                                                        </ul>\n                                                                        </li>\n                                                        \n        \n            \n        </script>\n<div id=\"deck_2\" class=\"card-group\" ng-init=\"init()\">\n    <div class=\"card-body\">\n        <div class=\"input-group input-group-sm mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"global search...\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\" ng-model=\"search\">\n        </div>\n        <div class=\"card text-white bg-light mb-3\">\n            <ul class=\"list-group list-group-flush\">\n                <li id=\"loginList\" class=\"list-group-item\">\n                    <button class=\"btn btn-link text-dark\" data-toggle=\"collapse\" data-target=\"#collapse03\" aria-expanded=\"true\" aria-controls=\"#collapse03\">\n                            Administration Shells and Submodels\n                            </button>\n                    <!--<a class=\"text-dark\" data-toggle=\"collapse\" href=\"#collapse03\">Administration Shells and Submodels</a>!-->\n                    <ul id=\"collapse03\" class=\"list-group list-group-flush panel-collapse collapse\">\n                        <li class=\"list-group-item list-group-item-info\"\n                            ng-repeat=\"shell in msg.payload | filter:search\">\n                            <button class=\"btn btn-link text-info\" data-toggle=\"collapse\" data-target=\"#collapse13_{{shell.shellIdShort}}\" aria-expanded=\"true\" aria-controls=\"collapse13_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">\n                                        idShort: <strong>{{shell.shellIdShort}}</strong>\n                                    </button>\n                            <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse13_{{shell.shellIdShort}}\" ng-if=\"shell != ''\">idShort: <strong>{{shell.shellIdShort}}</strong></a>!-->\n                            <ul id=\"collapse13_{{shell.shellIdShort}}\"\n                                class=\"list-group list-group-flush panel-collapse collapse\">\n                                <li class=\"list-group-item\" ng-repeat=\"submodel in shell.submodels | filter:search\">\n                                    <button class=\"btn btn-link text-black-50\" data-toggle=\"collapse\" data-target=\"#collapse23_{{submodel.idShort}}\" aria-expanded=\"true\" aria-controls=\"collapse23_{{submodel.idShort}}\" ng-if=\"submodel != ''\">\n                                                idShort: <strong>{{submodel.idShort}}</strong>\n                                            </button>\n                                    <!--<a class=\"text-black-50\" data-toggle=\"collapse\" href=\"#collapse23_{{submodel.idShort}}\" ng-if=\"submodel != ''\">idShort: <strong>{{submodel.idShort}}</strong></a>!-->\n                                    <ul id=\"collapse23_{{submodel.idShort}}\"\n                                        class=\"list-group list-group-flush panel-collapse collapse\">\n                                        <li class=\"list-group-item list-group-item-info\"\n                                            ng-repeat=\"submodelElement in submodel.submodelElements | filter:search\"\n                                            ng-init=\"submodelElementIndex=$index\"\n                                            ng-if=\"submodelElement.category != 'CONSTANT'\">\n                                            <div ng-if=\" submodelElement.modelType.name === 'File'\"\n                                                class=\"custom-control custom-checkbox\">\n                                                <input  type=\"checkbox\" class=\"custom-control-input\" id=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\" ng-click=\"extractingElement(submodelElement, submodel.idShort, shell.shellIdentifier)\">\n                                                <label class=\"custom-control-label\" for=\"{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                <button ng-class=\"changeTextColor(shell.shellIdentifier,submodel.idShort,submodelElement.idShort,'',{{msg.subscriptions}}) == 'true' ? 'btn btn-link text-danger' : 'btn btn-link text-info'\" data-toggle=\"collapse\" data-target=\"#collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\" aria-expanded=\"true\" aria-controls=\"#collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\">\n                                                                    idShort: <strong>{{submodelElement.idShort}}</strong>\n                                                                </button>\n                                                                <!--<a class=\"text-info\" data-toggle=\"collapse\" href=\"#collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\">idShort: <strong>{{submodelElement.idShort}}</strong></a>!-->\n                                                            </label>\n                                                <ul id=\"collapse33_{{submodelElement.idShort}}_{{submodelElementIndex}}\"\n                                                    class=\"list-group list-group-flush panel-collapse collapse\">\n                                                    <li ng-if=\"submodelElement.semanticId.keys[0]\"\n                                                        class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Semantic Id:\n                                                            <strong>{{submodelElement.semanticId.keys[0].value}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.category\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Category:\n                                                            <strong>{{submodelElement.category}}</strong></a>\n                                                    </li>\n                                                    <li class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Model Type:\n                                                            <strong>{{submodelElement.modelType.name}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.mimeType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">mime Type:\n                                                            <strong>{{submodelElement.mimeType}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.valueType\" class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value Type:\n                                                            <strong>{{submodelElement.valueType.dataObjectType.name}}</strong></a>\n                                                    </li>\n                                                    <li ng-if=\"submodelElement.category === 'CONSTANT' || submodelElement.category === 'PARAMETER'\"\n                                                        class=\"list-group-item\">\n                                                        <a class=\"text-black-50\" data-toggle=\"collapse\">Value:\n                                                            <strong>{{submodelElement.value}}</strong></a>\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                            <div class=\"small text-info\"\n                                                ng-if=\"submodelElement.modelType.name !== 'SubmodelElementCollection' && submodelElement.modelType.name !== 'File'\">\n                                                idShort: <strong>{{submodelElement.idShort}}</strong>\n                                            </div>\n                                            <div ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\">\n                                                <div ng-include=\"'tree_view'\" ng-if=\"true\"\n                                                    onload=\"root = path(submodelElement.idShort, '')\"\n                                                    ng-init=\"depth = 2 + submodelIndex\"></div>\n                                            </div>\n                                            <!--<ul class=\"list-group list-group-flush\" ng-if=\"submodelElement.modelType.name === 'SubmodelElementCollection'\" ng-include=\"'tree_view'\">\n                                                                </ul>!-->\n        </div>\n        </li>\n\n        </ul>\n\n        </li>\n        </ul>\n        </li>\n        </ul>\n        </li>\n        </ul>\n    </div>\n</div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3210,
        "y": 620,
        "wires": [
            [
                "40ba0174.feea08",
                "db56541d.47959"
            ]
        ]
    },
    {
        "id": "f76cbbfe.4be85",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "c56f01cc.380dd",
        "name": "ConceptDescriptions",
        "order": 1,
        "width": "30",
        "height": "20",
        "format": "    <script>\n        (function(scope) {\n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    if (msg.payload) {\n                        scope.conceptDescriptions = [];\n                        var descriptions = msg.payload; \n                        for(var description in descriptions){\n                            var conceptDescription = {};\n                            conceptDescription.id = descriptions[description].identification.id;\n                            conceptDescription.modelType = descriptions[description].modelType.name;\n                            if(descriptions[description].embeddedDataSpecifications.length > 0){\n                                var dataSpecification = descriptions[description].embeddedDataSpecifications[0].dataSpecificationContent;\n                                var langs = dataSpecification.preferredName;\n                                for(var lang in langs){\n                                    if(langs[lang].language == \"en\"){\n                                        conceptDescription.preferredName = langs[lang].text;\n                                    }\n                                }\n                                conceptDescription.shortName = dataSpecification.shortName;\n                                conceptDescription.unit = dataSpecification.unit;\n                                conceptDescription.dataType = dataSpecification.dataType;\n                                var defLangs = dataSpecification.definition;\n                                for(var defLang in defLangs){\n                                    if(defLangs[defLang].language == \"en\"){\n                                        conceptDescription.definition = defLangs[defLang].text;\n                                    }\n                                }\n                            }\n                                    //scope.send({payload:dataInterfaceElement});\n                                    scope.conceptDescriptions.push(conceptDescription);\n                        }\n                        scope.send({payload:scope.conceptDescriptions});\n                    }\n                        \n                }\n            });\n/*            scope.init = function() {\n                //scope.observations = [];\n                scope.send({payload:scope.observations});\n            }*/\n        })(scope)\n    </script>\n    <div id=\"conceptDescriptions_Table\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">Id</th>\n                    <th scope=\"col\">modelType</th>\n                    <th scope=\"col\">preferredName</th>\n                    <th scope=\"col\">shortName</th>\n                    <th scope=\"col\">unit</th>\n                    <th scope=\"col\">dataType</th>\n                    <th scope=\"col\">definition</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr ng-repeat=\"cd in conceptDescriptions\">\n                <td><a class=\"text-dark\">{{cd.id}}</a></td>\n                <td><a class=\"text-dark\">{{cd.modelType}}</a></td>\n                <td><a class=\"text-dark\">{{cd.preferredName}}</a></td>\n                <td><a class=\"text-dark\">{{cd.shortName}}</a></td>\n                <td><a class=\"text-dark\">{{cd.unit}}</a></td>\n                <td><a class=\"text-dark\">{{cd.dataType}}</a></td>\n                <td><a class=\"text-dark\">{{cd.definition}}</a></td>\n                <!--<td style=\"cursor:pointer;\" ng-click=\"remove(i)\" title=\"Remove\">&times;</td>!-->\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3120,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "93e337ed.34c2c",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "group": "",
        "name": "Logo / Clock",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<script id=\"clockScript1\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n\n        //add logo\n        var div1 = $('<div/>');\n        var logo = new Image();\n\n        logo.src = '/images/' + \"logo.png\";\n        logo.height = 45;\n        div1[0].style.margin = '10px auto';\n\n///        div1.append(logo);*/\n\n        //add clock\n        var div2 = $('<div/>');\n        var p = $('<p/>');\n\n        div2.append(p);\n        div2[0].style.margin = '5px';\n\n        function displayTime() {\n            p.text(new Date().toLocaleString());\n        }\n        \n        clockInterval = setInterval(displayTime, 1000);\n\n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            var toolbar = $('.md-toolbar-tools');\n            \n            if(!toolbar.length) return;\n            \n            toolbar.append(div1);\n            toolbar.append(div2);\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 100);\n    });\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 690,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f5d81204558f97fa",
        "type": "link in",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "NOVAAS_InformChange_UI",
        "links": [
            "c6c88b8651fc6ecf",
            "11e91e4d13917d49",
            "ae28f53c34d8b949",
            "b2811a59a9c3a985",
            "adf27afba7c3b724",
            "c5fc62ee99b0c1e2",
            "a19fe280a1be4f25"
        ],
        "x": 520,
        "y": 580,
        "wires": [
            [
                "2cf012d1.4a7f5e",
                "2706d3c7.5d9a2c",
                "648a464.2a92838"
            ]
        ],
        "l": true
    },
    {
        "id": "df98a659a5b217dc",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "subscriptions",
        "func": "var outMsg = {};\noutMsg.payload = msg.payload\ncontext.flow.set(\"subscriptions\", msg.payload);\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3320,
        "y": 2800,
        "wires": [
            [
                "b77c222a.ae9128",
                "22add3d70156e4b3"
            ]
        ]
    },
    {
        "id": "6b21701a6d975a70",
        "type": "link call",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "links": [
            "85c75f263483de4b"
        ],
        "timeout": "30",
        "x": 1380,
        "y": 300,
        "wires": [
            [
                "3b691b47.1422f4",
                "e829d4f5.0e483"
            ]
        ]
    },
    {
        "id": "28a6230f679f8eeb",
        "type": "change",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrcodeinput",
                "pt": "msg",
                "to": "REPO_LOCATION",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2740,
        "y": 280,
        "wires": [
            [
                "806e01ba8dd4aa22"
            ]
        ]
    },
    {
        "id": "806e01ba8dd4aa22",
        "type": "qrcode-generator",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "qrtype": "text2qr",
        "text2qrText": "",
        "ssid": "",
        "hiddenssid": false,
        "wifitype": "",
        "phonenum": "",
        "smsphonenum": "",
        "smstext": "",
        "mailto": "",
        "mailsubject": "",
        "mailbody": "",
        "latitude": "",
        "longitude": "",
        "colorlight": "#ffffff",
        "colordark": "#000000",
        "printstatus": false,
        "x": 2930,
        "y": 280,
        "wires": [
            [
                "bdc6118ddbb26572"
            ]
        ]
    },
    {
        "id": "bdc6118ddbb26572",
        "type": "change",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrcode",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3120,
        "y": 280,
        "wires": [
            [
                "a5d497d.a955b68"
            ]
        ]
    },
    {
        "id": "1c6490820fe81875",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "func": "\nvar retrieveElementId = function (submodelElement, elementId, elementIds) {\n\n    elementId = elementId + submodelElement.idShort;\n    if (submodelElement.modelType.name == \"SubmodelElementCollection\") {\n        elementId = elementId + \"_\";\n        let values = submodelElement.value;\n        for (let valueIndex = 0; valueIndex < values.length; valueIndex++) {\n            retrieveElementId(values[valueIndex], elementId, elementIds);\n        }\n    } else {\n        elementId = elementId + \":\" + submodelElement.value;\n        elementIds.push(elementId);\n    }\n    return true;\n}\n\nlet elementIds = [];\nlet test = [];\nlet aasList = msg.payload;\nfor (let aasIndex = 0; aasIndex < aasList.length; aasIndex++) {\n    let aas = aasList[aasIndex];\n    let submodelList = aas.submodels;\n    for (let submodelIndex = 0; submodelIndex < submodelList.length; submodelIndex++) {\n        let submodelElementsList = submodelList[submodelIndex].submodelElements;\n        for (let submodelElementIndex = 0; submodelElementIndex < submodelElementsList.length; submodelElementIndex++) {\n            let submodelElement = submodelElementsList[submodelElementIndex];\n            let modelType = submodelElement.modelType.name;\n            if (modelType == \"SubmodelElementCollection\" || submodelElement.category == \"VARIABLE\") {\n                let elementId = aas.shellIdShort + \"_\" + submodelList[submodelIndex].idShort + \"_\";\n                retrieveElementId(submodelElement, elementId, elementIds);\n            }\n        }\n    }\n\n\n}\n\n//msg.payload = \"DPDM_OperationalData_ResponseTimePred:\" + Math.random();\nmsg.payload = elementIds;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3000,
        "y": 660,
        "wires": [
            [
                "5305a1509cc6a0af",
                "51104a28844e7b60"
            ]
        ]
    },
    {
        "id": "458497c2b0847a8c",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1870,
        "y": 660,
        "wires": [
            [
                "fd86db17b1d2abfe"
            ]
        ]
    },
    {
        "id": "5305a1509cc6a0af",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 3170,
        "y": 700,
        "wires": []
    },
    {
        "id": "51104a28844e7b60",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "group": "c68d835e.db3b2",
        "name": "UpdateValues",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            $(document).ready(function(){\n                let ids = msg.payload;\n                for(let idIndex in ids){\n                    let id = ids[idIndex];\n                    let valueSplit = id.split(\":\");\n                    let jqueryElementId = \"#\" + valueSplit[0];\n                    let jqueryElement = $(jqueryElementId);\n                    jqueryElement.html(\"Value: <strong>\" + valueSplit[1] + \"</strong>\");\n                }\n            });\n        });\n    })(scope)\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3200,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "a845f73417945e9c",
        "type": "msg-router",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2830,
        "y": 600,
        "wires": [
            [
                "ac226da6.8565c8"
            ],
            [
                "566bb148.1d86f"
            ]
        ]
    },
    {
        "id": "79df917343f2a583",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "parameterizedHttpRequest",
        "func": "var msg1 = {};\n\nmsg1.method = 'GET';\nmsg1.url = context.global.get('namespace') + \"/aasServer/env\";\n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 2340,
        "y": 660,
        "wires": [
            [
                "8ce453cf38aa321b"
            ]
        ]
    },
    {
        "id": "8ce453cf38aa321b",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2570,
        "y": 660,
        "wires": [
            [
                "ad9570df.a95b4",
                "e789de03fdef1f25"
            ]
        ]
    },
    {
        "id": "e789de03fdef1f25",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "retrievingSubmodels",
        "func": "var outMsg = {};\nvar administrationShells = msg.payload.assetAdministrationShells;\nvar submodels = msg.payload.submodels;\nvar shells = [];\nfor(var shellIndex = 0; shellIndex < administrationShells.length; shellIndex++){\n    var element = {};\n    var shell = administrationShells[shellIndex];\n    element.shellIdShort = shell.idShort;\n    element.shellIdentifier = shell.identification.id;\n    element.submodels = [];\n    var shellSubmodels = shell.submodels;\n    for(var submodelIndex = 0; submodelIndex < submodels.length; submodelIndex++){\n        for(var shellSubmodelIndex = 0; shellSubmodelIndex < shellSubmodels.length; shellSubmodelIndex++){\n            if(submodels[submodelIndex].identification.id === shellSubmodels[shellSubmodelIndex].keys[0].value){\n                element.submodels.push(submodels[submodelIndex]);\n            }\n        }\n    }\n    shells.push(element);\n}\noutMsg.payload = shells;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2800,
        "y": 660,
        "wires": [
            [
                "1c6490820fe81875"
            ]
        ]
    },
    {
        "id": "728353118493118f",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "events": "change",
        "x": 1800,
        "y": 720,
        "wires": [
            [
                "e24de9d12258152e",
                "cb32083a9440c96a"
            ]
        ]
    },
    {
        "id": "e24de9d12258152e",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1950,
        "y": 760,
        "wires": []
    },
    {
        "id": "fd86db17b1d2abfe",
        "type": "gate",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "default",
        "x": 2130,
        "y": 660,
        "wires": [
            [
                "79df917343f2a583"
            ]
        ]
    },
    {
        "id": "cb32083a9440c96a",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "1d9f40e2.66e59f",
        "name": "",
        "func": "msg.topic = \"control\";\nif(msg.payload == \"change\" && msg.tab == 1){\n    msg.payload = \"open\";\n} else {\n    msg.payload = \"close\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 720,
        "wires": [
            [
                "fd86db17b1d2abfe"
            ]
        ]
    },
    {
        "id": "7eee05596301f0da",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3650,
        "y": 1440,
        "wires": []
    },
    {
        "id": "b2b5061ba0377cb6",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "group": "63d120af.ce7f5",
        "name": "Log",
        "order": 0,
        "width": "34",
        "height": "12",
        "format": "    <script>\n        (function(scope) {\n            scope.logs = [];\n        \n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    if (msg.payload) {\n                        scope.logs = msg.payload;\n                    }\n                }\n            });\n            scope.init = function() {\n                //scope.observations = [];\n                scope.send({payload:scope.observations});\n            }\n        })(scope)\n    </script>\n    <div id=\"logs_Table\" ng-init=\"init()\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">AAS Id</th>\n                    <th scope=\"col\">Observable Reference</th>\n                    <th scope=\"col\">_msgId</th>\n                    <th scope=\"col\">Timestamp</th>\n                    <th scope=\"col\">Value</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr class=\"table-info\" ng-repeat=\"i in logs\">\n                <td><a class=\"text-dark\">{{i.aasId}}</a></td>\n                <td><a class=\"text-dark\">{{i.observableRef}}</a></td>\n                <td><a class=\"text-dark\">{{i.id}}</a></td>\n                <td><a class=\"text-dark\">{{i.timestamp}}</a></td>\n                <td ng-if='i.link != undefined'><a class=\"btn btn-link\" target=\"_blank\" rel=\"noopener noreferrer\" ng-href=\"{{i.link}}\">{{i.link}}</a></td>\n                <td ng-if='i.value != undefined'><a class=\"text-dark\">{{i.value}}</a></td>\n                \n                <!--<td><a class=\"text-dark\">{{i.value}}</a></td>!-->\n                <!--<td style=\"cursor:pointer;\" ng-click=\"remove(i)\" title=\"Remove\">&times;</td>!-->\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3513.690185546875,
        "y": 1438.8096923828125,
        "wires": [
            [
                "7eee05596301f0da"
            ]
        ]
    },
    {
        "id": "a0b744b3f2aea9de",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "LogsProcessing",
        "func": "//Retreiving Libraries from the Settings.json file\nif(msg.payload){\n    /*\n    //var observation = JSON.parse(msg.payload);\n    var observation = msg.payload;\n    var logs = context.flow.get('logs');\n    var copyLogs = logs.slice(Math.max(logs.length - 25, 0));\n    //for(var log in msg.payload){\n    //    logs.push(msg.payload[log]);\n    //}\n    var log = {};\n    if(typeof observation.payload.href !== \"undefined\"){\n        log.link = observation.payload.href;\n    } else{\n        log.value = observation.payload;\n    }\n    //log.time = Date.now();\n    log.time = observation.timestamp;\n    log._msgid = msg._msgid;\n    log.AASID = context.global.get('AASIdentifier');\n    log.observableReference = observation.observableReference;\n    if(copyLogs.length > 25){\n        copyLogs.pop();\n        copyLogs.push(log);\n        logs.push(log);\n    } else {\n        logs.push(log);\n    }*/\n    \n    context.flow.set('logs', msg.payload);\n    var outputMsg = {};\n    //msg.payload = logs;\n    //outputMsg.payload = logs;\n    outputMsg.payload = msg.payload;\n    return outputMsg;\n}\nmsg.payload = \"\";\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 2993.0234375,
        "y": 1438.4285888671875,
        "wires": [
            [
                "7ef6219d918e6a04",
                "b2b5061ba0377cb6",
                "f46810885afff978"
            ]
        ]
    },
    {
        "id": "5485638f701ee6dc",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "Clear button",
        "group": "b9aed87e.bdd0c8",
        "order": 23,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "#ff5555",
        "icon": "clear_all",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 2190,
        "y": 1660,
        "wires": [
            [
                "1ed1d9bbea0f39a6",
                "4196162116de31e7"
            ]
        ]
    },
    {
        "id": "7ef6219d918e6a04",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3605.504150390625,
        "y": 1382.7667846679688,
        "wires": []
    },
    {
        "id": "f46810885afff978",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3167.1663208007812,
        "y": 1497.4762573242188,
        "wires": []
    },
    {
        "id": "bc65f017b4594d14",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "group": "16ffbcf4.6cfa43",
        "name": "AccountLog",
        "order": 0,
        "width": "34",
        "height": "12",
        "format": "    <script>\n        (function(scope) {\n            scope.logs = [];\n        \n            scope.$watch('msg', function(msg){\n                if (msg) {\n                    if (msg.payload) {\n                        scope.logs = msg.payload;\n                    }\n                }\n            });\n        })(scope)\n    </script>\n    <div id=\"accountLog_Table\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">access At</th>\n                    <th scope=\"col\">username</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr class=\"table-success\" ng-repeat=\"i in logs\">\n                <td><a class=\"text-dark\">{{i.accessAt}}</a></td>\n                <td><a class=\"text-dark\">{{i.username}}</a></td>\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3490,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "e8430b89e9bb2193",
        "type": "sqlite",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "select * FROM aasLogs",
        "name": "",
        "x": 2710,
        "y": 1540,
        "wires": [
            [
                "a0b744b3f2aea9de"
            ]
        ]
    },
    {
        "id": "1396d1745e9ba57a",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "",
        "events": "change",
        "x": 1880,
        "y": 1540,
        "wires": [
            [
                "d4c64ee181326ecc"
            ]
        ]
    },
    {
        "id": "1ed1d9bbea0f39a6",
        "type": "sqlite",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "delete FROM accountLogs",
        "name": "",
        "x": 2830,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "4196162116de31e7",
        "type": "sqlite",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "delete FROM aasLogs",
        "name": "",
        "x": 2830,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "d4c64ee181326ecc",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "Refresh button",
        "group": "b9aed87e.bdd0c8",
        "order": 22,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "#14524e",
        "className": "",
        "icon": "cached",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2260,
        "y": 1540,
        "wires": [
            [
                "e8430b89e9bb2193",
                "34366fd7f2cd3a7c"
            ]
        ]
    },
    {
        "id": "34366fd7f2cd3a7c",
        "type": "sqlite",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "select * FROM accountLogs",
        "name": "",
        "x": 2710,
        "y": 1580,
        "wires": [
            [
                "53da882cf73ecacf"
            ]
        ]
    },
    {
        "id": "53da882cf73ecacf",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "LogsProcessing",
        "func": "//Retreiving Libraries from the Settings.json file\nif(msg.payload){\n    /*\n    //var observation = JSON.parse(msg.payload);\n    var observation = msg.payload;\n    var logs = context.flow.get('logs');\n    var copyLogs = logs.slice(Math.max(logs.length - 25, 0));\n    //for(var log in msg.payload){\n    //    logs.push(msg.payload[log]);\n    //}\n    var log = {};\n    if(typeof observation.payload.href !== \"undefined\"){\n        log.link = observation.payload.href;\n    } else{\n        log.value = observation.payload;\n    }\n    //log.time = Date.now();\n    log.time = observation.timestamp;\n    log._msgid = msg._msgid;\n    log.AASID = context.global.get('AASIdentifier');\n    log.observableReference = observation.observableReference;\n    if(copyLogs.length > 25){\n        copyLogs.pop();\n        copyLogs.push(log);\n        logs.push(log);\n    } else {\n        logs.push(log);\n    }*/\n    \n    context.flow.set('accountlog', msg.payload);\n    var outputMsg = {};\n    //msg.payload = logs;\n    //outputMsg.payload = logs;\n    outputMsg.payload = msg.payload;\n    return outputMsg;\n}\nmsg.payload = \"\";\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 3020,
        "y": 1580,
        "wires": [
            [
                "bc65f017b4594d14"
            ]
        ]
    },
    {
        "id": "22add3d70156e4b3",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "group": "f57f5dd7.e298c",
        "name": "Active Subscriptions",
        "order": 0,
        "width": "34",
        "height": "20",
        "format": "    <script>\n        (function(scope) {\n            //scope.connections = [];\n            scope.$watch('msg', function(msg){\n                //scope.connections = [];\n                if (msg) {\n                    if (msg.payload) {\n                        scope.subscriptions = [];\n                        for (var index in msg.payload){\n                            var subscription = msg.payload[index].split(\";\");\n                            scope.subscriptions.push(subscription);\n                        }\n                        //scope.connections = msg.payload;\n                    }\n                }\n            });\n            scope.init = function() {\n                //scope.connections = [];\n                //scope.send({payload:scope.connections});\n            }\n        })(scope)\n    </script>\n    <div id=\"deck\" ng-init=\"init()\">\n        <table class=\"table table-sm\">\n            <thead class=\"text-dark\">\n                <tr>\n                    <th scope=\"col\">Observable Reference</th>\n                    <th scope=\"col\">Status</th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr class=\"table-info\" ng-repeat=\"s in subscriptions\">\n                <td><a class=\"text-dark\">{{s[0]}}</a></td>\n                <td><a class=\"text-success\">Subscribed</a></td>\n                \n                <!--<td><a class=\"text-dark\">{{i.value}}</a></td>!-->\n                <!--<td style=\"cursor:pointer;\" ng-click=\"remove(i)\" title=\"Remove\">&times;</td>!-->\n            </tr>\n            </tbody>\n            \n        </table>\n    </div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3560,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "5e23ea8f.c23584",
        "type": "pdfmake",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "outputType": "base64",
        "inputProperty": "payload",
        "options": "{}",
        "outputProperty": "payload",
        "x": 960,
        "y": 3280,
        "wires": [
            [
                "16f67a18.ffbace"
            ]
        ]
    },
    {
        "id": "16f67a18.ffbace",
        "type": "file",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "filename": "/app/report.pdf",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "base64",
        "x": 1120,
        "y": 3280,
        "wires": [
            [
                "6b35b5c.246d3cc"
            ]
        ]
    },
    {
        "id": "8fe4d1c6.195158",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "ReportObject",
        "func": "var outMsg = {};\noutMsg.payload = {};\nvar header = msg.payload;\noutMsg.payload.header = header;\nvar report = {};\nreport.AASIdentifier = context.global.get(\"AASIdentifier\");\nreport.status = context.global.get(\"NOVAAS_Overall_Status\");\nreport.statsSBI = context.global.get(\"statsSBI\");\nreport.statusCheckSBI = context.global.get(\"statusCheckSBI\");\nreport.logs = context.flow.get(\"logs\");\nreport.logo = context.flow.get(\"logoBase64\");\nreport.accountlog = context.flow.get(\"accountlog\");\noutMsg.payload.report = report;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 3280,
        "wires": [
            [
                "dbd47ad9.b39ec",
                "6b35d8f6.cc4f3"
            ]
        ]
    },
    {
        "id": "45917e9f.5e03",
        "type": "ui_form",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "label": "",
        "group": "7dcd4079.256cf",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Date",
                "value": "date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Email",
                "value": "user",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "Notes",
                "value": "notes",
                "type": "multiline",
                "required": true,
                "rows": 6
            }
        ],
        "formValue": {
            "date": "",
            "user": "",
            "notes": ""
        },
        "payload": "",
        "submit": "Create Report",
        "cancel": "Cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "x": 470,
        "y": 3280,
        "wires": [
            [
                "8fe4d1c6.195158",
                "1da87241.c01316"
            ]
        ]
    },
    {
        "id": "dcfcf5b5.f7fcd8",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "events": "all",
        "x": 160,
        "y": 3280,
        "wires": [
            [
                "dbaadebd.4b69d8",
                "3ab155ea.bea442",
                "72b0a98f.34845"
            ]
        ]
    },
    {
        "id": "dbaadebd.4b69d8",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "PreFilling",
        "func": "msg.payload = {};\nmsg.payload.date = new Date();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 3280,
        "wires": [
            [
                "45917e9f.5e03"
            ]
        ]
    },
    {
        "id": "dbd47ad9.b39ec",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 3220,
        "wires": []
    },
    {
        "id": "1da87241.c01316",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 3340,
        "wires": []
    },
    {
        "id": "f522e00e.b77828",
        "type": "ui_template",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "group": "6a4d510d.5de65",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<form action=\"/aasx/docu/report.pdf\" method=\"get\">\n    <md-button class=\"btn1 vibrate filled touched bigfont\" type=\"submit\"\n         name=\"Submit\" id=\"frm1_submit\">Download</md-button>\n</form>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 3640,
        "wires": [
            []
        ]
    },
    {
        "id": "6b35b5c.246d3cc",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "download Group",
        "func": "var msg = {};\n\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    show : [\"Reporting_ReportDownload\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 3280,
        "wires": [
            [
                "affa7940.488c58"
            ]
        ]
    },
    {
        "id": "affa7940.488c58",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "show download",
        "x": 1520,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "3ab155ea.bea442",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "download group",
        "func": "\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    hide : [\"Reporting_ReportDownload\"],\n    show: [\"Reporting_form\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 3240,
        "wires": [
            [
                "7ad04b13.fae71c",
                "32ae614d9501749d"
            ]
        ]
    },
    {
        "id": "7ad04b13.fae71c",
        "type": "ui_ui_control",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "hide download",
        "x": 580,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "cbd1bdb3.acb988",
        "type": "comment",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "Reporting Section",
        "info": "",
        "x": 170,
        "y": 3040,
        "wires": []
    },
    {
        "id": "72b0a98f.34845",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 3120,
        "wires": []
    },
    {
        "id": "6b35d8f6.cc4f3",
        "type": "function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "func": "var tableBuilder = function (data, columns) {\n    var body = [];\n\n    body.push(columns);\n\n    data.forEach(function(row) {\n        var dataRow = [];\n\n        columns.forEach(function(column) {\n            dataRow.push(row[column].toString());\n        })\n\n        body.push(dataRow);\n    });\n\n    return body;\n}\n\nvar checkValue = function(value){\n    if(value.link){\n        return value.link;\n    } else if(value.value){\n        return value.value;\n    }\n}\n\nvar convertTime = function(value){\n    var time = new Date(value.time);\n    return time;\n}\n\nvar outMsg = {};\n\nvar accountLogTable = [];\nfor (var elementAccountLog in msg.payload.report.accountlog){\n    accountLogTable.push(\n        {\n            \"accessAt\": msg.payload.report.accountlog[elementAccountLog].accessAt,\n            \"username\": msg.payload.report.accountlog[elementAccountLog].username\n        }\n        );\n}\n\nvar logsTable = [];\nfor (var elementLogs in msg.payload.report.logs){\n    logsTable.push(\n        {\n            \"observableReference\": msg.payload.report.logs[elementLogs].observableReference,\n            \"_msgid\": msg.payload.report.logs[elementLogs]._msgid,\n            \"time\": convertTime(msg.payload.report.logs[elementLogs]),\n            \"value\": checkValue(msg.payload.report.logs[elementLogs])\n        }\n        );\n}\n\nvar dd = {\n     \"header\": function(currentPage, pageCount, pageSize) {\n         if(msg.payload.report.logo){\n            return [\n                { \"image\": \"data:image/png;base64,\" + msg.payload.report.logo, \"height\": 30, \"width\": 30 }\n            ]\n        } else return;\n    },\n    \"footer\": function(currentPage, pageCount, pageSize) {\n        if(msg.payload.report.logo){\n            return [\n                { \"image\": \"data:image/png;base64,\" + msg.payload.report.logo, \"height\": 30, \"width\": 30 }\n            ]\n        } else return;\n    },    \n    \"content\": [\n\t\t{ \"text\": \"NOVAsset Administration Shell Report\", \"style\": \"header\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t\t\"widths\": [\"*\", \"*\"],\n\t\t\t\t\"body\": [\n\t\t\t\t\t[\"Created by \", msg.payload.header.user],\n\t\t\t\t\t[\"Created at \", msg.payload.header.date],\n\t\t\t\t\t[\"Notes \", msg.payload.header.notes]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"NOVAAS Overview\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": [\"*\", \"*\"],\n\t\t\t\t\"body\": [\n\t\t\t\t\t[\"NOVAAS Identifier\", msg.payload.report.AASIdentifier],\n\t\t\t\t\t[\"Status\", msg.payload.report.status]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t\t\"widths\": [\"*\", \"*\"],\n\t\t\t\t\"headerRows\": 1,\n\t\t\t\t\"body\": [\n\t\t\t\t\t[{ \"text\": \"Southbound Interface Statistics\", \"style\": \"tableHeader\", \"colSpan\": 2, \"alignment\": \"center\" }, {}],\n\t\t\t\t\t[\"Connector Status\", msg.payload.report.statusCheckSBI.connected],\n\t\t\t\t\t[\"Total number of Datasources\", msg.payload.report.statusCheckSBI.nrOfDataSources],\n\t\t\t\t\t[\"Inbound Messages\", msg.payload.report.statsSBI.msgSpeed],\n\t\t\t\t\t[\"Inbound  Interval and Frequency\", msg.payload.report.statsSBI.IntervalAndFrequency],\n\t\t\t\t\t[\"Inbound Messages Max\", msg.payload.report.statsSBI.maxMsgs]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"Account Logs\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": [\"*\", \"*\"],\n\t\t\t    \"headerRows\": 1,\n\t\t\t\t\"body\":\ttableBuilder(accountLogTable, ['accessAt', 'username'])\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"Logs\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": ['auto', 'auto', 'auto', 'auto'],\n\t\t\t    \"headerRows\": 1,\n\t\t\t\t\"body\":\ttableBuilder(logsTable, ['observableReference', '_msgid', 'time', 'value'])\n\t\t\t}\n\t\t}\n\t],\n\t\"styles\": {\n\t\t\"header\": {\n\t\t\t\"fontSize\": 18,\n\t\t\t\"bold\": true,\n\t\t\t\"margin\": [0, 0, 0, 10]\n\t\t},\n\t\t\"subheader\": {\n\t\t\t\"fontSize\": 16,\n\t\t\t\"bold\": true,\n\t\t\t\"margin\": [0, 10, 0, 5]\n\t\t},\n\t\t\"tableExample\": {\n\t\t\t\"margin\": [0, 5, 0, 15]\n\t\t},\n\t\t\"tableOpacityExample\": {\n\t\t\t\"margin\": [0, 5, 0, 15],\n\t\t\t\"fillColor\": \"blue\",\n\t\t\t\"fillOpacity\": 0.3\n\t\t},\n\t\t\"tableHeader\": {\n\t\t\t\"bold\": true,\n\t\t\t\"fontSize\": 13,\n\t\t\t\"color\": \"black\"\n\t\t}\n\t}\n}\noutMsg.payload = dd;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 3280,
        "wires": [
            [
                "5e23ea8f.c23584",
                "b04e3281.48c738"
            ]
        ]
    },
    {
        "id": "b04e3281.48c738",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 3220,
        "wires": []
    },
    {
        "id": "9c0fd00c.914d28",
        "type": "inject",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 3440,
        "wires": [
            [
                "3ff45b61.4dfabc"
            ]
        ]
    },
    {
        "id": "3ff45b61.4dfabc",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "PrepareOutput",
        "func": "msg.payload = \".node-red/images/ -name\" + \" \" + \"logo.png\";\n//msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 3440,
        "wires": [
            [
                "6b223dd3.5f489c"
            ]
        ]
    },
    {
        "id": "6b223dd3.5f489c",
        "type": "exec",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "command": "find",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 550,
        "y": 3440,
        "wires": [
            [
                "3f7de25e.9b0a5e",
                "315ed0cad6dcaedc"
            ],
            [],
            []
        ]
    },
    {
        "id": "3f7de25e.9b0a5e",
        "type": "change",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 3440,
        "wires": [
            [
                "7cadd42.3bb532c"
            ]
        ]
    },
    {
        "id": "7cadd42.3bb532c",
        "type": "file in",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 910,
        "y": 3440,
        "wires": [
            [
                "ec32158e.39755"
            ]
        ]
    },
    {
        "id": "ec32158e.39755",
        "type": "base64",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 1100,
        "y": 3440,
        "wires": [
            [
                "a6820e84.1e723"
            ]
        ]
    },
    {
        "id": "a6820e84.1e723",
        "type": "change",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "logoBase64",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 3440,
        "wires": [
            []
        ]
    },
    {
        "id": "32ae614d9501749d",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 3140,
        "wires": []
    },
    {
        "id": "c647c7b12b0da059",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "LiveDataToGet",
        "func": "//Retreiving Libraries from the Settings.json file\nlet outputMsgsFileData = [];\nlet outputMsgsPropertyData = [];\n\nlet uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\nlet selectedElements = context.flow.get('selectedElements');\nfor(let element = 0; element < selectedElements.length; element++){\n    let selected_element = \"\";\n    if(typeof selectedElements[element].path != \"undefined\"){\n        selected_element = selectedElements[element].aasid + \"/\" + selectedElements[element].submodelId + \"/\" + selectedElements[element].path + \"/\" + selectedElements[element].selectedElement.idShort;\n    }//let selected_element = selectedElements[element].submodelId + \";\" + selectedElements[element].selectedElement.idShort;\n    else {\n        selected_element = selectedElements[element].aasid + \"/\" + selectedElements[element].submodelId + \"/\" + selectedElements[element].selectedElement.idShort;\n    }\n    let modelType = selectedElements[element].selectedElement.modelType.name;\n    let category = selectedElements[element].selectedElement.category;\n    \n    /*if (modelType == \"File\")\n    {\n        let observation = {};\n        observation.id = uuid;\n        observation.source = context.global.get(\"AASIdentifier\");\n        observation.direction = \"Output\";\n        observation.observableReference = selected_element;\n        observation.timestamp = new Date().getTime();\n        observation.payload = {href: selectedElements[element].selectedElement.value};\n        let msg = {payload:observation};\n        outputMsgsFileData.push(msg);\n    } else {*/\n        let msg = {payload:selected_element};\n        let shellId = encodeURIComponent(selectedElements[element].aasid);\n        let encodedSelected_Element = encodeURIComponent(selectedElements[element].submodelId);\n        \n        //\"/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodelElements/:id\"\n        if(typeof selectedElements[element].path != \"undefined\"){\n            msg.url = context.global.get('namespace') + \"/aasServer/shells/\" + shellId + \"/aas/submodels/\" + encodedSelected_Element +\"/submodel/submodel-elements/\" + selectedElements[element].path + \".\" + selectedElements[element].selectedElement.idShort;\n        } else {\n            msg.url = context.global.get('namespace') + \"/aasServer/shells/\" + shellId + \"/aas/submodels/\" + encodedSelected_Element +\"/submodel/submodel-elements/\" + selectedElements[element].selectedElement.idShort;\n        }\n        \n        outputMsgsPropertyData.push(msg);\n    //}\n    \n}\n\nreturn [outputMsgsFileData, outputMsgsPropertyData];",
        "outputs": 2,
        "noerr": 0,
        "x": 2180,
        "y": 1380,
        "wires": [
            [
                "b6cd03e819bb5913",
                "949f7126b1446952"
            ],
            [
                "fa54970b1878069d"
            ]
        ]
    },
    {
        "id": "b6cd03e819bb5913",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2390,
        "y": 1320,
        "wires": []
    },
    {
        "id": "761a37d14e94c990",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "Prepare Log",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\n// Process msg payload\n\nlet filterNamespaceUrl = msg.url.replace(context.global.get('namespace'), \"\");\nlet filterAPIElements1Url = filterNamespaceUrl.replace(\"/aasServer/shells/\", \"\");\nlet filterAPIElements2Url = filterAPIElements1Url.replace(\"/aas/submodels\", \"\");\nlet filterAPIElements3Url = filterAPIElements2Url.replace(\"/submodel/submodel-elements\", \"\");\n\n//let splittedUrl = filterAPIElements2Url.split(\"/\");\n\n\n\n//\n\nlet observation = {};\nobservation.id = uuid;\nobservation.source = context.global.get('AASIdentifier');\nobservation.direction = \"Output\";\nobservation.observableReference = decodeURIComponent(filterAPIElements3Url.trim());\nobservation.timestamp = new Date().getTime();\nobservation.payload = msg.payload.value;\nmsg.payload = observation;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2630,
        "y": 1420,
        "wires": [
            [
                "949f7126b1446952"
            ]
        ]
    },
    {
        "id": "fa54970b1878069d",
        "type": "http request",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2410,
        "y": 1420,
        "wires": [
            [
                "49d6c2ce612aea11",
                "761a37d14e94c990"
            ]
        ]
    },
    {
        "id": "6334cc96da15dbbd",
        "type": "ui_button",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "Get button",
        "group": "747e4668e069e06a",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Get",
        "tooltip": "",
        "color": "",
        "bgcolor": "#14524e",
        "className": "",
        "icon": "swap_vert",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 1890,
        "y": 1380,
        "wires": [
            [
                "c647c7b12b0da059"
            ]
        ]
    },
    {
        "id": "49d6c2ce612aea11",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2570,
        "y": 1460,
        "wires": []
    },
    {
        "id": "949f7126b1446952",
        "type": "msg-router",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": true,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": true,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2830,
        "y": 1380,
        "wires": [
            [
                "bf7f78d769e874a4"
            ],
            [
                "a0b744b3f2aea9de"
            ]
        ]
    },
    {
        "id": "bf7f78d769e874a4",
        "type": "unsafe-function",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "name": "NewLogsNotification",
        "func": "//Retreiving Libraries from the Settings.json file\nmsg.payload = \"new Log\";\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "x": 3060,
        "y": 1320,
        "wires": [
            [
                "e14fe06ae748a0af"
            ]
        ]
    },
    {
        "id": "e14fe06ae748a0af",
        "type": "ui_toast",
        "z": "2164c119.f88826",
        "g": "e8501749a8186080",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "Logs",
        "name": "Notify Logs",
        "x": 3310,
        "y": 1320,
        "wires": []
    },
    {
        "id": "315ed0cad6dcaedc",
        "type": "debug",
        "z": "2164c119.f88826",
        "g": "d9efc969.3ac7a8",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 3400,
        "wires": []
    },
    {
        "id": "078956014bccb540",
        "type": "link call",
        "z": "2164c119.f88826",
        "g": "cffb33fa.8a9ae",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 3520,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "2aac71d34da0af1c",
        "type": "inject",
        "z": "1543d308b342690a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "97e34cb72c2f36bd"
            ]
        ]
    },
    {
        "id": "8cb87649afd62fd8",
        "type": "link in",
        "z": "1543d308b342690a",
        "name": "flexdash",
        "links": [],
        "x": 75,
        "y": 360,
        "wires": [
            [
                "7897e5f9d24d31a3",
                "535fefea3045516a",
                "f92ed2c964753a48"
            ]
        ]
    },
    {
        "id": "7897e5f9d24d31a3",
        "type": "link out",
        "z": "1543d308b342690a",
        "name": "link out 1",
        "mode": "return",
        "links": [],
        "x": 445,
        "y": 360,
        "wires": []
    },
    {
        "id": "535fefea3045516a",
        "type": "debug",
        "z": "1543d308b342690a",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 340,
        "wires": []
    },
    {
        "id": "f92ed2c964753a48",
        "type": "switch",
        "z": "1543d308b342690a",
        "name": "",
        "property": "payload.link",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "activeSubscriptions",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 480,
        "wires": [
            [
                "dd785b1b24fb2af7"
            ]
        ]
    },
    {
        "id": "644472c8576bb7d4",
        "type": "function",
        "z": "1543d308b342690a",
        "name": "stats",
        "func": "function isObjEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\n\nlet statsNBI = context.global.get(\"statsNBI\") || {};\nlet statsSBI = context.global.get(\"statsSBI\") || {};\n\nlet outStatsSBI_msgSpeed = {};\nlet outStatsSBI_msgsOverTime = {};\n\nif (isObjEmpty(statsSBI) || msg.enable == \"OFF\"){\n    outStatsSBI_msgSpeed.payload = 0;\n    outStatsSBI_msgSpeed.max = statsSBI.maxMsgs;\n    outStatsSBI_msgSpeed.title = statsSBI.IntervalAndFrequency;\n\n    outStatsSBI_msgsOverTime.payload = [];\n    //outStatsSBI_msgsOverTime.payload[0] = 0;\n    //outStatsSBI_msgsOverTime.payload[1] = 0;\n    outStatsSBI_msgsOverTime.payload = 0;\n    outStatsSBI_msgsOverTime.title = \"msgs/1 min\";\n\n} else {\n    outStatsSBI_msgSpeed.payload = statsSBI.msgSpeed;\n    outStatsSBI_msgSpeed.max = statsSBI.maxMsgs;\n    outStatsSBI_msgSpeed.title = statsSBI.IntervalAndFrequency;\n\n    //outStatsSBI_msgsOverTime.payload = [];\n    //outStatsSBI_msgsOverTime.payload[0] = Math.floor(Date.now() / 1000);\n    //outStatsSBI_msgsOverTime.payload[1] = statsSBI.msgSpeed;\n    outStatsSBI_msgsOverTime.payload = statsSBI.msgSpeed;\n    outStatsSBI_msgsOverTime.title = \"msgs/1 min\";\n\n}\n\nlet outStatsNBI_msgSpeed = {};\nlet outStatsNBI_msgsOverTime = {};\noutStatsNBI_msgsOverTime.payload = [];\nlet outStatsNBI_msgsSizeOverTime = {};\noutStatsNBI_msgsSizeOverTime.payload = [];\nif (isObjEmpty(statsNBI) || msg.enable == \"OFF\"){\n    outStatsNBI_msgSpeed.payload = 0;\n    outStatsNBI_msgSpeed.max = statsSBI.maxMsgs;\n    outStatsNBI_msgSpeed.title = statsSBI.IntervalAndFrequency;\n\n    //outStatsNBI_msgsOverTime.payload[0] = 0;\n    //outStatsNBI_msgsOverTime.payload[1] = 0;\n    outStatsNBI_msgsOverTime.payload = 0;\n    outStatsNBI_msgsOverTime.title = statsNBI.IntervalAndFrequency;\n\n    //outStatsNBI_msgsSizeOverTime.payload[0] = 0;\n    //outStatsNBI_msgsSizeOverTime.payload[1] = 0;\n    outStatsNBI_msgsSizeOverTime.payload = 0;\n    outStatsNBI_msgsSizeOverTime.title = statsNBI.IntervalAndFrequency;\n\n} else {\n    outStatsNBI_msgSpeed.payload = statsNBI.msgSpeed;\n    outStatsNBI_msgSpeed.max = statsSBI.maxMsgs;\n    outStatsNBI_msgSpeed.title = statsNBI.IntervalAndFrequency;\n    \n    //outStatsNBI_msgsOverTime.payload[0] = Math.floor(Date.now() / 1000);\n    //outStatsNBI_msgsOverTime.payload[1] = statsNBI.msgSpeed;\n    outStatsNBI_msgsOverTime.payload = statsNBI.msgSpeed;\n    outStatsNBI_msgsOverTime.title = statsNBI.IntervalAndFrequency;\n\n    //outStatsNBI_msgsSizeOverTime.payload[0] = Math.floor(Date.now() / 1000);\n    //outStatsNBI_msgsSizeOverTime.payload[1] = statsNBI.msgSize;\n    outStatsNBI_msgsSizeOverTime.payload = statsNBI.msgSize;\n    outStatsNBI_msgsSizeOverTime.title = statsNBI.msgSizeIntervalAndFrequency;\n    \n}\n\nreturn [outStatsSBI_msgSpeed, outStatsSBI_msgsOverTime, outStatsNBI_msgSpeed, outStatsNBI_msgsOverTime, outStatsNBI_msgsSizeOverTime];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1000,
        "wires": [
            [
                "5c30c48e1a2467ea"
            ],
            [
                "f510d056f722a72f"
            ],
            [
                "cdadfa37404a50cd"
            ],
            [
                "34d16fd5e694be53"
            ],
            [
                "52e1531e0d56bb1a"
            ]
        ]
    },
    {
        "id": "1d76854dfbb20b18",
        "type": "function",
        "z": "1543d308b342690a",
        "name": "check status",
        "func": "function isObjEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\n\nlet status = context.global.get(\"statusCheckSBI\") || {};\nlet outMsg = {};\nif (isObjEmpty(status) || !status.connected){\n    outMsg.payload = \"NOT CONNECTED\";\n} else if (status.connected){\n    outMsg.payload = \"CONNECTED\";\n}\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 820,
        "wires": [
            [
                "b7b1a215ed15c556",
                "57e6356658c22f0d"
            ]
        ]
    },
    {
        "id": "57e6356658c22f0d",
        "type": "debug",
        "z": "1543d308b342690a",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 880,
        "wires": []
    },
    {
        "id": "dd785b1b24fb2af7",
        "type": "function",
        "z": "1543d308b342690a",
        "name": "check subscriptions",
        "func": "function isObjEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\n\nlet status = context.global.get(\"statusCheckSBI\") || {};\nlet outMsg = {};\nif (isObjEmpty(status)){\n    outMsg.payload = 0;\n    outMsg.max = 0;\n    return outMsg;\n} else {\n    outMsg.payload = msg.payload.data;\n    outMsg.max = status.nrOfDataSources;\n}\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 760,
        "wires": [
            [
                "43c94c0e40120042"
            ]
        ]
    },
    {
        "id": "1ab0b9bfc07caea0",
        "type": "inject",
        "z": "1543d308b342690a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 820,
        "wires": [
            [
                "1d76854dfbb20b18",
                "45d86a2225614c0a"
            ]
        ]
    },
    {
        "id": "3b5c7f53a41bb6dc",
        "type": "change",
        "z": "1543d308b342690a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enable",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "fa84b4dea4c39af6",
        "type": "debug",
        "z": "1543d308b342690a",
        "name": "on/off switch",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 1080,
        "wires": []
    },
    {
        "id": "1e6c7a273cda476c",
        "type": "function",
        "z": "1543d308b342690a",
        "name": " ",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1095,
        "y": 1080,
        "wires": [
            [
                "903334f637326ef0"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "45d86a2225614c0a",
        "type": "function",
        "z": "1543d308b342690a",
        "name": "",
        "func": "let enable = flow.get('enable')\nif (enable == \"ON\") {\n    return msg\n} else {\n    msg.enable = \"OFF\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1000,
        "wires": [
            [
                "644472c8576bb7d4"
            ]
        ]
    },
    {
        "id": "97e34cb72c2f36bd",
        "type": "fd-date-time",
        "z": "1543d308b342690a",
        "fd_container": "ef647bf71bb867a7",
        "fd_cols": "2",
        "fd_rows": 1,
        "fd_array": false,
        "fd_array_max": 10,
        "name": "",
        "title": "Flow started at",
        "popup_info": "",
        "value": "",
        "color": "",
        "start_mode": 0,
        "zoom": 100,
        "low_threshold": null,
        "low_color": "blue",
        "high_threshold": null,
        "high_color": "pink",
        "chip": false,
        "units": [
            "now",
            "sec",
            "min",
            "hr",
            "days",
            "weeks",
            "months"
        ],
        "x": 300,
        "y": 120,
        "wires": []
    },
    {
        "id": "f510d056f722a72f",
        "type": "fd-spark-line",
        "z": "1543d308b342690a",
        "fd_container": "268989bc4b3b4aed",
        "fd_cols": "3",
        "fd_rows": "3",
        "fd_array": false,
        "fd_array_max": 10,
        "name": "",
        "title": "Spark Line",
        "popup_info": "",
        "value": 0,
        "color": "blue",
        "fill_color": "",
        "text_color": "",
        "show_value": true,
        "unit": "",
        "x": 580,
        "y": 1020,
        "wires": []
    },
    {
        "id": "34d16fd5e694be53",
        "type": "fd-spark-line",
        "z": "1543d308b342690a",
        "fd_container": "8d5a1fac7723db1f",
        "fd_cols": "3",
        "fd_rows": "3",
        "fd_array": false,
        "fd_array_max": 10,
        "name": "",
        "title": "Spark Line",
        "popup_info": "",
        "value": 0,
        "color": "blue",
        "fill_color": "",
        "text_color": "",
        "show_value": true,
        "unit": "",
        "x": 580,
        "y": 1100,
        "wires": []
    },
    {
        "id": "52e1531e0d56bb1a",
        "type": "fd-spark-line",
        "z": "1543d308b342690a",
        "fd_container": "8d5a1fac7723db1f",
        "fd_cols": "3",
        "fd_rows": "3",
        "fd_array": false,
        "fd_array_max": 10,
        "name": "",
        "title": "Spark Line",
        "popup_info": "",
        "value": 0,
        "color": "blue",
        "fill_color": "",
        "text_color": "",
        "show_value": true,
        "unit": "",
        "x": 580,
        "y": 1140,
        "wires": []
    },
    {
        "id": "903334f637326ef0",
        "type": "fd-toggle",
        "z": "1543d308b342690a",
        "fd_container": "ef647bf71bb867a7",
        "fd_cols": "2",
        "fd_rows": 1,
        "fd_array": false,
        "fd_array_max": 10,
        "fd_output_topic": "",
        "fd_loopback": false,
        "name": "on/off",
        "title": "Run stats",
        "popup_info": "",
        "value": "",
        "enabled": true,
        "color": "",
        "on_value": "ON",
        "off_value": "OFF",
        "show_value": true,
        "x": 1090,
        "y": 1040,
        "wires": [
            [
                "3b5c7f53a41bb6dc",
                "fa84b4dea4c39af6",
                "1e6c7a273cda476c"
            ]
        ]
    },
    {
        "id": "5c30c48e1a2467ea",
        "type": "fd-gauge",
        "z": "1543d308b342690a",
        "fd_container": "268989bc4b3b4aed",
        "fd_cols": "3",
        "fd_rows": "3",
        "fd_array": false,
        "fd_array_max": "1",
        "name": "",
        "title": "",
        "popup_info": "",
        "value": null,
        "unit": "msgs",
        "arc": 180,
        "min": 0,
        "max": null,
        "color": "light-green-accent-3",
        "low_color": "",
        "high_color": "",
        "low_threshold": null,
        "high_threshold": null,
        "base_color": "grey-darken-3",
        "needle_color": "white",
        "radius": 70,
        "stretch": false,
        "x": 570,
        "y": 980,
        "wires": []
    },
    {
        "id": "cdadfa37404a50cd",
        "type": "fd-gauge",
        "z": "1543d308b342690a",
        "fd_container": "8d5a1fac7723db1f",
        "fd_cols": "3",
        "fd_rows": "3",
        "fd_array": false,
        "fd_array_max": "1",
        "name": "",
        "title": "",
        "popup_info": "",
        "value": null,
        "unit": "msgs",
        "arc": 180,
        "min": 0,
        "max": null,
        "color": "light-green-accent-3",
        "low_color": "",
        "high_color": "",
        "low_threshold": null,
        "high_threshold": null,
        "base_color": "grey-darken-3",
        "needle_color": "white",
        "radius": 70,
        "stretch": false,
        "x": 570,
        "y": 1060,
        "wires": []
    },
    {
        "id": "43c94c0e40120042",
        "type": "fd-gauge",
        "z": "1543d308b342690a",
        "fd_container": "3ecc3bf90d60cd53",
        "fd_cols": "3",
        "fd_rows": "3",
        "fd_array": false,
        "fd_array_max": "1",
        "name": "",
        "title": "Nr of subscriptions",
        "popup_info": "",
        "value": null,
        "unit": "",
        "arc": 180,
        "min": 0,
        "max": null,
        "color": "light-green-accent-3",
        "low_color": "",
        "high_color": "",
        "low_threshold": null,
        "high_threshold": null,
        "base_color": "grey-darken-3",
        "needle_color": "white",
        "radius": 70,
        "stretch": false,
        "x": 770,
        "y": 760,
        "wires": []
    },
    {
        "id": "b7b1a215ed15c556",
        "type": "fd-stat",
        "z": "1543d308b342690a",
        "fd_container": "ef647bf71bb867a7",
        "fd_cols": "2",
        "fd_rows": 1,
        "fd_array": false,
        "fd_array_max": "1",
        "name": "Status",
        "title": "Status",
        "popup_info": "",
        "unit": "",
        "value": "",
        "color": "transparent",
        "low_color": "red-accent-3",
        "high_color": "light-green-accent-3",
        "low_threshold": null,
        "high_threshold": null,
        "low_regexp": "NOT CONNECTED",
        "high_regexp": "CONNECTED",
        "chip": false,
        "iso_prefix": false,
        "precision": null,
        "zoom": null,
        "x": 770,
        "y": 820,
        "wires": []
    },
    {
        "id": "5c3897124d1d95c0",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "initScheduling",
                "v": "* * * * * * *",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "41d553602c61b3d5",
                "f8b354e5d9771dda"
            ]
        ]
    },
    {
        "id": "41d553602c61b3d5",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "Initialize Context",
        "func": "context.flow.set(\"CurrentOperatingPressure\", 0);\ncontext.flow.set(\"CylinderStatus\", 0);\ncontext.flow.set(\"ResponseTime\", 0);\ncontext.flow.set(\"ValvePosition\", 0);\ncontext.flow.set(\"NewCycle\", false);\ncontext.flow.set(\"Cycle\", 0);\ncontext.flow.set(\"ResponseTimePred\", []);\n\ncontext.flow.set(\"NrOfDataSources\", 7);\ncontext.flow.set(\"connected\", false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "568d6b198e562bcd",
        "type": "msg-speed",
        "z": "128ab3134a54f6b4",
        "name": "",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 1330,
        "y": 2080,
        "wires": [
            [
                "d9a9ec7b13ac68ad"
            ],
            []
        ]
    },
    {
        "id": "d9a9ec7b13ac68ad",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "name": "stats",
        "func": "var statsSBI = {};\nvar msgSpeed = msg.payload;\nvar msgIntervalAndFrequency = msg.intervalAndFrequency;\nstatsSBI.msgSpeed = msgSpeed;\nstatsSBI.IntervalAndFrequency = msgIntervalAndFrequency;\nstatsSBI.maxMsgs = context.flow.get(\"NrOfDataSources\") * 60;\nmsg.payload = statsSBI;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1590,
        "y": 2060,
        "wires": [
            [
                "50f874d57977fcf9"
            ]
        ]
    },
    {
        "id": "917b5192627637eb",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "a22a33eaebf6529f",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 590,
        "y": 600,
        "wires": [
            [
                "2779d6b6a0f7b1cc"
            ],
            [
                "18ad83ddc14a8fff",
                "91eeebe1d5234d19"
            ],
            [
                "95f3474f2f46c76d"
            ]
        ]
    },
    {
        "id": "0c4feb0062353fc2",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 440,
        "wires": []
    },
    {
        "id": "d2afefd3bc7955f0",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2150,
        "y": 600,
        "wires": [
            [
                "5df3fe8b89186d53"
            ],
            [
                "0acf0c089bdaea6a"
            ],
            [
                "b0a9cb27cdf5f9af"
            ]
        ]
    },
    {
        "id": "92cfad2c91b09895",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2650,
        "y": 540,
        "wires": []
    },
    {
        "id": "96ec7195857503e4",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 760,
        "wires": []
    },
    {
        "id": "78057a0f7b42669f",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 650,
        "y": 920,
        "wires": [
            [
                "cd39ec5da0b7b743"
            ],
            [
                "b074660cba99adcf"
            ],
            [
                "2e02385365895e81"
            ]
        ]
    },
    {
        "id": "07fcc6b18ab42712",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 740,
        "wires": []
    },
    {
        "id": "c9ae4fcfe0c6c389",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2150,
        "y": 920,
        "wires": [
            [
                "ebeaa83d4abb8b92"
            ],
            [
                "963a48fed27b7275",
                "4496aaad104ba6e4"
            ],
            [
                "5539401569fc87b3"
            ]
        ]
    },
    {
        "id": "963a48fed27b7275",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2690,
        "y": 840,
        "wires": []
    },
    {
        "id": "0ee0e2d67b0efe5f",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6bf45f0ccc31aa24",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 670,
        "y": 1240,
        "wires": [
            [
                "38b37541ec9d7086"
            ],
            [
                "4fc60620cd61db57",
                "98d898ce9e662492"
            ],
            [
                "0027cc86b8966e35"
            ]
        ]
    },
    {
        "id": "4fc60620cd61db57",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 1200,
        "wires": []
    },
    {
        "id": "18ad83ddc14a8fff",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 520,
        "wires": []
    },
    {
        "id": "91eeebe1d5234d19",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 890,
        "y": 580,
        "wires": [
            [
                "9972d2363fc6854d",
                "54ecd0622d36e32d"
            ]
        ]
    },
    {
        "id": "0acf0c089bdaea6a",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 2450,
        "y": 580,
        "wires": [
            [
                "92cfad2c91b09895",
                "631352fe068f3d43"
            ]
        ]
    },
    {
        "id": "b074660cba99adcf",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 890,
        "y": 900,
        "wires": [
            [
                "12ce6e0bc92395a9"
            ]
        ]
    },
    {
        "id": "4496aaad104ba6e4",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 2450,
        "y": 900,
        "wires": [
            [
                "e0eb5904abedc0c5"
            ]
        ]
    },
    {
        "id": "98d898ce9e662492",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 890,
        "y": 1240,
        "wires": [
            [
                "3bd02b39c1e9e9ec"
            ]
        ]
    },
    {
        "id": "9972d2363fc6854d",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 540,
        "wires": []
    },
    {
        "id": "4be0576d4487e1ca",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "Event Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sbi scheduling data routing",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "41d1269376597f69"
            ]
        ]
    },
    {
        "id": "1103084ec6579d65",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "trigger_out",
        "mode": "link",
        "links": [
            "469190e8fdba17b9",
            "528e58833a988422",
            "791f17302d8b4ca4",
            "806b9c4f8b70c7cd",
            "95e9e3286be87883",
            "c2ca411926b66486",
            "eac1e7b53fa37af3"
        ],
        "x": 1270,
        "y": 200,
        "wires": [],
        "l": true
    },
    {
        "id": "806b9c4f8b70c7cd",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_1",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 185,
        "y": 480,
        "wires": [
            [
                "60fc493c21196b3f"
            ]
        ]
    },
    {
        "id": "c2ca411926b66486",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_2",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 1725,
        "y": 480,
        "wires": [
            [
                "850ae93348f20888"
            ]
        ]
    },
    {
        "id": "791f17302d8b4ca4",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_3",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 145,
        "y": 800,
        "wires": [
            [
                "7e4f682b4b2f5c11"
            ]
        ]
    },
    {
        "id": "469190e8fdba17b9",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_4",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 1705,
        "y": 780,
        "wires": [
            [
                "b406223a6495d1be"
            ]
        ]
    },
    {
        "id": "95e9e3286be87883",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_5",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 135,
        "y": 1140,
        "wires": [
            [
                "1c2f7fbf9f21a1f0"
            ]
        ]
    },
    {
        "id": "e1a3ba2461a9793f",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1200,
        "wires": [
            [
                "1c2f7fbf9f21a1f0"
            ]
        ]
    },
    {
        "id": "74b1ba8063285d28",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1240,
        "wires": [
            [
                "1c2f7fbf9f21a1f0"
            ]
        ]
    },
    {
        "id": "e5b5943b04487788",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 860,
        "wires": [
            [
                "7e4f682b4b2f5c11"
            ]
        ]
    },
    {
        "id": "ca845fe51ab78740",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 900,
        "wires": [
            [
                "7e4f682b4b2f5c11"
            ]
        ]
    },
    {
        "id": "6f7c2c99bba4d56c",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "60fc493c21196b3f"
            ]
        ]
    },
    {
        "id": "256bc3429f4f5210",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 580,
        "wires": [
            [
                "60fc493c21196b3f"
            ]
        ]
    },
    {
        "id": "d006dee3ddf2966c",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 1730,
        "y": 540,
        "wires": [
            [
                "850ae93348f20888"
            ]
        ]
    },
    {
        "id": "65378e2d9b245964",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 1720,
        "y": 580,
        "wires": [
            [
                "850ae93348f20888"
            ]
        ]
    },
    {
        "id": "cc527a942da20281",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 1730,
        "y": 840,
        "wires": [
            [
                "b406223a6495d1be"
            ]
        ]
    },
    {
        "id": "a513ea10cf429ecb",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 1720,
        "y": 880,
        "wires": [
            [
                "b406223a6495d1be"
            ]
        ]
    },
    {
        "id": "f97d56a1024072d1",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 620,
        "wires": [
            [
                "60fc493c21196b3f"
            ]
        ]
    },
    {
        "id": "2ed0ae584bc3e15a",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 940,
        "wires": [
            [
                "7e4f682b4b2f5c11"
            ]
        ]
    },
    {
        "id": "4554e218694823c1",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1280,
        "wires": [
            [
                "1c2f7fbf9f21a1f0"
            ]
        ]
    },
    {
        "id": "671f4b7036c5715d",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 1740,
        "y": 620,
        "wires": [
            [
                "850ae93348f20888"
            ]
        ]
    },
    {
        "id": "48b59e1f8f29af8b",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 1740,
        "y": 920,
        "wires": [
            [
                "b406223a6495d1be"
            ]
        ]
    },
    {
        "id": "60fc493c21196b3f",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 1",
        "env": [
            {
                "name": "PropertyName",
                "value": "CurrentOperatingPressure",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CurrentOperatingPressure",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CurrentOperatingPressureEvt",
                "type": "str"
            }
        ],
        "x": 350,
        "y": 480,
        "wires": [
            [
                "c15f3336dbf94ae6"
            ],
            [
                "eadbc9240e0cdc8c",
                "917b5192627637eb"
            ],
            [
                "a22a33eaebf6529f"
            ]
        ]
    },
    {
        "id": "850ae93348f20888",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 2",
        "env": [
            {
                "name": "PropertyName",
                "value": "ResponseTime",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTime",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimeEvt",
                "type": "str"
            }
        ],
        "x": 1910,
        "y": 480,
        "wires": [
            [
                "0c4feb0062353fc2",
                "fe88bf27f3c503ad"
            ],
            [
                "8d76970b5a1222aa"
            ],
            [
                "d2afefd3bc7955f0"
            ]
        ]
    },
    {
        "id": "7e4f682b4b2f5c11",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 3",
        "env": [
            {
                "name": "PropertyName",
                "value": "ValvePosition",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ValvePosition",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ValvePositionEvt",
                "type": "str"
            }
        ],
        "x": 410,
        "y": 800,
        "wires": [
            [
                "96ec7195857503e4",
                "7306d65d1bc01b37"
            ],
            [
                "e98655e2c9882820"
            ],
            [
                "78057a0f7b42669f"
            ]
        ]
    },
    {
        "id": "b406223a6495d1be",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 4",
        "env": [
            {
                "name": "PropertyName",
                "value": "ResponseTimeMovingAvg",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimeMovingAvg",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimeMovingAvgEvt",
                "type": "str"
            }
        ],
        "x": 1910,
        "y": 780,
        "wires": [
            [
                "07fcc6b18ab42712",
                "fa5cbe0db60ec832"
            ],
            [
                "e2cb9dfbe9c7c212"
            ],
            [
                "c9ae4fcfe0c6c389"
            ]
        ]
    },
    {
        "id": "1c2f7fbf9f21a1f0",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 5",
        "env": [
            {
                "name": "PropertyName",
                "value": "CylinderStatus",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CylinderStatus",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CylinderStatusEvt",
                "type": "str"
            }
        ],
        "x": 430,
        "y": 1140,
        "wires": [
            [
                "0ee0e2d67b0efe5f",
                "59bdbd7a506d8fd5"
            ],
            [
                "a54415cb96270ac0"
            ],
            [
                "6bf45f0ccc31aa24"
            ]
        ]
    },
    {
        "id": "ed653a4c23fbbc0b",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1100,
        "wires": []
    },
    {
        "id": "20dbb9b7c78ffb49",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2230,
        "y": 1240,
        "wires": [
            [
                "77b206c3d0825bf2"
            ],
            [
                "6309522e4b653590",
                "47e50ac87f960055"
            ],
            [
                "d3b25c737224b1cb",
                "73e57ddb5b800255"
            ]
        ]
    },
    {
        "id": "6309522e4b653590",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d3b25c737224b1cb",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2490,
        "y": 1320,
        "wires": []
    },
    {
        "id": "47e50ac87f960055",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 2490,
        "y": 1240,
        "wires": [
            [
                "a3d5d731cd8b6d42"
            ]
        ]
    },
    {
        "id": "eac1e7b53fa37af3",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_5",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 1695,
        "y": 1140,
        "wires": [
            [
                "b009e3eb0e2e199b"
            ]
        ]
    },
    {
        "id": "33e4bfc73d822969",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 1790,
        "y": 1200,
        "wires": [
            [
                "b009e3eb0e2e199b"
            ]
        ]
    },
    {
        "id": "989ece9714637fbd",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 1780,
        "y": 1240,
        "wires": [
            [
                "b009e3eb0e2e199b"
            ]
        ]
    },
    {
        "id": "baf4b91cb6d5e955",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 1800,
        "y": 1280,
        "wires": [
            [
                "b009e3eb0e2e199b"
            ]
        ]
    },
    {
        "id": "b009e3eb0e2e199b",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 6",
        "env": [
            {
                "name": "PropertyName",
                "value": "Cycle",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/Cycle",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/CycleEvt",
                "type": "str"
            }
        ],
        "x": 1990,
        "y": 1140,
        "wires": [
            [
                "ed653a4c23fbbc0b",
                "769bc30f1e2ca841"
            ],
            [
                "a19b541913d06013"
            ],
            [
                "20dbb9b7c78ffb49"
            ]
        ]
    },
    {
        "id": "734fd038b56535df",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1460,
        "wires": []
    },
    {
        "id": "636051731b8e795e",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 670,
        "y": 1620,
        "wires": [
            [
                "f3137293845d295d"
            ],
            [
                "2d551cdc88e42ae8",
                "90d5ba1a50c32e8f"
            ],
            [
                "1216f346d5a223cf"
            ]
        ]
    },
    {
        "id": "2d551cdc88e42ae8",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1580,
        "wires": []
    },
    {
        "id": "90d5ba1a50c32e8f",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 1620,
        "wires": [
            [
                "5452497d5ac0f4cd"
            ]
        ]
    },
    {
        "id": "528e58833a988422",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_5",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 135,
        "y": 1520,
        "wires": [
            [
                "6b0c873361077c3b"
            ]
        ]
    },
    {
        "id": "cacff0a08c562d53",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1580,
        "wires": [
            [
                "6b0c873361077c3b"
            ]
        ]
    },
    {
        "id": "6b0e702cef1b9412",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1620,
        "wires": [
            [
                "6b0c873361077c3b"
            ]
        ]
    },
    {
        "id": "c51b380ab3c5eba5",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1660,
        "wires": [
            [
                "6b0c873361077c3b"
            ]
        ]
    },
    {
        "id": "6b0c873361077c3b",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 7",
        "env": [
            {
                "name": "PropertyName",
                "value": "ResponseTimePred",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimePred",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "http://smart.festo.com/id/instance/aas/5140_0142_3091_4340/OperationalData/ResponseTimePredEvt",
                "type": "str"
            }
        ],
        "x": 430,
        "y": 1520,
        "wires": [
            [
                "734fd038b56535df",
                "bac985087fd6f894"
            ],
            [
                "c46fa08910fa0901"
            ],
            [
                "636051731b8e795e"
            ]
        ]
    },
    {
        "id": "4f1ed87887f71afd",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "name": "statusNotification",
        "func": "var statusCheck  = {};\nstatusCheck.connected = context.flow.get(\"connected\");\nstatusCheck.nrOfDataSources = context.flow.get(\"NrOfDataSources\");\nmsg.payload = {\"statusCheck\": statusCheck};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1550,
        "y": 2200,
        "wires": [
            [
                "ab057144cf917fb8"
            ]
        ]
    },
    {
        "id": "50caec1c.6ad584",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "context.flow.set(\"connected\", true);\nvar valvePosition = context.flow.get(\"ValvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"CylinderStatus\") || 0;\nvar newCycle = context.flow.get(\"NewCycle\") || false;\nvar cycle = context.flow.get(\"Cycle\") || 0;\nif((valvePosition === 0 && cylinderStatus === 0) && newCycle === false && cycle < 40){\n    context.flow.set(\"NewCycle\", true);\n    cycle = cycle + 1;\n    context.flow.set(\"Cycle\", cycle);\n    return [msg, null];\n} else if((valvePosition === 1 && cylinderStatus === 1) && newCycle === true && cycle < 40){\n    context.flow.set(\"NewCycle\", false);\n    cycle = cycle + 1;\n    context.flow.set(\"Cycle\", cycle);\n    return [null, msg];\n}\n\nreturn null;\n",
        "outputs": 2,
        "noerr": 0,
        "x": 460,
        "y": 2540,
        "wires": [
            [
                "a526eb90.5eb89",
                "be9595d8.2df6a8"
            ],
            [
                "18abfa8d.7a70a5"
            ]
        ]
    },
    {
        "id": "a526eb90.5eb89",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 2580,
        "wires": []
    },
    {
        "id": "468a613a.658ae8",
        "type": "delay",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "10",
        "randomLast": "15",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 860,
        "y": 2500,
        "wires": [
            [
                "66121d53.f7a264",
                "be9595d8.2df6a8"
            ]
        ]
    },
    {
        "id": "66121d53.f7a264",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 2580,
        "wires": []
    },
    {
        "id": "be9595d8.2df6a8",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var cycle = context.flow.get(\"Cycle\") || 0;\nvar valvePosition = context.flow.get(\"ValvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"CylinderStatus\") || 0;\nvar startCycleTs = context.flow.get(\"startCycleTs\") || 0;\nvar date = new Date();\n\n    if((cylinderStatus === 0 && valvePosition === 0) || (cylinderStatus === 1 && valvePosition === 1)){\n\n        //context.flow.set(\"timestamp\", date.getTime());\n        context.flow.set(\"startCycleTs\", date.getTime());\n        \n        if(cycle >= 40){\n            //context.flow.set(\"cycle\", cycle);\n            msg.delay = 30000;\n            msg.topic =\"@stats reset\";\n            return msg;\n        }\n        if(valvePosition === 0){\n            valvePosition = 1;\n            context.flow.set(\"ResponseTime\", 0);\n        } else {\n            valvePosition = 0;\n            context.flow.set(\"ResponseTime\", 0);\n        }\n        context.flow.set(\"ValvePosition\", valvePosition);\n        /*if(cycle < 10){\n            msg.delay = 5000 + (5000*0.01*cycle);\n        } else if(cycle < 15 && cycle >= 10){\n            msg.delay = 5500 + (5000*0.02*cycle);\n        } else if (cycle < 20 && cycle >= 15){\n            msg.delay = 6500 + (5000*0.03*cycle);\n        } else if(cycle < 30 && cycle >= 20){\n            msg.delay = 7000 + (5000*0.035*cycle);\n        }else if(cycle < 40 && cycle >= 30){\n            msg.delay = 10250 + (5000*0.04*cycle);\n        }*/\n        if(cycle < 40){\n            msg.delay = 5000 + (5000*0.025*cycle);\n        }\n        \n        \n        return msg;\n    }\n\n\n//var date = new Date();\n//context.flow.set(\"timestamp\", date.getTime());\n//var currentTimeElapsed = date.getTime() - startCycleTs;\n//context.flow.set(\"responseTime\", currentTimeElapsed);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 2540,
        "wires": [
            [
                "aa852a4a.3a9728",
                "f23c2e8f.c112f",
                "b6935d1d.70c508"
            ]
        ]
    },
    {
        "id": "2dd76a11.baee1e",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1950,
        "y": 2354,
        "wires": []
    },
    {
        "id": "98dd4417.bb6a8",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var elapsedTimeMovingAvg = msg.result.movingAvg;\ncontext.flow.set(\"ResponseTimeMovingAvg\", elapsedTimeMovingAvg);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2100,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "5543cf66.c72ba8",
        "type": "Data Analysis",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "action": "realtime",
        "outputs": 3,
        "outliersBase": "avg",
        "outliersStdDevs": "3",
        "term": "15",
        "keyProperty": "msg.topic",
        "dataProperty": "msg.payload",
        "dataProperties": [
            "msg.payload[0]",
            "msg.payload[1]"
        ],
        "x": 1740,
        "y": 2414,
        "wires": [
            [
                "2dd76a11.baee1e",
                "98dd4417.bb6a8",
                "a2d0442e.c3b158"
            ],
            [],
            []
        ]
    },
    {
        "id": "aa852a4a.3a9728",
        "type": "delay",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1340,
        "y": 2540,
        "wires": [
            [
                "3f2701d6.f73216"
            ]
        ]
    },
    {
        "id": "3f2701d6.f73216",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var cycle = context.flow.get(\"Cycle\") || 0;\nvar valvePosition = context.flow.get(\"ValvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"CylinderStatus\") || 0;\n\nvar timeElapsed = 0;  \nvar date = new Date();\n\nif((cylinderStatus === \"undefined\" && valvePosition === 1)){\n    context.flow.set(\"CylinderStatus\", 1);\n} else if((cylinderStatus === \"undefined\" && valvePosition === 0)){\n    context.flow.set(\"CylinderStatus\", 0);\n}\n\nif(cycle < 10 && cycle >= 0){\n    timeElapsed = msg.delay;\n} else if(cycle < 15 && cycle >= 10){\n    timeElapsed = msg.delay;\n} else if (cycle < 20 && cycle >= 15){\n    timeElapsed = msg.delay;\n} else if(cycle < 30 && cycle >= 20){\n    timeElapsed = msg.delay;\n}else if(cycle < 40 && cycle >= 30){\n    timeElapsed = msg.delay;\n} else if(cycle >= 40){\n    cycle = 0;\n    context.flow.set(\"Cycle\", cycle);\n    context.flow.set(\"ValvePosition\", 0);\n    context.flow.set(\"CylinderStatus\", 0);\n    context.flow.set(\"NewCycle\", false);\n    context.flow.set(\"ResponseTime\", timeElapsed);\n\n    context.flow.set(\"timestamp\", date.getTime());\n    msg.payload = timeElapsed;\n    var msg_out_2 = {};\n    return [msg, msg_out_2];\n    \n}\n\ncontext.flow.set(\"ResponseTime\", timeElapsed);\n\ncontext.flow.set(\"timestamp\", date.getTime());\nmsg.payload = timeElapsed;\nmsg.topic = \"ResponseTimeMvgAvg\";\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "x": 1520,
        "y": 2540,
        "wires": [
            [
                "5543cf66.c72ba8",
                "9d3857b4.a3a72"
            ],
            [
                "95c62ca4.9097f8"
            ]
        ]
    },
    {
        "id": "f23c2e8f.c112f",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1330,
        "y": 2480,
        "wires": []
    },
    {
        "id": "9d3857b4.a3a72",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1710,
        "y": 2340,
        "wires": []
    },
    {
        "id": "a2d0442e.c3b158",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var msg_out = {};\nvar payload = {};\n//payload.x = msg.result.count;\npayload.x = context.flow.get(\"Cycle\");\npayload.y = msg.payload;\npayload.y_out = \"\";\nmsg_out.payload = payload;\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "x": 2100,
        "y": 2420,
        "wires": [
            [
                "95c62ca4.9097f8",
                "deaca8d7.b5846"
            ]
        ]
    },
    {
        "id": "67e92151.ed84b8",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2530,
        "y": 2480,
        "wires": []
    },
    {
        "id": "deaca8d7.b5846",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2330,
        "y": 2460,
        "wires": []
    },
    {
        "id": "4f700a47.b1503c",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var responseTimePred = [];\nfor(var k = 1; k <= 10; k++){\n    var futurePrediction = msg.function.equation[0]*Math.pow((msg.payload.x + k), 2) + msg.function.equation[1]*(msg.payload.x + k) + msg.function.equation[2];\n    msg.payload.futurePrediction = futurePrediction;\n    responseTimePred.push(futurePrediction);\n}\n//responseTimePred.pop();\n//responseTimePred.unshift(futurePrediction);\ncontext.flow.set(\"ResponseTimePred\", responseTimePred);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2620,
        "y": 2540,
        "wires": [
            [
                "e3a6732e.ca9c5"
            ]
        ]
    },
    {
        "id": "e3a6732e.ca9c5",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2790,
        "y": 2480,
        "wires": []
    },
    {
        "id": "b84f2e00.9385c8",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 430,
        "y": 2620,
        "wires": []
    },
    {
        "id": "6d18c370.e424fc",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 2674,
        "wires": []
    },
    {
        "id": "b6935d1d.70c508",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var cycle = context.flow.get(\"Cycle\");\nif(cycle < 40){\n    var calculatedDelay = context.flow.get(\"calculatedDelay\") || 0;\n    msg.topic = \"control\";\n    msg.payload = ((msg.delay)/1000) - 1;\n    calculatedDelay = Math.round(((msg.delay)/1000) - 1);\n    context.flow.set(\"calculatedDelay\", calculatedDelay);\n    return msg;\n} else return null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 2674,
        "wires": [
            [
                "cc4c0f0b.0473a8"
            ]
        ]
    },
    {
        "id": "9233e59a.9662b",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var date = new Date();\nvar startCycle = context.flow.get(\"startCycleTs\");\ncontext.flow.set(\"ResponseTime\", date.getTime() - startCycle);\nlet calculatedDelay = context.flow.get(\"calculatedDelay\");\nif(calculatedDelay >= msg.payload ){\n    context.flow.set(\"CylinderStatus\", \"undefined\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1750,
        "y": 2774,
        "wires": [
            []
        ]
    },
    {
        "id": "6b5bce5c.8f7818",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = 60;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 2714,
        "wires": [
            [
                "fbec0d31.b2b898"
            ]
        ]
    },
    {
        "id": "151fde71.ad247a",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var date = new Date();\ncontext.flow.set(\"timestamp\", date.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 2734,
        "wires": [
            []
        ]
    },
    {
        "id": "ce77388f.a7693",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 2654,
        "wires": []
    },
    {
        "id": "5fe0925e.2b993c",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 2694,
        "wires": []
    },
    {
        "id": "18abfa8d.7a70a5",
        "type": "countdown",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "event",
        "payloadTimerStopType": "msg",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": false,
        "startCountdownOnControlMessage": false,
        "x": 870,
        "y": 2634,
        "wires": [
            [
                "be9595d8.2df6a8",
                "ce77388f.a7693"
            ],
            [
                "5fe0925e.2b993c"
            ]
        ]
    },
    {
        "id": "cc4c0f0b.0473a8",
        "type": "countdown",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "",
        "payloadTimerStopType": "nul",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": true,
        "x": 1530,
        "y": 2674,
        "wires": [
            [],
            [
                "6d18c370.e424fc",
                "9233e59a.9662b"
            ]
        ]
    },
    {
        "id": "fbec0d31.b2b898",
        "type": "countdown",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "",
        "payloadTimerStopType": "nul",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": true,
        "x": 490,
        "y": 2714,
        "wires": [
            [],
            [
                "151fde71.ad247a"
            ]
        ]
    },
    {
        "id": "95c62ca4.9097f8",
        "type": "regression",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "dataSetSize": "15",
        "regressionType": "polynomial",
        "polynomialOrder": 2,
        "precision": "2",
        "xInputField": "payload.x",
        "xInputFieldType": "msg",
        "yInputField": "payload.y",
        "yInputFieldType": "msg",
        "yOutputField": "payload.y_out",
        "yOutputFieldType": "msg",
        "functionOutputField": "function",
        "functionOutputFieldType": "msg",
        "resultOnly": false,
        "x": 2390,
        "y": 2540,
        "wires": [
            [
                "67e92151.ed84b8",
                "4f700a47.b1503c"
            ]
        ]
    },
    {
        "id": "48dd5be3.c049ac",
        "type": "cronplus",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "schedule1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 2620,
        "wires": [
            [
                "50caec1c.6ad584",
                "b84f2e00.9385c8",
                "6b5bce5c.8f7818"
            ]
        ]
    },
    {
        "id": "d71c20e4c91d2c13",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "driver.connection.check",
        "links": [],
        "x": 780,
        "y": 2200,
        "wires": [
            [
                "4f1ed87887f71afd"
            ]
        ],
        "l": true
    },
    {
        "id": "ab057144cf917fb8",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "driver.connection.check out",
        "mode": "return",
        "links": [],
        "x": 2165,
        "y": 2200,
        "wires": []
    },
    {
        "id": "5a83b4fb4e0ba10c",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "048ba3a0625e4510",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "cdb7ca556bf07837",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "0d356070fd1e440b",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1160,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "e0228169e632fce2",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "3de1f30f5c365959",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "626df66b2f8fedd5",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "d57f305ac53e4d3f",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1260,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "f8b354e5d9771dda",
        "type": "function",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "call Southbound Interface Reset Subscriptions",
        "func": "msg.target = \"southbound.resetSebscriptions\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 160,
        "wires": [
            [
                "d57f305ac53e4d3f"
            ]
        ]
    },
    {
        "id": "2779d6b6a0f7b1cc",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 900,
        "y": 540,
        "wires": [],
        "l": true
    },
    {
        "id": "233985a03f7af2aa",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "links": [
            "f3137293845d295d",
            "38b37541ec9d7086",
            "cd39ec5da0b7b743",
            "2779d6b6a0f7b1cc",
            "77b206c3d0825bf2",
            "ebeaa83d4abb8b92",
            "5df3fe8b89186d53"
        ],
        "x": 730,
        "y": 2080,
        "wires": [
            [
                "568d6b198e562bcd"
            ]
        ],
        "l": true
    },
    {
        "id": "cd39ec5da0b7b743",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 900,
        "y": 860,
        "wires": [],
        "l": true
    },
    {
        "id": "38b37541ec9d7086",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 900,
        "y": 1200,
        "wires": [],
        "l": true
    },
    {
        "id": "f3137293845d295d",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 900,
        "y": 1580,
        "wires": [],
        "l": true
    },
    {
        "id": "5df3fe8b89186d53",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 2460,
        "y": 540,
        "wires": [],
        "l": true
    },
    {
        "id": "ebeaa83d4abb8b92",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 2460,
        "y": 840,
        "wires": [],
        "l": true
    },
    {
        "id": "77b206c3d0825bf2",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 2460,
        "y": 1200,
        "wires": [],
        "l": true
    },
    {
        "id": "eadbc9240e0cdc8c",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 480,
        "wires": [
            [
                "1aa7d12a78802563"
            ]
        ]
    },
    {
        "id": "c15f3336dbf94ae6",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 440,
        "wires": [
            [
                "5a83b4fb4e0ba10c"
            ]
        ]
    },
    {
        "id": "7306d65d1bc01b37",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 780,
        "wires": [
            [
                "048ba3a0625e4510"
            ]
        ]
    },
    {
        "id": "59bdbd7a506d8fd5",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1120,
        "wires": [
            [
                "cdb7ca556bf07837"
            ]
        ]
    },
    {
        "id": "bac985087fd6f894",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1500,
        "wires": [
            [
                "0d356070fd1e440b"
            ]
        ]
    },
    {
        "id": "fe88bf27f3c503ad",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 460,
        "wires": [
            [
                "e0228169e632fce2"
            ]
        ]
    },
    {
        "id": "fa5cbe0db60ec832",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 760,
        "wires": [
            [
                "3de1f30f5c365959"
            ]
        ]
    },
    {
        "id": "769bc30f1e2ca841",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 1120,
        "wires": [
            [
                "626df66b2f8fedd5"
            ]
        ]
    },
    {
        "id": "1aa7d12a78802563",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e98655e2c9882820",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 820,
        "wires": [
            [
                "bb967e7e4e1268c3"
            ]
        ]
    },
    {
        "id": "bb967e7e4e1268c3",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "a54415cb96270ac0",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1160,
        "wires": [
            [
                "d3a21737e8f473b4"
            ]
        ]
    },
    {
        "id": "d3a21737e8f473b4",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "c46fa08910fa0901",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1540,
        "wires": [
            [
                "81565ab51080788a"
            ]
        ]
    },
    {
        "id": "81565ab51080788a",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1160,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "8d76970b5a1222aa",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 500,
        "wires": [
            [
                "481398519a9d5237"
            ]
        ]
    },
    {
        "id": "481398519a9d5237",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "e2cb9dfbe9c7c212",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 800,
        "wires": [
            [
                "59420534ad5d78a1"
            ]
        ]
    },
    {
        "id": "59420534ad5d78a1",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "a19b541913d06013",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 1160,
        "wires": [
            [
                "1cbf9c0a31818457"
            ]
        ]
    },
    {
        "id": "1cbf9c0a31818457",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "50f874d57977fcf9",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.metrics",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 2060,
        "wires": [
            [
                "ddd6397bb839158d"
            ]
        ]
    },
    {
        "id": "ddd6397bb839158d",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2160,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "dc55258e946a2e61",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1240,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "54ecd0622d36e32d",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 580,
        "wires": [
            [
                "dc55258e946a2e61"
            ]
        ]
    },
    {
        "id": "12ce6e0bc92395a9",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 900,
        "wires": [
            [
                "1a86422394914d7e"
            ]
        ]
    },
    {
        "id": "1a86422394914d7e",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1240,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "358bcce8ae429bd9",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1240,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "3bd02b39c1e9e9ec",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1240,
        "wires": [
            [
                "358bcce8ae429bd9"
            ]
        ]
    },
    {
        "id": "f0552cbe3ca19565",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1240,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "5452497d5ac0f4cd",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1620,
        "wires": [
            [
                "f0552cbe3ca19565"
            ]
        ]
    },
    {
        "id": "19e11092ef115cb6",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2860,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "a3d5d731cd8b6d42",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2700,
        "y": 1240,
        "wires": [
            [
                "19e11092ef115cb6"
            ]
        ]
    },
    {
        "id": "7612f18343452a99",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2780,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "e0eb5904abedc0c5",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2620,
        "y": 900,
        "wires": [
            [
                "7612f18343452a99"
            ]
        ]
    },
    {
        "id": "3cebbd208bc6d469",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2800,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "631352fe068f3d43",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2640,
        "y": 580,
        "wires": [
            [
                "3cebbd208bc6d469"
            ]
        ]
    },
    {
        "id": "95f3474f2f46c76d",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 900,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "2e02385365895e81",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 900,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "0027cc86b8966e35",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 900,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "1216f346d5a223cf",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 920,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "b0a9cb27cdf5f9af",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 2460,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "5539401569fc87b3",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 2460,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "73e57ddb5b800255",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 2500,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "41d1269376597f69",
        "type": "function",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "check connected",
        "func": "let connected = context.flow.get(\"connected\");\nif(connected) return msg;\nelse return null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 200,
        "wires": [
            [
                "1103084ec6579d65"
            ]
        ]
    }
]