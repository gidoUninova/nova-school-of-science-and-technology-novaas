[
    {
        "id": "fd31082e.5487d8",
        "type": "tab",
        "label": "AAS - Component Manager",
        "disabled": false,
        "info": ""
    },
    {
        "id": "128ab3134a54f6b4",
        "type": "tab",
        "label": "DPDM/OperationalData",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1543d308b342690a",
        "type": "tab",
        "label": "FlexDash stats",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3db1c009.99d51",
        "type": "tab",
        "label": "AAS - NorthboundInterface",
        "disabled": false,
        "info": ""
    },
    {
        "id": "670d9c89.6d0424",
        "type": "tab",
        "label": "AAS - SouthboundInterface",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7585249f.880c0c",
        "type": "tab",
        "label": "AAS - Environment V2",
        "disabled": true,
        "info": ""
    },
    {
        "id": "76d11e83ac083a40",
        "type": "tab",
        "label": "AAS - Environment V3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d6ac686a8b33b0c0",
        "type": "tab",
        "label": "InternalDbTester",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "32c5a22a534a4588",
        "type": "tab",
        "label": "AAS - UserInterface V3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "18bd4aa6085b5dfb",
        "type": "tab",
        "label": "AAS - UserInterface V2",
        "disabled": true,
        "info": ""
    },
    {
        "id": "41b3a1439ccec2c1",
        "type": "subflow",
        "name": "Property handler",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 520,
                "wires": [
                    {
                        "id": "95ca925e8f8cf880"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1880,
                "y": 500,
                "wires": [
                    {
                        "id": "1274c1fecaa655a8",
                        "port": 0
                    },
                    {
                        "id": "78d0225e0b3a8fe6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1880,
                "y": 800,
                "wires": [
                    {
                        "id": "e62907e7bcbce663",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1880,
                "y": 860,
                "wires": [
                    {
                        "id": "f02316f50a016d5d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "PropertyName",
                "type": "str",
                "value": ""
            },
            {
                "name": "PropertyLink",
                "type": "str",
                "value": ""
            },
            {
                "name": "HistoryLength",
                "type": "num",
                "value": ""
            },
            {
                "name": "PropertyLinkEvt",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1740,
            "y": 700,
            "wires": [
                {
                    "id": "5f9633884f5e4cd4",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "4b6a31ae.51e96",
        "type": "subflow",
        "name": "AddFlowFromFile",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 171.6666259765625,
                "y": 196.66673278808594,
                "wires": [
                    {
                        "id": "71e88904.3ead78"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1064.9996948242188,
                "y": 196.66673278808594,
                "wires": [
                    {
                        "id": "343c7ae9.c921c6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "56cb7422.e3d28c",
        "type": "subflow",
        "name": "APILogger",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 413.88330078125,
                "y": 302.8833312988281,
                "wires": []
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "5c6f7f1c.e800a",
        "type": "subflow",
        "name": "OpenAAS_Manifest_RetrievingHeaders",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 220,
                "y": 80,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 80,
                "wires": []
            }
        ]
    },
    {
        "id": "5ed335e57e3a0a3e",
        "type": "subflow",
        "name": "History",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "407f394e39d1235e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "407f394e39d1235e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "historyArrayName",
                "type": "str",
                "value": ""
            },
            {
                "name": "PathTo",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "786aaafb.231574",
        "type": "subflow",
        "name": "OpenAAS_Manifest_RetrievingPropertyById",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 1180,
                "y": 200,
                "wires": []
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "88bdbfa9.b5c8d",
        "type": "subflow",
        "name": "DeleteFlowsFromDirectory",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 222.3333740234375,
                "y": 375.46429443359375,
                "wires": [
                    {
                        "id": "d5cf465.083bfb8"
                    },
                    {
                        "id": "80d73952.05b468"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1658,
                "y": 326,
                "wires": [
                    {
                        "id": "69324f69.01e2f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "b1c764f174c1fb3e",
        "type": "subflow",
        "name": "JSON_Paths",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "74ba00144af1a34e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "74ba00144af1a34e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "PathTo",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c4ef1733.bc36a8",
        "type": "subflow",
        "name": "OpenAAS_Manifest_RetrievingSubmodels",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 1100,
                "y": 220,
                "wires": []
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d8633d34.059f2",
        "type": "subflow",
        "name": "DataFlowsManagement",
        "info": "",
        "category": "as_subflows",
        "in": [
            {
                "x": 323.3333740234375,
                "y": 280,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 1283.333251953125,
                "y": 279.9999694824219,
                "wires": []
            }
        ]
    },
    {
        "id": "4b4e4270.d440bc",
        "type": "group",
        "z": "fd31082e.5487d8",
        "name": "To North",
        "style": {
            "fill": "#bfc7d7",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "c7097b80.b03428",
            "5c80f7ac.2fc2b8",
            "3e11fc1c.d74334",
            "1f1ce2c5.9cb5cd",
            "6c10cd375f817bbf",
            "7b48ced64946a8d2",
            "893f967b73205095",
            "5cea18b9856d1364",
            "e1994719bd7b4722",
            "4872c068f48e839b",
            "a9c22279a032d681",
            "1f13de33c71277ce",
            "45cb0777f0f43a5d",
            "14183942fd4b56cd",
            "deb1f51509244167",
            "6d76f752732d606a"
        ],
        "x": 194,
        "y": 4679,
        "w": 2272,
        "h": 242
    },
    {
        "id": "6aa9beecbf5f8d23",
        "type": "group",
        "z": "128ab3134a54f6b4",
        "name": "Set-up",
        "style": {
            "fill": "#e3f3d3",
            "fill-opacity": "0.4",
            "label": true
        },
        "nodes": [
            "5c3897124d1d95c0",
            "41d553602c61b3d5",
            "4be0576d4487e1ca",
            "1103084ec6579d65",
            "d57f305ac53e4d3f",
            "f8b354e5d9771dda",
            "41d1269376597f69"
        ],
        "x": 134,
        "y": 59,
        "w": 1232,
        "h": 182
    },
    {
        "id": "b3fca1f0.1e5ef8",
        "type": "group",
        "z": "128ab3134a54f6b4",
        "name": "Simulator",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "50caec1c.6ad584",
            "a526eb90.5eb89",
            "468a613a.658ae8",
            "66121d53.f7a264",
            "be9595d8.2df6a8",
            "2dd76a11.baee1e",
            "98dd4417.bb6a8",
            "5543cf66.c72ba8",
            "aa852a4a.3a9728",
            "3f2701d6.f73216",
            "f23c2e8f.c112f",
            "9d3857b4.a3a72",
            "a2d0442e.c3b158",
            "67e92151.ed84b8",
            "deaca8d7.b5846",
            "4f700a47.b1503c",
            "e3a6732e.ca9c5",
            "b84f2e00.9385c8",
            "6d18c370.e424fc",
            "b6935d1d.70c508",
            "9233e59a.9662b",
            "6b5bce5c.8f7818",
            "151fde71.ad247a",
            "ce77388f.a7693",
            "5fe0925e.2b993c",
            "48dd5be3.c049ac",
            "18abfa8d.7a70a5",
            "cc4c0f0b.0473a8",
            "fbec0d31.b2b898",
            "95c62ca4.9097f8"
        ],
        "x": 14,
        "y": 2299,
        "w": 2872,
        "h": 516
    },
    {
        "id": "d366c10f.cbf158",
        "type": "group",
        "z": "fd31082e.5487d8",
        "name": "To/From South",
        "style": {
            "fill": "#bfdbef",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "5ee56f7a.9622a",
            "d7f84005.ce11e8",
            "9f810b8b.7a1b8",
            "b88a92c6.fb547",
            "21eb2aa8ef422845",
            "555ce72ca0d7dfd4",
            "1de8d122c13a3233",
            "4ac796c8ddf8155a",
            "9bf7f8737085ee59",
            "877ba601c47f4a76",
            "809d87b71fb0bdfd",
            "0fd2e5d226b547d5",
            "9fc975fe338b2abf",
            "1c271c02ad31924a"
        ],
        "x": 224,
        "y": 3779,
        "w": 2772,
        "h": 562
    },
    {
        "id": "ea3b0ae56fd0d23e",
        "type": "group",
        "z": "fd31082e.5487d8",
        "name": "AAS Configuration",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "color": "#777777"
        },
        "nodes": [
            "7399afe28fd2b3e3",
            "258a1a12d86a4632",
            "e3c6e6cad62c67a3",
            "a23e7b2b7d892ce8",
            "3aa49896be203ca6",
            "0d8d61717cfd4c03",
            "b9df8432b067da9e",
            "bfb79cdf88b1c91b",
            "c489082841bfdcae",
            "ae1b6bc.0e50598",
            "c5b5c618.111a08",
            "ed752512.71a7e",
            "f822f55e.4e556",
            "facb362b.6dd0b",
            "fc0a9d8e.12c52",
            "6b25201afcb2d8ae",
            "e19fcb6bfe4abba9",
            "2c314cfc2cf2d5e4",
            "cbeff4782cad4fc0",
            "6b047a758dbcf417",
            "0adccb6c34ec2802"
        ],
        "x": 224,
        "y": 339,
        "w": 2802,
        "h": 262
    },
    {
        "id": "102e2f75f3511731",
        "type": "group",
        "z": "32c5a22a534a4588",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8dd79e29ee4bb8bd",
            "10d103b265e57a30",
            "373aadca35bb6670",
            "344c7fd18a7e4574",
            "0bf7d64d4bfefde8",
            "e8f3a993c3f7c730",
            "09c675c2a2ee0d9c",
            "e470e541de1883e1",
            "550bb7dbcd65bfbb"
        ],
        "x": 2454,
        "y": 3299,
        "w": 1522,
        "h": 282
    },
    {
        "id": "df5de9f83532cc22",
        "type": "group",
        "z": "32c5a22a534a4588",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "48a65c5d8b051888",
            "bc60b4150bce6cbb",
            "5cb620e639653f0a",
            "655fd5738e5d283f",
            "726b1c7784b35142",
            "9511ede6fcb3958e",
            "6c509196a5166613",
            "5d353a2e32079e97",
            "d9fa8fe234df30cc",
            "7e2c47738401b95c",
            "985dd8338cd4b309",
            "01bb6184dc050c52",
            "eb5e4d76d5c7fe2c",
            "0aec26b2c7aa59a0",
            "4b533d51dbd5a15c",
            "68e73d146ef433f0",
            "fd7f7c05f8754c67",
            "1e0459bfa5012f2c",
            "5d6ad4eadc4475da",
            "98cec6a0f06cf40d",
            "80b73b7b2296415f",
            "2d26ceced77e60ba",
            "61f4df87d1f9a633",
            "efc9674081613614",
            "d103ce29e9a3313d",
            "88a83723a232ac4d"
        ],
        "x": 104,
        "y": 2999,
        "w": 1722,
        "h": 489.5
    },
    {
        "id": "4605d2490d19792b",
        "type": "group",
        "z": "18bd4aa6085b5dfb",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f08e4446f8c56866",
            "6f250ee46b7f0b81",
            "f7d6c4e38a7a526e",
            "3c50ead74acf09c2",
            "cb61f502cf6fb808",
            "26cbfabbe9a045b6",
            "df0cdbd01b79aa7f",
            "a77fc367a6eb4126",
            "4cd113be9d61442d"
        ],
        "x": 2454,
        "y": 3299,
        "w": 1522,
        "h": 282
    },
    {
        "id": "31414d824b5c396c",
        "type": "group",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "afbb50bbfa477ea5",
            "26947bec9feb4873",
            "0ea7e507ac2a29ec",
            "e201bc83275a7f83",
            "d0f985539daab1ec",
            "f4a284a45f8b545d",
            "07a0f665d5cbfd1c",
            "05a5ac2b39ce8a5a",
            "3f42e65d234a0cfc",
            "1362624f9f0287b5",
            "42388341f522e6be",
            "b53d454036592ab2",
            "7f43f894aae0c3aa",
            "d6516c8a88ca26ab",
            "1429117d262c229e",
            "69f55957cb39762a",
            "e675d8b7853af697",
            "917ef21e14c2db51",
            "0e49cdeaa36cefc5",
            "90e2f73a3b9c7b84",
            "8ad2137af24a7e1e",
            "9c21948cf137a230",
            "2122a8f7e1d745ed",
            "b3d8633ca043f8e4",
            "a8cc49ea41146e8f",
            "723d1041ef5b1414"
        ],
        "x": 104,
        "y": 2999,
        "w": 1722,
        "h": 489.5
    },
    {
        "id": "0cf42e9cc5365c9d",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2160,
        "y": 1180,
        "wires": [
            [
                "a9f85b8570718f9c"
            ]
        ]
    },
    {
        "id": "201be4c08d5d19e0",
        "type": "junction",
        "z": "670d9c89.6d0424",
        "x": 420,
        "y": 980,
        "wires": [
            [
                "eeab441ae2b4c1e1",
                "05f103af299b62e2"
            ]
        ]
    },
    {
        "id": "273b7e8259322a05",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2220,
        "y": 1840,
        "wires": [
            [
                "ce3d1cd7dad67519"
            ]
        ]
    },
    {
        "id": "32e4c48636bc81e8",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2160,
        "y": 1460,
        "wires": [
            [
                "e43904b134cd7e13"
            ]
        ]
    },
    {
        "id": "4f66f53de68a468a",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2100,
        "y": 1420,
        "wires": [
            [
                "32e4c48636bc81e8"
            ]
        ]
    },
    {
        "id": "bb464dc962e986c0",
        "type": "junction",
        "z": "670d9c89.6d0424",
        "x": 400,
        "y": 620,
        "wires": [
            [
                "66816677.7a4348",
                "4380234d202dd256",
                "36f799fe398b26b2"
            ]
        ]
    },
    {
        "id": "bf8d1775bedc9126",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2120,
        "y": 1120,
        "wires": [
            [
                "0cf42e9cc5365c9d"
            ]
        ]
    },
    {
        "id": "d2fa44933ad7f7bc",
        "type": "junction",
        "z": "fd31082e.5487d8",
        "x": 2120,
        "y": 1800,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "e35d4cb1f2b5081a",
        "type": "junction",
        "z": "670d9c89.6d0424",
        "x": 400,
        "y": 860,
        "wires": [
            [
                "8ba74a55.e37468",
                "fbd472e7.d10f48",
                "a81af3fe552c97a0"
            ]
        ]
    },
    {
        "id": "31cac02.f941f4",
        "type": "ui_tab",
        "name": "Concept Descriptions",
        "icon": "more",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3bda63ad6c6ff8b7",
        "type": "ui-base",
        "name": "dashboard",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "icon",
        "titleBarStyle": "fixed"
    },
    {
        "id": "50760f2b4eafd99b",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "56715436.c2591c",
        "type": "ui_tab",
        "name": "Reporting",
        "icon": "assignment",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6a4d510d.5de65",
        "type": "ui_group",
        "name": "ReportDownload",
        "tab": "56715436.c2591c",
        "order": 2,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6b5b20832e62c73e",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "7511afda.577af",
        "type": "ui_tab",
        "name": "Overview",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "77c7337d.b33f54",
        "type": "ui_group",
        "name": "Asset",
        "tab": "7511afda.577af",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "7a30c02.5d2894",
        "type": "ui_group",
        "name": "Information",
        "tab": "7511afda.577af",
        "order": 2,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "7dcd4079.256cf",
        "type": "ui_group",
        "name": "form",
        "tab": "56715436.c2591c",
        "order": 1,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "9d66e0f86e14f46d",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "9e53ceb7c065e802",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "a1ac21b4.e86f9",
        "type": "ui_tab",
        "name": "Dash",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a4706f79574c7b6e",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "b9ac7006.de90a",
        "type": "ui_group",
        "name": "Counters",
        "tab": "7511afda.577af",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "c56f01cc.380dd",
        "type": "ui_group",
        "name": "AAS Concept Descriptions",
        "tab": "31cac02.f941f4",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "c9852af825b6ea73",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px",
            "density": "default"
        }
    },
    {
        "id": "cb7ccff3.2c214",
        "type": "ui_tab",
        "name": "Logs",
        "icon": "view_list",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d1259efc.6308f8",
        "type": "ui_tab",
        "name": "Subscriptions",
        "icon": "link",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "de00f046.a69e6",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#595959",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "AASGreen",
                "default": "#4B7930",
                "baseColor": "#14524e",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#595959",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#595959",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#7f7f7f",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#595959",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "NOVAsset Administration Shell",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 5,
                "gy": 5,
                "cx": 5,
                "cy": 5,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e61c2c82.e7e9f",
        "type": "ui_tab",
        "name": "Environment",
        "icon": "format_list_bulleted",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e70d9188.7d95e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "$(BROKER_SERVICE_HOST)",
        "port": "$(BROKER_SERVICE_PORT)",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "f1192e81b068366b",
        "type": "sqlitedb",
        "db": "/app/.node-red/db/inNOVAASdb.db",
        "mode": "RW"
    },
    {
        "id": "f57f5dd7.e298c",
        "type": "ui_group",
        "name": "Actual Subscribed Elements",
        "tab": "d1259efc.6308f8",
        "order": 1,
        "disp": true,
        "width": "34",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a219352d4ef265ea",
        "type": "swagger-doc",
        "summary": "Retrieve the current Manifest document",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "Manifest aml document",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "f5b23bfc8fda48c4",
        "type": "swagger-doc",
        "summary": "Retrieve the current Manifest document",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "Manifest aml document",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "d001c392a5d760ab",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS identificators (header part of the Manifest)",
        "description": "AAS headers",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "aml Manifest headers response",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "d402a031398f76da",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS identificators (header part of the Manifest)",
        "description": "AAS headers",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "aml Manifest headers response",
                "code": "200"
            }
        },
        "deprecated": false
    },
    {
        "id": "347a264784675542",
        "type": "swagger-doc",
        "summary": "Retrieve the list of the AAS submodels (Body part of the Manifest)",
        "description": "AAS submodels",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "List the submodels in the Manifest"
            }
        },
        "deprecated": false
    },
    {
        "id": "1f032284ac2721dc",
        "type": "swagger-doc",
        "summary": "Retrieve the list of the AAS submodels (Body part of the Manifest)",
        "description": "AAS submodels",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [],
        "responses": {
            "200": {
                "description": "List the submodels in the Manifest"
            }
        },
        "deprecated": false
    },
    {
        "id": "47af7c7683eb6826",
        "type": "swagger-doc",
        "summary": "Retrieve the AAS submodel by Id",
        "description": "AAS submodel by Id",
        "tags": "",
        "consumes": "",
        "produces": "",
        "parameters": [
            {
                "name": "id",
                "in": "path",
                "description": "submodel identificator",
                "required": true,
                "type": "string"
            }
        ],
        "responses": {
            "200": {
                "description": "xml specific submodel"
            },
            "404": {
                "description": "Submodel with id: {id} not found"
            }
        },
        "deprecated": false
    },
    {
        "id": "ca88e4a4a38f1009",
        "type": "swagger-doc",
        "summary": "Test the status of the AAS",
        "description": "",
        "tags": "",
        "consumes": "",
        "produces": "test/html",
        "parameters": [],
        "responses": {
            "200": {
                "description": "OK"
            },
            "503": {
                "description": "Asset Administration Shell not configured"
            }
        },
        "deprecated": false
    },
    {
        "id": "6ef5fa494778921a",
        "type": "ui-theme",
        "name": "novaas",
        "colors": {
            "surface": "#feffff",
            "primary": "#0094ff",
            "bgPage": "#feffff",
            "groupBg": "#feffff",
            "groupOutline": "#c0c0c0"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "0px",
            "widgetGap": "12px",
            "density": "comfortable"
        }
    },
    {
        "id": "16ffbcf4.6cfa43",
        "type": "ui_group",
        "name": "Account Logs",
        "tab": "cb7ccff3.2c214",
        "order": 2,
        "disp": true,
        "width": "34",
        "collapse": false,
        "className": ""
    },
    {
        "id": "175d54ea.788a73",
        "type": "ui_group",
        "name": "Dashboard SBI",
        "tab": "a1ac21b4.e86f9",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false
    },
    {
        "id": "28ba0356.ef188c",
        "type": "ui_group",
        "name": "Commands",
        "tab": "e61c2c82.e7e9f",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "63d120af.ce7f5",
        "type": "ui_group",
        "name": "Logs",
        "tab": "cb7ccff3.2c214",
        "order": 1,
        "disp": true,
        "width": "34",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7def1ff8aab60e58",
        "type": "ui-page",
        "name": "Indicators",
        "ui": "3bda63ad6c6ff8b7",
        "path": "/gauges",
        "icon": "gauge",
        "layout": "grid",
        "theme": "6ef5fa494778921a",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 6,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "8fc17f5a.38023",
        "type": "ui_group",
        "name": "Headers",
        "tab": "e61c2c82.e7e9f",
        "order": 1,
        "disp": true,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b9aed87e.bdd0c8",
        "type": "ui_group",
        "name": "Commands",
        "tab": "cb7ccff3.2c214",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": false
    },
    {
        "id": "c68d835e.db3b2",
        "type": "ui_group",
        "name": "Body",
        "tab": "e61c2c82.e7e9f",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fa3153f56f0dc028",
        "type": "ui-group",
        "name": "Southbound",
        "page": "7def1ff8aab60e58",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c6bd718d6a2e605a",
        "type": "ui-page",
        "name": "Reporting",
        "ui": "3bda63ad6c6ff8b7",
        "path": "/reporting",
        "icon": "clipboard-text",
        "layout": "grid",
        "theme": "6ef5fa494778921a",
        "order": 7,
        "className": "",
        "visible": false,
        "disabled": "false"
    },
    {
        "id": "f81d2467483deddd",
        "type": "ui-page",
        "name": "Logs",
        "ui": "3bda63ad6c6ff8b7",
        "path": "/logs",
        "icon": "database",
        "layout": "notebook",
        "theme": "6ef5fa494778921a",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 5,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "7282e2c6be48fdc1",
        "type": "ui-page",
        "name": "Subscriptions",
        "ui": "3bda63ad6c6ff8b7",
        "path": "/subscriptions",
        "icon": "link",
        "layout": "notebook",
        "theme": "6ef5fa494778921a",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 4,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "52d8317fd6cd415b",
        "type": "ui-page",
        "name": "AAS Concept Descriptions",
        "ui": "3bda63ad6c6ff8b7",
        "path": "/aasconceptdescriptions",
        "icon": "more",
        "layout": "notebook",
        "theme": "6ef5fa494778921a",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "23"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "12"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "12"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 3,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "799504a3eca6f129",
        "type": "ui-page",
        "name": "Overview",
        "ui": "3bda63ad6c6ff8b7",
        "path": "/overview",
        "icon": "home",
        "layout": "notebook",
        "theme": "6ef5fa494778921a",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "d067e8b811739080",
        "type": "ui-page",
        "name": "Environment",
        "ui": "3bda63ad6c6ff8b7",
        "path": "/environment",
        "icon": "format-list-bulleted",
        "layout": "notebook",
        "theme": "6ef5fa494778921a",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "05a598e787528df2",
        "type": "ui-group",
        "name": "Overall Status",
        "page": "7def1ff8aab60e58",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "2e560a461d849b04",
        "type": "ui-group",
        "name": "Northbound",
        "page": "7def1ff8aab60e58",
        "width": "12",
        "height": "1",
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "442bd3202a627b48",
        "type": "ui-group",
        "name": "Active Subscriptions",
        "page": "7def1ff8aab60e58",
        "width": "12",
        "height": "1",
        "order": 4,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "2966738833ad551e",
        "type": "ui-group",
        "name": "Reporting",
        "page": "c6bd718d6a2e605a",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c1ab4ef42346ea60",
        "type": "ui-group",
        "name": "Commands",
        "page": "f81d2467483deddd",
        "width": "12",
        "height": "1",
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "a59ec750238a9f6f",
        "type": "ui-group",
        "name": "Actual Subscribed Elements",
        "page": "7282e2c6be48fdc1",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "cd688828bcd815e2",
        "type": "ui-group",
        "name": "AAS Concept Descriptions",
        "page": "52d8317fd6cd415b",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "2d91686a2ba1852c",
        "type": "ui-group",
        "name": "Asset",
        "page": "799504a3eca6f129",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "7db4e47f1c3bd6b8",
        "type": "ui-group",
        "name": "Overview",
        "page": "799504a3eca6f129",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "052f6d23fa4e527a",
        "type": "ui-group",
        "name": "AAS Metamodel",
        "page": "d067e8b811739080",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "6a60dba680d2cf0e",
        "type": "ui-group",
        "name": "Logs",
        "page": "f81d2467483deddd",
        "width": "12",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "b68f0194128bb725",
        "type": "ui-group",
        "name": "Account Logs",
        "page": "f81d2467483deddd",
        "width": "12",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "0f6603d9f95134b3",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = \"close\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 660,
        "wires": [
            [
                "f894203f2fd3ac35",
                "5f9633884f5e4cd4"
            ]
        ],
        "l": false
    },
    {
        "id": "127270a25c3d8888",
        "type": "switch",
        "z": "41b3a1439ccec2c1",
        "name": "topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "observe",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "unobserve",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "init",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 890,
        "y": 500,
        "wires": [
            [
                "1274c1fecaa655a8",
                "2cd93262147d3143"
            ],
            [
                "0f6603d9f95134b3",
                "78d0225e0b3a8fe6"
            ],
            [
                "0f6603d9f95134b3"
            ]
        ]
    },
    {
        "id": "1274c1fecaa655a8",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "PrepareOutput",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\n// Create an Observation Event Object ------------------------------------\nvar observation = {};\nobservation.id = uuid;\n//observation.source = msg.source;\nobservation.direction = \"Output\";\n\nvar observableReference = \"\";\n\n//var observedKeys = msg.payload.observed.keys;\n/*for(var key in observedKeys){\n    if(parseInt(key) < 2){\n        observableReference = observableReference + observedKeys[key].value + \"/\";\n    } else if (parseInt(key) >= 2 && parseInt(key) < (observedKeys.length - 1)) {\n        observableReference = observableReference + observedKeys[key].value + \".\";\n    } else {\n        observableReference = observableReference + observedKeys[key].value;\n    }\n}*/\n\nobservableReference = env.get(\"PropertyLink\");\n\nobservation.observableReference = observableReference;\n//observation.source = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nobservation.source = env.get(\"PropertyLinkEvt\");\n\nif(context.flow.get(\"timestamp\")){\n    observation.timestamp = context.flow.get(\"timestamp\");\n} else{\n    observation.timestamp = new Date().getTime();\n}\nobservation.payload = \"Data Flow Created\";\n//observation.href = msg.href;\n// END Create an Observation Object --------------------------------\n//outputMsgs.push(observation);\ncontext.flow.set('ObsObj', observation);\n//msg.payload = outputMsgs;\n//msg.payload = JSON.stringify(observation);\n//msg.test = JSON.parse(msg.payload);\nmsg.payload = observation;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 500,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "2cd93262147d3143",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = \"open\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 540,
        "wires": [
            [
                "f894203f2fd3ac35",
                "5f9633884f5e4cd4"
            ]
        ],
        "l": false
    },
    {
        "id": "5f9633884f5e4cd4",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "if(msg.payload == \"open\"){\n    msg.payload = ({ fill: \"green\", text: \"Open\" });\n} else if (msg.payload == \"close\"){\n    msg.payload = ({ fill: \"red\", text: \"Closed\" });\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1535,
        "y": 700,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "78d0225e0b3a8fe6",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "PrepareOutput",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\n// Create an Observation Event Object ------------------------------------\nvar observation = {};\nobservation.id = uuid;\nobservation.source = msg.source;\nobservation.direction = \"Output\";\nvar observableReference = \"\";\n\n/*var observedKeys = msg.payload.observed.keys;\nfor (var key in observedKeys) {\n    if (parseInt(key) < 2) {\n        observableReference = observableReference + observedKeys[key].value + \"/\";\n    } else if (parseInt(key) >= 2 && parseInt(key) < (observedKeys.length - 1)) {\n        observableReference = observableReference + observedKeys[key].value + \".\";\n    } else {\n        observableReference = observableReference + observedKeys[key].value;\n    }\n}*/\n\nobservableReference = env.get(\"PropertyLink\");\n\nobservation.observableReference = observableReference;\n//observation.source = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nobservation.source = env.get(\"PropertyLinkEvt\");\n\nif(context.flow.get(\"timestamp\")){\n    observation.timestamp = context.flow.get(\"timestamp\");\n} else{\n    observation.timestamp = new Date().getTime();\n}\nobservation.payload = \"Data Flow removed\";\n//observation.href = msg.href;\n// END Create an Observation Object --------------------------------\n//outputMsgs.push(observation);\n\n//msg.payload = outputMsgs;\n//msg.payload = JSON.stringify(observation);\n//msg.test = JSON.parse(msg.payload);\ncontext.flow.set(\"ObsObj\", \"\");\nmsg.payload = observation;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1175,
        "y": 600,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "95ca925e8f8cf880",
        "type": "switch",
        "z": "41b3a1439ccec2c1",
        "name": "scheduler",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "sbi scheduling data routing",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 520,
        "wires": [
            [
                "127270a25c3d8888"
            ],
            [
                "96b701c2b50dc6f7"
            ]
        ]
    },
    {
        "id": "96b701c2b50dc6f7",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "var propertyName = env.get(\"PropertyName\");\nvar Outmsg = {};\nOutmsg.topic = msg.topic;\nvar variable = context.flow.get(\"$parent.\" + propertyName);\ncontext.flow.set(\"variable\", variable);\n\nOutmsg.payload = variable;\nreturn Outmsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 875,
        "y": 800,
        "wires": [
            [
                "f894203f2fd3ac35",
                "f02316f50a016d5d"
            ]
        ],
        "l": false
    },
    {
        "id": "e62907e7bcbce663",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "func": "var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\nvar outMsg = {};\nvar ObsObj = context.flow.get('ObsObj');\nObsObj.id = uuid;\nvar timestamp = context.flow.get(\"$parent.timestamp\");\nif (typeof timestamp == 'undefined') {\n    timestamp = new Date().getTime();\n    ObsObj.timestamp = timestamp;\n}\nelse {\n    ObsObj.timestamp = timestamp;\n}\nObsObj.payload = context.flow.get(\"variable\");\noutMsg.payload = ObsObj;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1635,
        "y": 800,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "f02316f50a016d5d",
        "type": "unsafe-function",
        "z": "41b3a1439ccec2c1",
        "name": "responseTime",
        "func": "var historyArrayName = \"$parent.\" + env.get(\"PropertyName\") + \"_hist\";\nvar outMsg = {};\noutMsg.topic = \"put\";\nvar timestamp = context.flow.get(\"$parent.timestamp\");\nif (typeof timestamp == \"undefined\") {\n    timestamp = new Date().getTime();\n}\noutMsg.payload = {\n    link: env.get(\"PropertyLink\"),\n    tstamp: timestamp,\n    data: context.flow.get(\"variable\")\n};\nlet history = context.flow.get(historyArrayName) || [];\nif (history.length >= env.get(\"HistoryLength\")) {\n    history.pop();\n}\nhistory.push(outMsg.payload);\ncontext.flow.set(historyArrayName, history);\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1075,
        "y": 860,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "f894203f2fd3ac35",
        "type": "gate",
        "z": "41b3a1439ccec2c1",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "persist": false,
        "x": 1490,
        "y": 800,
        "wires": [
            [
                "e62907e7bcbce663"
            ]
        ]
    },
    {
        "id": "31aa7cf6.436564",
        "type": "addflow",
        "z": "4b6a31ae.51e96",
        "name": "",
        "x": 738.3333129882812,
        "y": 196.6666717529297,
        "wires": [
            [
                "343c7ae9.c921c6"
            ]
        ]
    },
    {
        "id": "343c7ae9.c921c6",
        "type": "merge",
        "z": "4b6a31ae.51e96",
        "name": "",
        "timeout": "1",
        "x": 925,
        "y": 198,
        "wires": [
            []
        ]
    },
    {
        "id": "71e88904.3ead78",
        "type": "change",
        "z": "4b6a31ae.51e96",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 374.99993896484375,
        "y": 196.6666717529297,
        "wires": [
            [
                "c19ac6e7.9aeaf8"
            ]
        ]
    },
    {
        "id": "c19ac6e7.9aeaf8",
        "type": "file in",
        "z": "4b6a31ae.51e96",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 574.9998168945312,
        "y": 196.6666717529297,
        "wires": [
            [
                "31aa7cf6.436564"
            ]
        ]
    },
    {
        "id": "6c23162c.b90798",
        "type": "debug",
        "z": "56cb7422.e3d28c",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1075.5,
        "y": 398.5,
        "wires": []
    },
    {
        "id": "8713151e.2f1728",
        "type": "unsafe-function",
        "z": "56cb7422.e3d28c",
        "name": "checkLogging",
        "func": "//var element = JSON.stringify(msg.payload);\nlet node_aas_log = process.env.NODE_AAS_RUNNNING_UNDER_PM2;\nif(typeof node_aas_log == \"undefined\"){\n    return [msg, null];\n} else {\n    return [null, msg];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 808.6041870117188,
        "y": 304.85418701171875,
        "wires": [
            [
                "d56e5f93.f422c"
            ],
            [
                "6c23162c.b90798",
                "fd22ab4d.326ef8"
            ]
        ]
    },
    {
        "id": "d56e5f93.f422c",
        "type": "logger",
        "z": "56cb7422.e3d28c",
        "name": "",
        "filename": "logs.log",
        "maxsize": 1,
        "maxfiles": 10,
        "complete": "true",
        "console": false,
        "file": true,
        "debug": false,
        "zip": false,
        "logtype": "info",
        "x": 1043.6332397460938,
        "y": 298.88336181640625,
        "wires": []
    },
    {
        "id": "dca65b7f.b00ba8",
        "type": "unsafe-function",
        "z": "56cb7422.e3d28c",
        "name": "createLogEntry",
        "func": "//var element = JSON.stringify(msg.payload);\nvar msg1 = {};\nvar outmsg = {};\n//msg1.payload = element;\nmsg1.requestedURL = msg.req.url;\nmsg1.headers = {};\nmsg1.headers[\"user-agent\"] = msg.req.headers[\"user-agent\"];\nmsg1.headers[\"authorization\"] = msg.req.headers[\"authorization\"];\nmsg1.headers[\"content-type\"] = msg.req.headers[\"content-type\"];\nmsg1.headers[\"host\"] = msg.req.headers[\"host\"];\nmsg1.startTime = msg.startTime;\nif(typeof msg.req.client._peername !== 'undefined'){\n    msg1.client = msg.req.client._peername.address;\n} else{\n    msg1.client = \"internal\";\n} \n\nmsg1.endTime = Date.now();\noutmsg.payload = JSON.stringify(msg1);\nreturn outmsg; // msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 573.88330078125,
        "y": 302.8833312988281,
        "wires": [
            [
                "8713151e.2f1728"
            ]
        ]
    },
    {
        "id": "fd22ab4d.326ef8",
        "type": "logger",
        "z": "56cb7422.e3d28c",
        "name": "",
        "filename": "logs.log",
        "maxsize": 1,
        "maxfiles": 10,
        "complete": "true",
        "console": true,
        "file": false,
        "debug": false,
        "zip": false,
        "logtype": "info",
        "x": 1044.7666015625,
        "y": 351.76666259765625,
        "wires": []
    },
    {
        "id": "407f394e39d1235e",
        "type": "function",
        "z": "5ed335e57e3a0a3e",
        "name": "History",
        "func": "var extract = function (point, keyIndex, keysArray) {\n    if (keyIndex < keysArray.length) {\n        let element = keysArray[keyIndex];\n        if (typeof point[element] !== 'object') {\n            let simpleValue = {};\n            simpleValue[element] = point[element];\n            return simpleValue\n        } else {\n            keyIndex = keyIndex + 1;\n            return extract(point[element], keyIndex, keysArray);\n\n        }\n\n    }\n\n}\n\nlet keys = env.get(\"PathTo\");\nlet keysArray = keys.split(\".\");\n\n\n// Get request timestamps\nvar start = msg.payload.start;\nvar end = (msg.payload.end - start)/1000;\n//var end = msg.payload.end;\nvar history = context.flow.get(\"$parent.\" + env.get(\"historyArrayName\"));\nif(end > history.length){\n    start = history.length;\n} else {\n    start = history.length - end;\n}\n\nvar data = [];\nfor (var ts = start; ts < history.length; ts++ )\n{   \n    var element = history[ts];\n\n    data.push( {\n        tstamp: element.tstamp,\n        data: extract(element.data, 0, keysArray)\n    } );\n}\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "38bec566.fe79ba",
        "type": "jsonata",
        "z": "786aaafb.231574",
        "name": "jsonata",
        "property": "payload",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 1140,
        "y": 40,
        "wires": [
            [
                "8a8a185a.1f2ec8"
            ]
        ]
    },
    {
        "id": "8a8a185a.1f2ec8",
        "type": "unsafe-function",
        "z": "786aaafb.231574",
        "name": "",
        "func": "msg.payload = msg.jsonataResult;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9ee0526a.63c73",
        "type": "unsafe-function",
        "z": "786aaafb.231574",
        "name": "JsonataQuery",
        "func": "msg.jsonata = \"Body.SubModels[(\\\"http://acplt.org/models/PhysicalConnection\\\" in ModelID.IDSpec)].PropertyValueStatementContainers.statements[$substringAfter(\" + \"\\\"\" + msg.req.params.id + \"\\\"\" + \", \\\"models/\\\") in $substringAfter(PropertyID.IDSpec, \\\"http://acplt.org/models/PhysicalConnection/\\\")]\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 40,
        "wires": [
            [
                "38bec566.fe79ba"
            ]
        ]
    },
    {
        "id": "bea41ae1.2c9688",
        "type": "json",
        "z": "786aaafb.231574",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 650,
        "y": 40,
        "wires": [
            [
                "9ee0526a.63c73"
            ]
        ]
    },
    {
        "id": "f7527cda.5b012",
        "type": "file in",
        "z": "786aaafb.231574",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 450,
        "y": 40,
        "wires": [
            [
                "bea41ae1.2c9688"
            ]
        ]
    },
    {
        "id": "22568f10.a8c3f",
        "type": "unsafe-function",
        "z": "88bdbfa9.b5c8d",
        "name": "checkEverythingDeleted",
        "func": "var driversIds = context.global.get('Drivers');\nif(driversIds.length == msg.count){\n    return msg;\n}\nelse{\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1475.4521484375,
        "y": 150.4381103515625,
        "wires": [
            [
                "d05b5f1b.67e2b",
                "412627f1.5db028"
            ]
        ]
    },
    {
        "id": "330fdcf8.4bd194",
        "type": "switch",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 140,
        "wires": [
            [
                "7c295142.669c6"
            ],
            [
                "91a7026.b9795"
            ]
        ]
    },
    {
        "id": "412627f1.5db028",
        "type": "change",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_1\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "pathsCorrelationId",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1256,
        "y": 318,
        "wires": [
            [
                "69324f69.01e2f"
            ]
        ]
    },
    {
        "id": "509b9a91.e6f574",
        "type": "delflow",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "enabled": true,
        "x": 1120,
        "y": 220,
        "wires": [
            [
                "7c295142.669c6"
            ]
        ]
    },
    {
        "id": "69324f69.01e2f",
        "type": "wait-paths",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "paths": "[\"path_2\",\"path_1\"]",
        "timeout": 15000,
        "finalTimeout": 60000,
        "x": 1525,
        "y": 326,
        "wires": [
            []
        ]
    },
    {
        "id": "7c295142.669c6",
        "type": "counter",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": null,
        "upper": null,
        "mode": "increment",
        "outputs": 1,
        "x": 1260,
        "y": 140,
        "wires": [
            [
                "22568f10.a8c3f"
            ]
        ]
    },
    {
        "id": "80d73952.05b468",
        "type": "change",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_2\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "pathsCorrelationId",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1254,
        "y": 380,
        "wires": [
            [
                "69324f69.01e2f"
            ]
        ]
    },
    {
        "id": "91a7026.b9795",
        "type": "unsafe-function",
        "z": "88bdbfa9.b5c8d",
        "name": "getFlowId",
        "func": "var outMsg = {};\noutMsg.flowId = msg.payload.id;\nreturn outMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 220,
        "wires": [
            [
                "509b9a91.e6f574"
            ]
        ]
    },
    {
        "id": "d05b5f1b.67e2b",
        "type": "config",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "properties": [
            {
                "p": "Drivers",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            }
        ],
        "active": false,
        "x": 1710,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d4155fc6.2b467",
        "type": "getflows",
        "z": "88bdbfa9.b5c8d",
        "name": "",
        "x": 660,
        "y": 140,
        "wires": [
            [
                "330fdcf8.4bd194"
            ]
        ]
    },
    {
        "id": "d5cf465.083bfb8",
        "type": "unsafe-function",
        "z": "88bdbfa9.b5c8d",
        "name": "ListLoadedDrivers",
        "func": "var driversIds = context.global.get('Drivers');\nvar outputMsgs = [];\nfor(var element in driversIds){\n    outputMsgs.push({id:driversIds[element]});\n}\nif(outputMsgs.length > 0){\n    return [outputMsgs, null];   \n} else {\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 480.3333740234375,
        "y": 303.46429443359375,
        "wires": [
            [
                "d4155fc6.2b467"
            ],
            [
                "412627f1.5db028"
            ]
        ]
    },
    {
        "id": "74ba00144af1a34e",
        "type": "function",
        "z": "b1c764f174c1fb3e",
        "name": "",
        "func": "var extract = function (point, keyIndex, keysArray) {\n    let element = \"\";\n    if(keyIndex < keysArray.length){\n        element = keysArray[keyIndex];\n        if (typeof point[element] !== 'object') {\n            let simpleValue = {};\n            simpleValue[element] = point[element];\n            return simpleValue\n        } else {\n            keyIndex = keyIndex + 1;\n            return extract(point[element], keyIndex, keysArray);\n            \n        }\n    }\n    return point;\n    \n}\n\nlet keys = env.get(\"PathTo\");\nlet keysArray = keys.split(\".\");\nlet point = msg.payload;\nmsg.payload.data = extract(point.data, 0, keysArray);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "15454eba.50d351",
        "type": "unsafe-function",
        "z": "c4ef1733.bc36a8",
        "name": "JsonataQuery",
        "func": "msg.jsonata = \"Body.SubModels[\\\"PUBLIC\\\" in PropertyValueStatementContainers.statements.Visibilty]\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 80,
        "wires": [
            [
                "39839c3f.68ab24"
            ]
        ]
    },
    {
        "id": "264fc7aa.b065d8",
        "type": "file in",
        "z": "c4ef1733.bc36a8",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "852a1c1c.2613f"
            ]
        ]
    },
    {
        "id": "39839c3f.68ab24",
        "type": "jsonata",
        "z": "c4ef1733.bc36a8",
        "name": "jsonata",
        "property": "payload",
        "jsonata": "",
        "jsonataOpts": "",
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "a3f88401.9623b8"
            ]
        ]
    },
    {
        "id": "852a1c1c.2613f",
        "type": "json",
        "z": "c4ef1733.bc36a8",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 510,
        "y": 80,
        "wires": [
            [
                "15454eba.50d351"
            ]
        ]
    },
    {
        "id": "a3f88401.9623b8",
        "type": "json",
        "z": "c4ef1733.bc36a8",
        "name": "",
        "property": "jsonataResult",
        "action": "str",
        "pretty": true,
        "x": 270,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "fb59797d.1ff768",
        "type": "unsafe-function",
        "z": "d8633d34.059f2",
        "name": "AML_Translation",
        "func": "msg.actionName = msg.payload._Attribs.ID;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 777.1428833007812,
        "y": 279.047607421875,
        "wires": [
            []
        ]
    },
    {
        "id": "011c7dbb515cfacf",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "Content-Type",
        "property": "req.headers['content-type']",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "application/json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1180,
        "y": 2080,
        "wires": [
            [
                "109adee663dace7d"
            ],
            [
                "7bde976648a4afdd"
            ]
        ]
    },
    {
        "id": "0277e205fc7c4018",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "86b4b166afaa8721"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1760,
        "y": 2560,
        "wires": [
            [
                "8188be80.74de4",
                "473173ab2a027b36"
            ]
        ]
    },
    {
        "id": "027d051c81f07494",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2250,
        "y": 900,
        "wires": [
            [
                "65f19aae35bacbf8"
            ],
            [
                "f9d652e6d25c6d69"
            ],
            [
                "87cc8612fd2fa954"
            ]
        ]
    },
    {
        "id": "066181d359f943c7",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "get comms.auth",
        "func": "let event = msg.payload;\nif(event.includes(\"comms.auth\")){\n    return msg;\n} else return null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 5380,
        "wires": [
            [
                "0968f3f08288f133"
            ]
        ]
    },
    {
        "id": "078534f3f21e5749",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Bad Request",
        "func": "msg.statusCode = 400;\nmsg.payload = \"Bad Request\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1960,
        "wires": [
            [
                "80653382a9ddfc1a",
                "a970a462ade9df64"
            ]
        ]
    },
    {
        "id": "0968f3f08288f133",
        "type": "json",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1630,
        "y": 5380,
        "wires": [
            [
                "afe5646656054e6b"
            ]
        ]
    },
    {
        "id": "11e91e4d13917d49",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "mode": "link",
        "links": [
            "0aef361690b6ac29",
            "dd10449ed2f83a93"
        ],
        "x": 2520,
        "y": 2140,
        "wires": [],
        "l": true
    },
    {
        "id": "12ec04d558dab59c",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "Content-Type",
        "property": "req.headers['content-type']",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "application/json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1380,
        "y": 2380,
        "wires": [
            [
                "d72ddc5a88547903"
            ],
            [
                "bca57c0d33d1ffab"
            ]
        ]
    },
    {
        "id": "15e77fdb6f5ba133",
        "type": "inject",
        "z": "fd31082e.5487d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 5400,
        "wires": [
            [
                "f823dc7f6b29ac78"
            ]
        ]
    },
    {
        "id": "1686c59a.31af6a",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "init_model_path_out",
        "links": [
            "c9de3df7.c99ee"
        ],
        "x": 1815,
        "y": 40,
        "wires": []
    },
    {
        "id": "17f97360.c6ae7d",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1810,
        "y": 2220,
        "wires": []
    },
    {
        "id": "1aa365b1.9f918a",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1810,
        "y": 2060,
        "wires": []
    },
    {
        "id": "1b23f529d28b3c8d",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2310,
        "y": 1680,
        "wires": [
            [
                "52f51d38e3ef5015"
            ],
            [
                "a05e9f5249fae9c3"
            ],
            [
                "ae1b12ed8743afcb"
            ]
        ]
    },
    {
        "id": "1c4b441450fae9ce",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "73fa67f7ce94427b"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1500,
        "y": 1840,
        "wires": [
            [
                "33d6ebc0.3cf344",
                "de98fa9db5e7edf4"
            ]
        ]
    },
    {
        "id": "1cb938c7cc1ad367",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2850,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "1d0d971feff52be8",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "9c413192820ac72d"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1940,
        "y": 2740,
        "wires": [
            [
                "3cae4c9a.680424",
                "72079a3a.bbba24"
            ]
        ]
    },
    {
        "id": "1f1ce2c5.9cb5cd",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2370,
        "y": 4800,
        "wires": []
    },
    {
        "id": "21eb2aa8ef422845",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "call Environmnent API",
        "links": [
            "cfe951f06c55831e"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 700,
        "y": 4260,
        "wires": [
            [
                "9f810b8b.7a1b8",
                "9fc975fe338b2abf",
                "1c271c02ad31924a"
            ]
        ]
    },
    {
        "id": "2ac4939d.2c7be4",
        "type": "xml",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1210,
        "y": 40,
        "wires": [
            [
                "03eee048d6c026b9"
            ]
        ]
    },
    {
        "id": "2c5fff4c.088d18",
        "type": "exec",
        "z": "fd31082e.5487d8",
        "command": "find",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1250,
        "y": 4520,
        "wires": [
            [
                "92440de2.fa50f8",
                "bf9c343fa3721ce0"
            ],
            [],
            []
        ]
    },
    {
        "id": "2d2b37ca7cbfdbc1",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Reference to Shells",
        "func": "let shell = msg.payload;\nlet referenceShell = {};\nreferenceShell.idShort = shell.idShort;\n    \nmsg.payload = referenceShell;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 1200,
        "wires": [
            [
                "0cf42e9cc5365c9d"
            ]
        ]
    },
    {
        "id": "2ec6555c.148e2a",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2290,
        "y": 2380,
        "wires": [
            [
                "dcf9acf8a851dece"
            ],
            [
                "bff3406b3b7d4081"
            ],
            [
                "b2811a59a9c3a985"
            ]
        ]
    },
    {
        "id": "2f60b1f4e43f787e",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "9e53ceb7c065e802",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2670,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "2fd0332425941bca",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "// Process msg payload\n\nlet logEvent = {};\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.timestamp = msg.payload.event.timestamp;\nlogEvent.payload = msg.payload.event.user.username;\n\nmsg.topic = \"INSERT INTO accountLogs (accessAt, username) VALUES ($accessAt, $username)\";\nmsg.payload = [logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 5380,
        "wires": [
            [
                "408467fa2308a4f0",
                "bb0a33346d86364c"
            ]
        ]
    },
    {
        "id": "30a79f0e8c4f4c44",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "ab943405e80b0646"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2360,
        "y": 3060,
        "wires": [
            [
                "a7bba83c.5d8f08"
            ]
        ]
    },
    {
        "id": "3186cf8ea5b9e507",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "183a7366ee87aed5"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1780,
        "y": 2940,
        "wires": [
            [
                "6d654b80.b160d4",
                "ef4743b2.ec1a6"
            ]
        ]
    },
    {
        "id": "3319bd2e.c8291a",
        "type": "OS",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 1350,
        "y": 5160,
        "wires": [
            [
                "713f7fd4.702168",
                "55e2ca10e19a319e"
            ]
        ]
    },
    {
        "id": "33d6ebc0.3cf344",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1590,
        "y": 1780,
        "wires": []
    },
    {
        "id": "389ecac2.32281e",
        "type": "file in",
        "z": "fd31082e.5487d8",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1920,
        "y": 4520,
        "wires": [
            [
                "1a4cbce1fa03147b"
            ]
        ]
    },
    {
        "id": "3cae4c9a.680424",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2110,
        "y": 2700,
        "wires": []
    },
    {
        "id": "3e11fc1c.d74334",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "CallbackIn",
        "links": [
            "e05fcd52.be3ca8"
        ],
        "x": 235,
        "y": 4800,
        "wires": [
            [
                "c7097b80.b03428",
                "1f13de33c71277ce"
            ]
        ]
    },
    {
        "id": "3f7c074f.d35dc8",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1170,
        "y": 180,
        "wires": []
    },
    {
        "id": "406069fe371c496c",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Bad Request",
        "func": "msg.statusCode = 400;\nmsg.payload = \"Bad Request\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1580,
        "wires": [
            [
                "8a5e354e09969495",
                "2a8c09c2e42f9a81"
            ]
        ]
    },
    {
        "id": "408467fa2308a4f0",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2350,
        "y": 5380,
        "wires": [
            []
        ]
    },
    {
        "id": "46ff0e8a.9a3288",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1630,
        "y": 100,
        "wires": []
    },
    {
        "id": "473173ab2a027b36",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2290,
        "y": 2560,
        "wires": [
            [
                "3f85246d7bfcbbe4"
            ],
            [
                "66f6f4417e352d20"
            ],
            [
                "5b7cc2a7fed6a732"
            ]
        ]
    },
    {
        "id": "4872c068f48e839b",
        "type": "function",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "prepareUpdate",
        "func": "let splittedLink = [];\nsplittedLink = msg.link.split(\"/\");\nlet submodelId = splittedLink[splittedLink.length - 2];\nlet id = splittedLink[splittedLink.length - 1];\nlet aasId = msg.link.replace(\"/\" + submodelId + \"/\" + id, \"\");\nmsg.req = {\n    \"params\": { \"id\": id, \"submodelId\": submodelId, \"aasid\": aasId },\n    \"query\": { \"content\": msg.content }\n};\nif (Array.isArray(msg.value)) {\n    msg.value = msg.value.join(\";\");\n}\nmsg.payload = {};\nmsg.payload[id] = msg.value;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 4880,
        "wires": [
            [
                "a9c22279a032d681",
                "14183942fd4b56cd"
            ]
        ]
    },
    {
        "id": "48745191cfba1eda",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "feac9604b306e8d4"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1440,
        "y": 680,
        "wires": [
            [
                "12c83b47b47a3869"
            ]
        ]
    },
    {
        "id": "48a59aa4.9ad814",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2290,
        "y": 2240,
        "wires": [
            [
                "ba01aae685f9e24c"
            ],
            [
                "073c5cb39ec48144"
            ],
            [
                "ae28f53c34d8b949"
            ]
        ]
    },
    {
        "id": "50e0d36efda01619",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "012ebb5641006b90"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1580,
        "y": 2240,
        "wires": [
            [
                "17f97360.c6ae7d",
                "48a59aa4.9ad814"
            ]
        ]
    },
    {
        "id": "54a50a843fd134bc",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "9d66e0f86e14f46d",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2810,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "555ce72ca0d7dfd4",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "",
        "links": [
            "02bb228b85db556d"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1580,
        "y": 4103,
        "wires": [
            [
                "9bf7f8737085ee59",
                "0fd2e5d226b547d5"
            ]
        ]
    },
    {
        "id": "55e2ca10e19a319e",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "OSsysDscr out",
        "mode": "return",
        "links": [],
        "x": 2295,
        "y": 5160,
        "wires": []
    },
    {
        "id": "56f89495c40f9077",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Reference to Submodels",
        "func": "let submodels = msg.payload;\nlet referenceSubmodels = [];\nfor(let index = 0; index < submodels.length; index++){\n    let submodel = submodels[index];\n    let referenceSubmodel = {};\n    referenceSubmodel.idShort = submodel.idShort;\n    referenceSubmodels.push(referenceSubmodel)\n}\n\nmsg.payload = referenceSubmodels;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "5b7cc2a7fed6a732",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\n\nlet filterNamespaceUrl = msg.req.url.replace(context.global.get('namespace'), \"\");\nlet filterAPIElements1Url = filterNamespaceUrl.replace(\"/aasServer/shells/\", \"\");\nlet filterAPIElements2Url = filterAPIElements1Url.replace(\"/aas/submodels\", \"\");\nlet filterAPIElements3Url = filterAPIElements2Url.replace(\"/submodel/submodel-elements\", \"\");\n\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"Output\";\nlogEvent.observableReference = decodeURIComponent(filterAPIElements3Url.trim());\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = msg.payload.value;\nif (typeof msg.payload.modelType.name != \"undefined\"){\n    if(msg.payload.modelType.name == \"Property\"){\n        msg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\";\n    } else if (msg.payload.modelType.name == \"File\"){\n        msg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, link) VALUES ($aasId, $observableRef, $timestamp, $link)\";\n    }\n} else {\n    if (msg.payload.modelType == \"Property\") {\n        msg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\";\n    } else if (msg.payload.modelType == \"File\") {\n        msg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, link) VALUES ($aasId, $observableRef, $timestamp, $link)\";\n    }\n}\nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 2640,
        "wires": [
            [
                "1cb938c7cc1ad367",
                "c21dc6455514a760"
            ]
        ]
    },
    {
        "id": "5c14e4cb.c5e47c",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 610,
        "y": 260,
        "wires": []
    },
    {
        "id": "5c80f7ac.2fc2b8",
        "type": "comment",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "Interaction with AAS - NBI",
        "info": "",
        "x": 530,
        "y": 4720,
        "wires": []
    },
    {
        "id": "5cea18b9856d1364",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "call Environmnent API",
        "links": [
            "fa81926752921ab7"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1360,
        "y": 4880,
        "wires": [
            [
                "e1994719bd7b4722"
            ]
        ]
    },
    {
        "id": "5d2f27b0b0ccaf5f",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "64e0e16be8a6705d"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1800,
        "y": 2380,
        "wires": [
            [
                "99d81682.e9c548",
                "2ec6555c.148e2a"
            ]
        ]
    },
    {
        "id": "5da4edd2.1f440c",
        "type": "file in",
        "z": "fd31082e.5487d8",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1070,
        "y": 40,
        "wires": [
            [
                "2ac4939d.2c7be4"
            ]
        ]
    },
    {
        "id": "5ee56f7a.9622a",
        "type": "comment",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "Interaction with AAS - SBI",
        "info": "",
        "x": 410,
        "y": 3820,
        "wires": []
    },
    {
        "id": "6860b43e.8de27c",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2290,
        "y": 2080,
        "wires": [
            [
                "1281e76885f53779"
            ],
            [
                "75db78a50e982c7f"
            ],
            [
                "11e91e4d13917d49"
            ]
        ]
    },
    {
        "id": "687c3d5c.dfc7ac",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1610,
        "y": 1640,
        "wires": []
    },
    {
        "id": "6c10cd375f817bbf",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "callNBI",
        "links": [
            "99b95b4d975cf063"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1400,
        "y": 4800,
        "wires": [
            [
                "1f1ce2c5.9cb5cd"
            ]
        ]
    },
    {
        "id": "6d5e23d932baeb73",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "get Events",
        "func": "var outputMsgs = [];\nlet events = msg.payload.trim().split(\"\\n\");\nfor (var e in events) {\n    outputMsgs.push({ payload: events[e] });\n}\nreturn [outputMsgs];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 5380,
        "wires": [
            [
                "066181d359f943c7"
            ]
        ]
    },
    {
        "id": "6d654b80.b160d4",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1950,
        "y": 2900,
        "wires": []
    },
    {
        "id": "6f112bdc74f41506",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Not Understood\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 3160,
        "wires": [
            [
                "25c82957d4908ecd",
                "c66f414caacb7728"
            ]
        ]
    },
    {
        "id": "6f1b8422.f0673c",
        "type": "inject",
        "z": "fd31082e.5487d8",
        "name": "Test",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1150,
        "y": 5140,
        "wires": [
            [
                "3319bd2e.c8291a"
            ]
        ]
    },
    {
        "id": "6fc59e78e64564b0",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 5300,
        "wires": []
    },
    {
        "id": "70cd80e0.d38d9",
        "type": "comment",
        "z": "fd31082e.5487d8",
        "name": "AAS Rosource Monitoring - Component Manger",
        "info": "",
        "x": 600,
        "y": 5060,
        "wires": []
    },
    {
        "id": "713f7fd4.702168",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 5140,
        "wires": []
    },
    {
        "id": "719ba18e034b2b15",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + splittedUrl[splittedUrl.length - 1];\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 1100,
        "wires": [
            [
                "edecbc60fa8a5d1b"
            ]
        ]
    },
    {
        "id": "72079a3a.bbba24",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2230,
        "y": 2780,
        "wires": [
            [
                "37fcc0b35cbd4d52"
            ],
            [
                "cd604b6de47cc155"
            ],
            [
                "adf27afba7c3b724"
            ]
        ]
    },
    {
        "id": "73a5f11defe17fa4",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "6b5b20832e62c73e",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2810,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "7540b688d1ccfbd8",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "req.query.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Normal",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "eq",
                "v": "Trimmed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reference",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 1690,
        "y": 1140,
        "wires": [
            [
                "bf8d1775bedc9126"
            ],
            [
                "bf8d1775bedc9126"
            ],
            [
                "87bce6429de98178"
            ],
            [
                "2d2b37ca7cbfdbc1"
            ],
            [
                "76be2c591d65fa6f"
            ]
        ]
    },
    {
        "id": "764d3739e6d35d5f",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Not yet Supported",
        "func": "msg.payload = \"Not yet Supported\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 1540,
        "wires": [
            [
                "32e4c48636bc81e8"
            ]
        ]
    },
    {
        "id": "76be2c591d65fa6f",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Bad Request",
        "func": "msg.statusCode = 400;\nmsg.payload = \"Bad Request\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1240,
        "wires": [
            [
                "23066dfe8897d9f0",
                "8718e94fc2a94024"
            ]
        ]
    },
    {
        "id": "77f5c1549ab2c139",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "f5cc371119932661"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1580,
        "y": 2080,
        "wires": [
            [
                "1aa365b1.9f918a",
                "6860b43e.8de27c"
            ]
        ]
    },
    {
        "id": "78bce801dbd0b712",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "create/set msg.value",
        "func": "msg.value = JSON.stringify(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 3100,
        "wires": [
            [
                "58e1d3a03aaff442"
            ]
        ]
    },
    {
        "id": "7b48ced64946a8d2",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "updateValueCallbackIn",
        "links": [
            "1fc06f6a8f3492b8"
        ],
        "x": 235,
        "y": 4880,
        "wires": [
            [
                "893f967b73205095",
                "4872c068f48e839b"
            ]
        ]
    },
    {
        "id": "7bde976648a4afdd",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Not Understood\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 2140,
        "wires": [
            [
                "58f1d079e314e4bf",
                "f036bd1758dbe662"
            ]
        ]
    },
    {
        "id": "7eb44e78bedd8a62",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "Content-Type",
        "property": "req.headers['content-type']",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "application/json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1540,
        "y": 2740,
        "wires": [
            [
                "f85ea28088816063"
            ],
            [
                "e77527a3f32835b3"
            ]
        ]
    },
    {
        "id": "81714045.0e50c8",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1570,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8188be80.74de4",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1930,
        "y": 2600,
        "wires": []
    },
    {
        "id": "8463fbcf17bbb837",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "2e0bc58c812ae978"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1420,
        "y": 1460,
        "wires": [
            [
                "e22aaf22.a1f3e",
                "d57f58bc77ffcb8b"
            ]
        ]
    },
    {
        "id": "85c75f263483de4b",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "OSsysDscr in",
        "links": [],
        "x": 235,
        "y": 5160,
        "wires": [
            [
                "3319bd2e.c8291a"
            ]
        ]
    },
    {
        "id": "87bce6429de98178",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Trimmed Shells",
        "func": "let shell = msg.payload;\nlet trimmedShell = {};\ntrimmedShell.hasDataSpecification = shell.hasDataSpecification;\ntrimmedShell.derivedFrom = shell.derivedFrom;\ntrimmedShell.conceptDictionaries = shell.conceptDictionaries;\ntrimmedShell.identification = shell.identification;\ntrimmedShell.administration = shell.administration;\ntrimmedShell.idShort = shell.idShort;\ntrimmedShell.modelType = shell.modelType;\n\nmsg.payload = trimmedShell;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 1160,
        "wires": [
            [
                "0cf42e9cc5365c9d"
            ]
        ]
    },
    {
        "id": "87cc8612fd2fa954",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + splittedUrl[splittedUrl.length - 1];\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 960,
        "wires": [
            [
                "2f60b1f4e43f787e"
            ]
        ]
    },
    {
        "id": "893f967b73205095",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 450,
        "y": 4837,
        "wires": []
    },
    {
        "id": "8b1e3aa95510afc2",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "req.query.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Normal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Value",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1770,
        "y": 3060,
        "wires": [
            [
                "453f0cb1b9eca32d"
            ],
            [
                "78bce801dbd0b712"
            ]
        ]
    },
    {
        "id": "92440de2.fa50f8",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 4480,
        "wires": []
    },
    {
        "id": "9454af3.ef43f5",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 4520,
        "wires": [
            [
                "389ecac2.32281e"
            ]
        ]
    },
    {
        "id": "998fa797027224c5",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "a4706f79574c7b6e",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2790,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "99d81682.e9c548",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1970,
        "y": 2340,
        "wires": []
    },
    {
        "id": "9b03ef7402cc280e",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "40913d2d8a161a11"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1440,
        "y": 1140,
        "wires": [
            [
                "81714045.0e50c8",
                "7540b688d1ccfbd8"
            ]
        ]
    },
    {
        "id": "9d65de1d1f516130",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 5460,
        "wires": []
    },
    {
        "id": "9ebcd6beaf9c5e5a",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 1540,
        "wires": [
            [
                "998fa797027224c5"
            ]
        ]
    },
    {
        "id": "9f810b8b.7a1b8",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 4220,
        "wires": []
    },
    {
        "id": "a19fe280a1be4f25",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "mode": "link",
        "links": [
            "0aef361690b6ac29",
            "dd10449ed2f83a93"
        ],
        "x": 2820,
        "y": 3180,
        "wires": [],
        "l": true
    },
    {
        "id": "a26f2e9e.3d0a3",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 20,
        "wires": []
    },
    {
        "id": "a767bb2ac4ab46a1",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "cfe951f06c55831e"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1440,
        "y": 800,
        "wires": [
            [
                "7df105e40cb21de8"
            ]
        ]
    },
    {
        "id": "a7bba83c.5d8f08",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2630,
        "y": 3100,
        "wires": [
            [
                "90cc6987971961f3"
            ],
            [
                "5da025a91711d02e"
            ],
            [
                "a19fe280a1be4f25"
            ]
        ]
    },
    {
        "id": "a9c22279a032d681",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 710,
        "y": 4837,
        "wires": []
    },
    {
        "id": "a9f85b8570718f9c",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2250,
        "y": 1180,
        "wires": [
            [
                "dec8df6e38fd3b12"
            ],
            [
                "523406b86b453377"
            ],
            [
                "f7e895b5e00d052c"
            ]
        ]
    },
    {
        "id": "adf27afba7c3b724",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "mode": "link",
        "links": [
            "0aef361690b6ac29",
            "dd10449ed2f83a93"
        ],
        "x": 2460,
        "y": 2820,
        "wires": [],
        "l": true
    },
    {
        "id": "ae1b12ed8743afcb",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 1760,
        "wires": [
            [
                "73a5f11defe17fa4"
            ]
        ]
    },
    {
        "id": "ae1b6bc.0e50598",
        "type": "addflow",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "x": 2120,
        "y": 420,
        "wires": [
            [
                "c5b5c618.111a08"
            ]
        ]
    },
    {
        "id": "ae28f53c34d8b949",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "mode": "link",
        "links": [
            "0aef361690b6ac29",
            "dd10449ed2f83a93"
        ],
        "x": 2520,
        "y": 2280,
        "wires": [],
        "l": true
    },
    {
        "id": "afe5646656054e6b",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "process Log",
        "func": "let lastAuditLog = context.flow.get(\"lastAuditLog\");\nif(typeof lastAuditLog == \"undefined\"){\n    context.flow.set(\"lastAuditLog\", msg.payload);\n    return msg;\n} else {\n    if(lastAuditLog.event.timestamp != msg.payload.event.timestamp){\n        context.flow.set(\"lastAuditLog\", msg.payload);\n        return msg;\n    } else return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 5380,
        "wires": [
            [
                "d3f01c41c9a534a7",
                "2fd0332425941bca"
            ]
        ]
    },
    {
        "id": "b2811a59a9c3a985",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "mode": "link",
        "links": [
            "0aef361690b6ac29",
            "dd10449ed2f83a93"
        ],
        "x": 2520,
        "y": 2440,
        "wires": [],
        "l": true
    },
    {
        "id": "b552652f.7d8388",
        "type": "file in",
        "z": "fd31082e.5487d8",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1070,
        "y": 100,
        "wires": [
            [
                "f98581a.2ae798"
            ]
        ]
    },
    {
        "id": "b631ea1ebc90bca5",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "f8e2cdcf35feb9b2"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1420,
        "y": 220,
        "wires": [
            [
                "c6c88b8651fc6ecf"
            ]
        ]
    },
    {
        "id": "b677c31c1533e1c7",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "e5e3e5e6456ee35c"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1440,
        "y": 900,
        "wires": [
            [
                "027d051c81f07494"
            ]
        ]
    },
    {
        "id": "b88a92c6.fb547",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "NOVAAS_status_UI_out",
        "mode": "link",
        "links": [],
        "x": 2955,
        "y": 4280,
        "wires": []
    },
    {
        "id": "bab93b53cbb3d116",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "53bc4f2d72d3363a"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1440,
        "y": 1680,
        "wires": [
            [
                "687c3d5c.dfc7ac",
                "1b23f529d28b3c8d"
            ]
        ]
    },
    {
        "id": "bb0a33346d86364c",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2260,
        "y": 5340,
        "wires": []
    },
    {
        "id": "bca57c0d33d1ffab",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Not Understood\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 2440,
        "wires": [
            [
                "d1a776b68705106a",
                "6d62e262547d05b6"
            ]
        ]
    },
    {
        "id": "c1c22f4c94942222",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Not yet Supported",
        "func": "msg.payload = \"Not yet Supported\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 1920,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "c21dc6455514a760",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2770,
        "y": 2700,
        "wires": []
    },
    {
        "id": "c489082841bfdcae",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": false,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 850,
        "y": 540,
        "wires": [
            [
                "facb362b.6dd0b"
            ],
            [
                "6b25201afcb2d8ae"
            ]
        ]
    },
    {
        "id": "c5b5c618.111a08",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2290,
        "y": 420,
        "wires": []
    },
    {
        "id": "c5fc62ee99b0c1e2",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "links": [],
        "x": 2300,
        "y": 2980,
        "wires": [],
        "l": true
    },
    {
        "id": "c6c88b8651fc6ecf",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "name": "NOVAAS_informChange_UI",
        "links": [],
        "x": 2620,
        "y": 220,
        "wires": [],
        "l": true
    },
    {
        "id": "c7097b80.b03428",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 750,
        "y": 4780,
        "wires": []
    },
    {
        "id": "c9de3df7.c99ee",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "name": "1_In",
        "links": [
            "1686c59a.31af6a"
        ],
        "x": 235,
        "y": 220,
        "wires": [
            [
                "5c14e4cb.c5e47c",
                "f7c24c8dca81cb2c"
            ]
        ]
    },
    {
        "id": "cc11aad75f06e46f",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "2fc9f75cb156754d"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1440,
        "y": 1020,
        "wires": [
            [
                "f7372cb457f5e7df"
            ]
        ]
    },
    {
        "id": "ce3d1cd7dad67519",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2310,
        "y": 1840,
        "wires": [
            [
                "5b45172dae2d9e8f"
            ],
            [
                "3c5d7a0764f73104"
            ],
            [
                "eb97e9b51c933569"
            ]
        ]
    },
    {
        "id": "ce89582d.5a4aa8",
        "type": "inject",
        "z": "fd31082e.5487d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 40,
        "wires": [
            [
                "3a90a3d23c1b5aa2"
            ]
        ]
    },
    {
        "id": "d3f01c41c9a534a7",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2020,
        "y": 5340,
        "wires": []
    },
    {
        "id": "d57f58bc77ffcb8b",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "req.query.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Normal",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "eq",
                "v": "Trimmed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reference",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Value",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 1690,
        "y": 1460,
        "wires": [
            [
                "4f66f53de68a468a"
            ],
            [
                "4f66f53de68a468a"
            ],
            [
                "da901f7ac6c9bcfb"
            ],
            [
                "56f89495c40f9077"
            ],
            [
                "764d3739e6d35d5f"
            ],
            [
                "406069fe371c496c"
            ]
        ]
    },
    {
        "id": "d7f84005.ce11e8",
        "type": "link in",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "status_SBI_In",
        "links": [
            "796fdeb5.8f68b8"
        ],
        "x": 265,
        "y": 4260,
        "wires": [
            [
                "1de8d122c13a3233"
            ]
        ]
    },
    {
        "id": "d9cf551c464c4337",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "Content-Type",
        "property": "req.headers['content-type']",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "application/json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1560,
        "y": 3100,
        "wires": [
            [
                "8b1e3aa95510afc2"
            ],
            [
                "6f112bdc74f41506"
            ]
        ]
    },
    {
        "id": "da901f7ac6c9bcfb",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Trimmed Submodels",
        "func": "let submodels = msg.payload;\nlet trimmedSubmodels = [];\nfor(let index = 0; index < submodels.length; index++){\n    let submodel = submodels[index];\n    let trimmedSubmodel = {};\n    trimmedSubmodel.semanticId = submodel.semanticId;\n    trimmedSubmodel.qualifiers = submodel.qualifiers;\n    trimmedSubmodel.hasDataSpecification = submodel.hasDataSpecification;\n    trimmedSubmodel.identification = submodel.identification;\n    trimmedSubmodel.idShort = submodel.idShort;\n    trimmedSubmodel.modelType = submodel.modelType;\n    trimmedSubmodels.push(trimmedSubmodel);\n}\n\nmsg.payload = trimmedSubmodels;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 1460,
        "wires": [
            [
                "32e4c48636bc81e8"
            ]
        ]
    },
    {
        "id": "de98fa9db5e7edf4",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "req.query.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Normal",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "eq",
                "v": "Trimmed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reference",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Value",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 1730,
        "y": 1840,
        "wires": [
            [
                "d2fa44933ad7f7bc"
            ],
            [
                "d2fa44933ad7f7bc"
            ],
            [
                "e28fcc33c52a273f"
            ],
            [
                "eaf8e273f0c5a16d"
            ],
            [
                "c1c22f4c94942222"
            ],
            [
                "078534f3f21e5749"
            ]
        ]
    },
    {
        "id": "e1994719bd7b4722",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2370,
        "y": 4877,
        "wires": []
    },
    {
        "id": "e22aaf22.a1f3e",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1590,
        "y": 1400,
        "wires": []
    },
    {
        "id": "e28fcc33c52a273f",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Trimmed Submodel",
        "func": "let submodel = msg.payload;\nlet trimmedSubmodel = {};\n\ntrimmedSubmodel.semanticId = submodel.semanticId;\ntrimmedSubmodel.qualifiers = submodel.qualifiers;\ntrimmedSubmodel.hasDataSpecification = submodel.hasDataSpecification;\ntrimmedSubmodel.identification = submodel.identification;\ntrimmedSubmodel.idShort = submodel.idShort;\ntrimmedSubmodel.modelType = submodel.modelType;\n\nmsg.payload = trimmedSubmodel;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 1840,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "e43904b134cd7e13",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2250,
        "y": 1460,
        "wires": [
            [
                "abbbf3a9ddafbe19"
            ],
            [
                "efe0f35a831242d2"
            ],
            [
                "9ebcd6beaf9c5e5a"
            ]
        ]
    },
    {
        "id": "e77527a3f32835b3",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Not Understood\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1800,
        "y": 2780,
        "wires": [
            [
                "507ea4091587c163",
                "b67a58699a71a739"
            ]
        ]
    },
    {
        "id": "eaf8e273f0c5a16d",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Creating Reference to Submodel",
        "func": "let submodel = msg.payload;\nlet referenceSubmodel = {};\nreferenceSubmodel.idShort = submodel.idShort;\n    \nmsg.payload = referenceSubmodel;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 1880,
        "wires": [
            [
                "273b7e8259322a05"
            ]
        ]
    },
    {
        "id": "eb97e9b51c933569",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 1940,
        "wires": [
            [
                "54a50a843fd134bc"
            ]
        ]
    },
    {
        "id": "ed752512.71a7e",
        "type": "delflow",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "enabled": true,
        "x": 2120,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "edecbc60fa8a5d1b",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2770,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "ef027ffb4cdf7faa",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "fa81926752921ab7"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2360,
        "y": 3100,
        "wires": [
            [
                "a7bba83c.5d8f08"
            ]
        ]
    },
    {
        "id": "ef4743b2.ec1a6",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2050,
        "y": 2940,
        "wires": [
            [
                "370f7852618bf9c2"
            ],
            [
                "3eccd439339dbeb3"
            ],
            [
                "c5fc62ee99b0c1e2"
            ]
        ]
    },
    {
        "id": "f7372cb457f5e7df",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2250,
        "y": 1020,
        "wires": [
            [
                "54e82a6022edda76"
            ],
            [
                "a61a251c0783dad8"
            ],
            [
                "719ba18e034b2b15"
            ]
        ]
    },
    {
        "id": "f822f55e.4e556",
        "type": "json",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1710,
        "y": 400,
        "wires": [
            [
                "e19fcb6bfe4abba9"
            ]
        ]
    },
    {
        "id": "f823dc7f6b29ac78",
        "type": "exec",
        "z": "fd31082e.5487d8",
        "command": "tail -f ./logfile.txt",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 960,
        "y": 5400,
        "wires": [
            [
                "6fc59e78e64564b0",
                "6d5e23d932baeb73"
            ],
            [
                "9d65de1d1f516130"
            ],
            []
        ]
    },
    {
        "id": "f98581a.2ae798",
        "type": "xml",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1210,
        "y": 100,
        "wires": [
            [
                "a64502373196e6b8"
            ]
        ]
    },
    {
        "id": "facb362b.6dd0b",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "IF_Manifest_File_Metadata",
        "property": "req.files.driver",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1100,
        "y": 460,
        "wires": [
            [
                "2c314cfc2cf2d5e4"
            ],
            [
                "cbeff4782cad4fc0"
            ]
        ]
    },
    {
        "id": "fc0a9d8e.12c52",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1550,
        "y": 380,
        "wires": []
    },
    {
        "id": "a4b5d95301a58750",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "createEnv in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 220,
        "wires": [
            [
                "b631ea1ebc90bca5"
            ]
        ]
    },
    {
        "id": "dd48130be0a94405",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "persistEnv in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 680,
        "wires": [
            [
                "48745191cfba1eda"
            ]
        ]
    },
    {
        "id": "a7977fac7c8d3237",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "readEnv in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 800,
        "wires": [
            [
                "a767bb2ac4ab46a1"
            ]
        ]
    },
    {
        "id": "8f4c9dca16efc2f3",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "readShells in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 900,
        "wires": [
            [
                "b677c31c1533e1c7"
            ]
        ]
    },
    {
        "id": "c4d6e4aeb633a478",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "readAssets in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1020,
        "wires": [
            [
                "cc11aad75f06e46f"
            ]
        ]
    },
    {
        "id": "21f31d100d2a67a8",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "readAas in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1140,
        "wires": [
            [
                "9b03ef7402cc280e"
            ]
        ]
    },
    {
        "id": "42f15d079c7f1935",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "readSubmodels in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1460,
        "wires": [
            [
                "8463fbcf17bbb837"
            ]
        ]
    },
    {
        "id": "b2905e0f704c3927",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "readAasSubmodels in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1680,
        "wires": [
            [
                "bab93b53cbb3d116"
            ]
        ]
    },
    {
        "id": "6e85a29a582046fb",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "readSubmodel in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1840,
        "wires": [
            [
                "1c4b441450fae9ce"
            ]
        ]
    },
    {
        "id": "109adee663dace7d",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "addSubmodel in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 2080,
        "wires": [
            [
                "77f5c1549ab2c139"
            ]
        ]
    },
    {
        "id": "d72ddc5a88547903",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "updateSubmodel in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 2380,
        "wires": [
            [
                "5d2f27b0b0ccaf5f"
            ]
        ]
    },
    {
        "id": "9d35035c1a45a17c",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "readSubmodelElement in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 2560,
        "wires": [
            [
                "0277e205fc7c4018"
            ]
        ]
    },
    {
        "id": "f85ea28088816063",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "addSubmodelElement in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 2740,
        "wires": [
            [
                "1d0d971feff52be8"
            ]
        ]
    },
    {
        "id": "235980676af940fd",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "removeSubmodelElement in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 2940,
        "wires": [
            [
                "3186cf8ea5b9e507"
            ]
        ]
    },
    {
        "id": "453f0cb1b9eca32d",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "updateSubmodelElementNormal In",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 3060,
        "wires": [
            [
                "30a79f0e8c4f4c44"
            ]
        ]
    },
    {
        "id": "58e1d3a03aaff442",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "updateSubmodelElementValue in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 3100,
        "wires": [
            [
                "ef027ffb4cdf7faa"
            ]
        ]
    },
    {
        "id": "1de8d122c13a3233",
        "type": "change",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "readEnv in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 4260,
        "wires": [
            [
                "21eb2aa8ef422845"
            ]
        ]
    },
    {
        "id": "1f13de33c71277ce",
        "type": "change",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "callNBI in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 4800,
        "wires": [
            [
                "6c10cd375f817bbf"
            ]
        ]
    },
    {
        "id": "45cb0777f0f43a5d",
        "type": "change",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "updateSubmodelElementValue in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 4880,
        "wires": [
            [
                "5cea18b9856d1364"
            ]
        ]
    },
    {
        "id": "199179b4652e7871",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "removeSubmodel in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 2240,
        "wires": [
            [
                "50e0d36efda01619"
            ]
        ]
    },
    {
        "id": "7399afe28fd2b3e3",
        "type": "httpInMultipart",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "url": "/aasServer/conf/addDriver",
        "method": "post",
        "fields": "[{\"name\": \"driver\"}]",
        "swaggerDoc": "",
        "x": 390,
        "y": 540,
        "wires": [
            [
                "0d8d61717cfd4c03"
            ]
        ]
    },
    {
        "id": "258a1a12d86a4632",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "url": "/aasServer/conf/importDriver",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 390,
        "y": 380,
        "wires": [
            [
                "3aa49896be203ca6"
            ]
        ]
    },
    {
        "id": "e3c6e6cad62c67a3",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 840,
        "y": 380,
        "wires": []
    },
    {
        "id": "a23e7b2b7d892ce8",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 820,
        "y": 420,
        "wires": []
    },
    {
        "id": "3aa49896be203ca6",
        "type": "template",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\n        <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\" integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\" integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\" crossorigin=\"anonymous\"></script>\n    </head>\n    <div>\n        <form action=\"/aas/conf/addDriver\" method=\"POST\" enctype=\"multipart/form-data\">\n        \t<!-- COMPONENT START -->\n        \t<div class=\"form-group\">\n        \t\t<div class=\"input-group input-file\" name=\"driver\">\n            \t\t<input type=\"text\" class=\"form-control\" placeholder='Choose a file...' />\t\t\t\n                    <span class=\"input-group-btn\">\n                \t\t<button class=\"btn btn-default btn-choose\" type=\"button\">Choose</button>\n            \t\t</span>\n        \n        \n        \t\t</div>\n        \t</div>\n        \t<!-- COMPONENT END -->\n        \t<div class=\"form-group\">\n        \t\t<button type=\"submit\" class=\"btn btn-primary pull-right\">Submit</button>\n        \t\t<button type=\"reset\" class=\"btn btn-danger\">Reset</button>\n        \t</div>\n        </form>\n    </div>\n    <script>\n        function bs_input_file() {\n\t$(\".input-file\").before(\n\t\tfunction() {\n\t\t\tif ( ! $(this).prev().hasClass('input-ghost') ) {\n\t\t\t\tvar element = $(\"<input type='file' class='input-ghost' style='visibility:hidden; height:0'>\");\n\t\t\t\telement.attr(\"name\",$(this).attr(\"name\"));\n\t\t\t\telement.change(function(){\n\t\t\t\t\telement.next(element).find('input').val((element.val()).split('\\\\').pop());\n\t\t\t\t});\n\t\t\t\t$(this).find(\"button.btn-choose\").click(function(){\n\t\t\t\t\telement.click();\n\t\t\t\t});\n\t\t\t\t$(this).find(\"button.btn-reset\").click(function(){\n\t\t\t\t\telement.val(null);\n\t\t\t\t\t$(this).parents(\".input-file\").find('input').val('');\n\t\t\t\t});\n\t\t\t\t$(this).find('input').css(\"cursor\",\"pointer\");\n\t\t\t\t$(this).find('input').mousedown(function() {\n\t\t\t\t\t$(this).parents('.input-file').prev().click();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\t);\n}\n$(function() {\n\tbs_input_file();\n});\n    </script>\n</html>",
        "output": "str",
        "x": 680,
        "y": 380,
        "wires": [
            [
                "e3c6e6cad62c67a3",
                "a23e7b2b7d892ce8"
            ]
        ]
    },
    {
        "id": "0d8d61717cfd4c03",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 670,
        "y": 540,
        "wires": [
            [
                "c489082841bfdcae"
            ]
        ]
    },
    {
        "id": "b9df8432b067da9e",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 520,
        "wires": []
    },
    {
        "id": "bfb79cdf88b1c91b",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "env": [],
        "x": 2930,
        "y": 560,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "6b25201afcb2d8ae",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2070,
        "y": 540,
        "wires": [
            [
                "b9df8432b067da9e"
            ],
            [
                "bfb79cdf88b1c91b"
            ]
        ]
    },
    {
        "id": "ac871041ab16a8b3",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "aasServer/env/persist",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 380,
        "y": 680,
        "wires": [
            [
                "e70dd120e605c925",
                "c075200ff34423aa"
            ]
        ]
    },
    {
        "id": "b444eba86174c70f",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 680,
        "wires": []
    },
    {
        "id": "e70dd120e605c925",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 590,
        "y": 720,
        "wires": []
    },
    {
        "id": "c075200ff34423aa",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 610,
        "y": 680,
        "wires": [
            [
                "dd48130be0a94405"
            ]
        ]
    },
    {
        "id": "a782b2cce8074cb5",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2930,
        "y": 720,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "08a85b58dfb0a04c",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 800,
        "wires": []
    },
    {
        "id": "ee26bc8dade65e62",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "aasServer/env",
        "method": "get",
        "upload": false,
        "swaggerDoc": "a219352d4ef265ea",
        "x": 350,
        "y": 800,
        "wires": [
            [
                "a51d8ea290b5c35e",
                "5e42d845045b4683"
            ]
        ]
    },
    {
        "id": "a51d8ea290b5c35e",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 610,
        "y": 800,
        "wires": [
            [
                "a7977fac7c8d3237"
            ]
        ]
    },
    {
        "id": "45773423cd9e78d0",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 2930,
        "y": 840,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "5e42d845045b4683",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 590,
        "y": 840,
        "wires": []
    },
    {
        "id": "1b5c538e8bcdc807",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "aasServer/shells",
        "method": "get",
        "upload": false,
        "swaggerDoc": "f5b23bfc8fda48c4",
        "x": 360,
        "y": 900,
        "wires": [
            [
                "69c7cb4fd26a55c9",
                "4b2cb532965dce8b"
            ]
        ]
    },
    {
        "id": "69c7cb4fd26a55c9",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 610,
        "y": 900,
        "wires": [
            [
                "8f4c9dca16efc2f3"
            ]
        ]
    },
    {
        "id": "4b2cb532965dce8b",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 590,
        "y": 940,
        "wires": []
    },
    {
        "id": "f9d652e6d25c6d69",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 2930,
        "y": 940,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "65f19aae35bacbf8",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 900,
        "wires": []
    },
    {
        "id": "6ba7ea9574e81732",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/asset-information",
        "method": "get",
        "upload": false,
        "swaggerDoc": "d001c392a5d760ab",
        "x": 450,
        "y": 1020,
        "wires": [
            [
                "2ddd58725d2cfe6d",
                "7090b18b40709e19"
            ]
        ]
    },
    {
        "id": "54e82a6022edda76",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2ddd58725d2cfe6d",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 770,
        "y": 1020,
        "wires": [
            [
                "0fac9256d443d4bd"
            ]
        ]
    },
    {
        "id": "a61a251c0783dad8",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2930,
        "y": 1060,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "7090b18b40709e19",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 770,
        "y": 1060,
        "wires": []
    },
    {
        "id": "805554f3024f154a",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas",
        "method": "get",
        "upload": false,
        "swaggerDoc": "d402a031398f76da",
        "x": 390,
        "y": 1140,
        "wires": [
            [
                "447f490ffd730ca4",
                "c1cf70c2fc538318"
            ]
        ]
    },
    {
        "id": "c1cf70c2fc538318",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 590,
        "y": 1200,
        "wires": []
    },
    {
        "id": "447f490ffd730ca4",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 610,
        "y": 1140,
        "wires": [
            [
                "b6bd0b4b46a4a1d1"
            ]
        ]
    },
    {
        "id": "523406b86b453377",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2930,
        "y": 1220,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "dec8df6e38fd3b12",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 1180,
        "wires": []
    },
    {
        "id": "8718e94fc2a94024",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2070,
        "y": 1280,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "23066dfe8897d9f0",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 2060,
        "y": 1240,
        "wires": []
    },
    {
        "id": "a3110e015a350d41",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/submodels",
        "method": "get",
        "upload": false,
        "swaggerDoc": "347a264784675542",
        "x": 400,
        "y": 1460,
        "wires": [
            [
                "aff23a4815ca75a2",
                "5b7b765bb8b822de"
            ]
        ]
    },
    {
        "id": "abbbf3a9ddafbe19",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 1460,
        "wires": []
    },
    {
        "id": "aff23a4815ca75a2",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 650,
        "y": 1420,
        "wires": []
    },
    {
        "id": "5b7b765bb8b822de",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 670,
        "y": 1460,
        "wires": [
            [
                "42f15d079c7f1935"
            ]
        ]
    },
    {
        "id": "efe0f35a831242d2",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2930,
        "y": 1500,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "bb97788c09205729",
        "type": "comment",
        "z": "fd31082e.5487d8",
        "name": "External Interface - Data - Operations on Submodels",
        "info": "",
        "x": 503,
        "y": 1377,
        "wires": []
    },
    {
        "id": "2a8c09c2e42f9a81",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2070,
        "y": 1620,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "8a5e354e09969495",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 2060,
        "y": 1580,
        "wires": []
    },
    {
        "id": "904ce554d674126a",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 730,
        "y": 1680,
        "wires": [
            [
                "6abd645a8e27ab81"
            ]
        ]
    },
    {
        "id": "e400dd58126e100c",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels",
        "method": "get",
        "upload": false,
        "swaggerDoc": "1f032284ac2721dc",
        "x": 450,
        "y": 1680,
        "wires": [
            [
                "63877d919da2b9bf",
                "904ce554d674126a"
            ]
        ]
    },
    {
        "id": "a05e9f5249fae9c3",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2950,
        "y": 1720,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "52f51d38e3ef5015",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 1680,
        "wires": []
    },
    {
        "id": "63877d919da2b9bf",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 743,
        "y": 1640,
        "wires": []
    },
    {
        "id": "6d1df10f2706c285",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id/submodel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "47af7c7683eb6826",
        "x": 483,
        "y": 1840,
        "wires": [
            [
                "d8490007d0de4198",
                "7cbb13d3dac3d7ce"
            ]
        ]
    },
    {
        "id": "5b45172dae2d9e8f",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 1840,
        "wires": []
    },
    {
        "id": "d8490007d0de4198",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 803,
        "y": 1800,
        "wires": []
    },
    {
        "id": "3c5d7a0764f73104",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 2930,
        "y": 1880,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "7cbb13d3dac3d7ce",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 790,
        "y": 1840,
        "wires": [
            [
                "35ce011348a775ac"
            ]
        ]
    },
    {
        "id": "a970a462ade9df64",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2110,
        "y": 2000,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "80653382a9ddfc1a",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 2100,
        "y": 1960,
        "wires": []
    },
    {
        "id": "1281e76885f53779",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 2080,
        "wires": []
    },
    {
        "id": "0c5d9a13a607b227",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 710,
        "y": 2080,
        "wires": [
            [
                "b8933cf5f65c1782"
            ]
        ]
    },
    {
        "id": "75db78a50e982c7f",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 2930,
        "y": 2120,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "534f66db2ff7eb4c",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 430,
        "y": 2080,
        "wires": [
            [
                "20f12e41ddad7d07",
                "0c5d9a13a607b227"
            ]
        ]
    },
    {
        "id": "20f12e41ddad7d07",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 710,
        "y": 2040,
        "wires": []
    },
    {
        "id": "f3a17257f04735f9",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id/submodel",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 470,
        "y": 2380,
        "wires": [
            [
                "948b4322948abd99",
                "7b9cc6a14544f2da"
            ]
        ]
    },
    {
        "id": "948b4322948abd99",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 750,
        "y": 2420,
        "wires": []
    },
    {
        "id": "7b9cc6a14544f2da",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 790,
        "y": 2380,
        "wires": [
            [
                "2ad5fcbf9b88bef5"
            ]
        ]
    },
    {
        "id": "dcf9acf8a851dece",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 2380,
        "wires": []
    },
    {
        "id": "bff3406b3b7d4081",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 2930,
        "y": 2420,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "c8a4e3d69fa868df",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:id/submodel",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 480,
        "y": 2240,
        "wires": [
            [
                "aa15bcac67538776",
                "b659a8629af10efa"
            ]
        ]
    },
    {
        "id": "ba01aae685f9e24c",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 2240,
        "wires": []
    },
    {
        "id": "aa15bcac67538776",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 790,
        "y": 2200,
        "wires": []
    },
    {
        "id": "073c5cb39ec48144",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 2930,
        "y": 2280,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "b659a8629af10efa",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 810,
        "y": 2240,
        "wires": [
            [
                "dd7a8dc3b33a4154"
            ]
        ]
    },
    {
        "id": "aea4c479c5a2021b",
        "type": "comment",
        "z": "fd31082e.5487d8",
        "name": "External Interface - Data - Operations on Properties",
        "info": "",
        "x": 410,
        "y": 2500,
        "wires": []
    },
    {
        "id": "59188714eeb17c44",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 580,
        "y": 2560,
        "wires": [
            [
                "9fd648d8e4b6cd4f",
                "f9b92d5c9e3da851"
            ]
        ]
    },
    {
        "id": "3f85246d7bfcbbe4",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 2560,
        "wires": []
    },
    {
        "id": "9fd648d8e4b6cd4f",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1030,
        "y": 2600,
        "wires": []
    },
    {
        "id": "f9b92d5c9e3da851",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1030,
        "y": 2560,
        "wires": [
            [
                "18de1a54dc74ec6d"
            ]
        ]
    },
    {
        "id": "66f6f4417e352d20",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 2930,
        "y": 2600,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "c88ea963aabb17e6",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 580,
        "y": 2740,
        "wires": [
            [
                "958818da42f7ba09",
                "4e288f86f73248f6"
            ]
        ]
    },
    {
        "id": "37fcc0b35cbd4d52",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2950,
        "y": 2780,
        "wires": []
    },
    {
        "id": "958818da42f7ba09",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 970,
        "y": 2700,
        "wires": []
    },
    {
        "id": "4e288f86f73248f6",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1010,
        "y": 2740,
        "wires": [
            [
                "881e744c9a36ef73"
            ]
        ]
    },
    {
        "id": "cd604b6de47cc155",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2920,
        "y": 2820,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "93b083ce57e25eca",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 580,
        "y": 3100,
        "wires": [
            [
                "9ae378864803899d",
                "483cf9c1244d0afa"
            ]
        ]
    },
    {
        "id": "483cf9c1244d0afa",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1030,
        "y": 3100,
        "wires": [
            [
                "85a0dadb6caa8dd4"
            ]
        ]
    },
    {
        "id": "9ae378864803899d",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1030,
        "y": 3060,
        "wires": []
    },
    {
        "id": "5da025a91711d02e",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 2910,
        "y": 3140,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "90cc6987971961f3",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2930,
        "y": 3100,
        "wires": []
    },
    {
        "id": "25c82957d4908ecd",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 2220,
        "y": 3160,
        "wires": []
    },
    {
        "id": "c66f414caacb7728",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2230,
        "y": 3200,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "507ea4091587c163",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 2000,
        "y": 2780,
        "wires": []
    },
    {
        "id": "b67a58699a71a739",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2010,
        "y": 2820,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "d1a776b68705106a",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1760,
        "y": 2440,
        "wires": []
    },
    {
        "id": "6d62e262547d05b6",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 1770,
        "y": 2480,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "58f1d079e314e4bf",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1580,
        "y": 2140,
        "wires": []
    },
    {
        "id": "f036bd1758dbe662",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 1590,
        "y": 2180,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "63f38f7cf5d0c220",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 590,
        "y": 2940,
        "wires": [
            [
                "ff1eb89a09f4d162"
            ]
        ]
    },
    {
        "id": "370f7852618bf9c2",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2930,
        "y": 2940,
        "wires": []
    },
    {
        "id": "ff1eb89a09f4d162",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1030,
        "y": 2940,
        "wires": [
            [
                "060ae79b755bf1d6"
            ]
        ]
    },
    {
        "id": "3eccd439339dbeb3",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 2910,
        "y": 2980,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "9bf7f8737085ee59",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2910,
        "y": 4103,
        "wires": []
    },
    {
        "id": "4ac796c8ddf8155a",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1050,
        "y": 4103,
        "wires": [
            [
                "555ce72ca0d7dfd4"
            ]
        ]
    },
    {
        "id": "877ba601c47f4a76",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "",
        "url": "/aasServer/subscriptions",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 420,
        "y": 4103,
        "wires": [
            [
                "4ac796c8ddf8155a",
                "809d87b71fb0bdfd"
            ]
        ]
    },
    {
        "id": "809d87b71fb0bdfd",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 890,
        "y": 4063,
        "wires": []
    },
    {
        "id": "0fd2e5d226b547d5",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "",
        "env": [],
        "x": 2890,
        "y": 4143,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "8db9ef66f4539942",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Attachment",
        "func": "msg.headers[\"Content-Disposition\"] = \"attachment;\" + \"filename=\" + msg.req.params.fn;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2670,
        "y": 4520,
        "wires": [
            [
                "6e042f1e0e35ad24"
            ]
        ]
    },
    {
        "id": "133ab9e4b3278119",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 750,
        "y": 4520,
        "wires": [
            [
                "78952cbf4d8743ea"
            ]
        ]
    },
    {
        "id": "0797024dadf25f2d",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2870,
        "y": 4560,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "878bbbf279372837",
        "type": "comment",
        "z": "fd31082e.5487d8",
        "name": "External Interface - FileData - Request File",
        "info": "",
        "x": 400,
        "y": 4380,
        "wires": []
    },
    {
        "id": "f46ed2a9760d7a0c",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 630,
        "y": 4460,
        "wires": []
    },
    {
        "id": "6e042f1e0e35ad24",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2890,
        "y": 4520,
        "wires": []
    },
    {
        "id": "2b4b2ce5f586623c",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasx/docu/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 4520,
        "wires": [
            [
                "133ab9e4b3278119",
                "f46ed2a9760d7a0c"
            ]
        ]
    },
    {
        "id": "1a4cbce1fa03147b",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2250,
        "y": 4520,
        "wires": [
            [
                "8db9ef66f4539942"
            ],
            [
                "0797024dadf25f2d"
            ]
        ]
    },
    {
        "id": "bf9c343fa3721ce0",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "PrepareOutput",
        "func": "//msg.filename = msg.payload.value;\n//msg.staticDocs = \"/home/gido/.node-red-novaas/\";\nif(msg.payload != \"\"){\n    msg.filename = msg.payload;\n    //msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\n    return [msg, null];\n} else {\n    msg.payload = \"document Not found\"\n    return [null, msg];\n}\n\n\n\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 4540,
        "wires": [
            [
                "9454af3.ef43f5"
            ],
            [
                "75c9127c0c3a7056",
                "926efa1cbbb1b2c0"
            ]
        ]
    },
    {
        "id": "926efa1cbbb1b2c0",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 1730,
        "y": 4600,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "75c9127c0c3a7056",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 1740,
        "y": 4560,
        "wires": []
    },
    {
        "id": "12c83b47b47a3869",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2270,
        "y": 680,
        "wires": [
            [
                "b444eba86174c70f"
            ],
            [
                "a782b2cce8074cb5"
            ]
        ]
    },
    {
        "id": "7df105e40cb21de8",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2270,
        "y": 800,
        "wires": [
            [
                "08a85b58dfb0a04c"
            ],
            [
                "45773423cd9e78d0"
            ]
        ]
    },
    {
        "id": "f7e895b5e00d052c",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "prepare INSERT Statement",
        "func": "let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n});\n\n// Process msg payload\nlet splittedUrl = msg.req.url.split(\"/\");\nlet logEvent = {};\nlogEvent.id = uuid;\nlogEvent.source = context.global.get('AASIdentifier');\nlogEvent.direction = \"\";\nlogEvent.observableReference = decodeURIComponent(msg.req.url);\nlogEvent.timestamp = new Date().getTime();\nlogEvent.payload = \"Requested: \" + decodeURIComponent(splittedUrl[splittedUrl.length - 1]);\n\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\"; \nmsg.payload = [logEvent.source, logEvent.observableReference, logEvent.timestamp, logEvent.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 1260,
        "wires": [
            [
                "ffc4e5e8582000c2"
            ]
        ]
    },
    {
        "id": "ffc4e5e8582000c2",
        "type": "sqlite",
        "z": "fd31082e.5487d8",
        "mydb": "f1192e81b068366b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 2770,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "70ce4dbd.b669f4",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "IF_Error_Detected",
        "property": "payload.errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 5760,
        "wires": [
            [
                "b24156cbc544d284"
            ],
            [
                "1781aac9bafb5028"
            ]
        ]
    },
    {
        "id": "c482c970.3a3208",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1330,
        "y": 5700,
        "wires": []
    },
    {
        "id": "e9b53ce5b28e3eb3",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 690,
        "y": 5760,
        "wires": [
            [
                "6d5ab51e605af701"
            ]
        ]
    },
    {
        "id": "3f317e72dec90cf0",
        "type": "comment",
        "z": "fd31082e.5487d8",
        "name": "External Interface - Health Check",
        "info": "",
        "x": 370,
        "y": 5700,
        "wires": []
    },
    {
        "id": "b38e942dd04964f5",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/health",
        "method": "get",
        "upload": false,
        "swaggerDoc": "ca88e4a4a38f1009",
        "x": 360,
        "y": 5760,
        "wires": [
            [
                "e9b53ce5b28e3eb3"
            ]
        ]
    },
    {
        "id": "6a57b25a059b255a",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2800,
        "y": 5740,
        "wires": []
    },
    {
        "id": "d90428c1f763ac3f",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2790,
        "y": 5780,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "6d5ab51e605af701",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "preparingCheckingRules",
        "func": "var errors = [];\nmsg.payload = {};\nvar NOVAAS_Overall_St = context.global.get(\"NOVAAS_Overall_St\");\nif((NOVAAS_Overall_St === false))\n   {\n        errors.push(\"Asset Administration Shell not configured\");\n       \n   } \n \nmsg.payload.errors = errors;\n    \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 5760,
        "wires": [
            [
                "70ce4dbd.b669f4",
                "c482c970.3a3208"
            ]
        ]
    },
    {
        "id": "b24156cbc544d284",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "createOutputMsg",
        "func": "msg.statusCode = 200;\nmsg.payload = \"ok\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 5720,
        "wires": [
            [
                "6a57b25a059b255a",
                "d90428c1f763ac3f"
            ]
        ]
    },
    {
        "id": "1781aac9bafb5028",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "createOutputMsg",
        "func": "msg.statusCode = 503;\nmsg.payload = msg.payload.errors;\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 5800,
        "wires": [
            [
                "8ad810695b2eb431",
                "7b21a18013ec12f3"
            ]
        ]
    },
    {
        "id": "8ad810695b2eb431",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "503",
        "headers": {},
        "x": 2800,
        "y": 5820,
        "wires": []
    },
    {
        "id": "7b21a18013ec12f3",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "env": [],
        "x": 2790,
        "y": 5860,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "0b95dfea2f8e1657",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1050,
        "y": 3280,
        "wires": []
    },
    {
        "id": "5583c6b91d5daedd",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2930,
        "y": 3320,
        "wires": []
    },
    {
        "id": "711f4d75c2195aa4",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "name": "",
        "x": 2910,
        "y": 3360,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "ae3557fc025f637b",
        "type": "http in",
        "z": "fd31082e.5487d8",
        "name": "",
        "url": "/aasServer/shells/:aasid/aas/submodels/:submodelId/submodel/submodel-elements/:id/Invoke",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 610,
        "y": 3320,
        "wires": [
            [
                "d7eaed1d3689a90b",
                "0b95dfea2f8e1657"
            ]
        ]
    },
    {
        "id": "d7eaed1d3689a90b",
        "type": "set-defaults",
        "z": "fd31082e.5487d8",
        "name": "set-startTime",
        "rules": [
            {
                "p": "startTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "chbox_DoOutputToMessage": true,
        "chbox_SetCurrentToMsg": false,
        "howSend": {
            "text": "payload",
            "type": "msg",
            "modifiedValue": "payload"
        },
        "dropdown_HowManyMessages": "single",
        "dropdownObjOrVal": "value",
        "outputs": 1,
        "x": 1050,
        "y": 3320,
        "wires": [
            [
                "6d92d6029bc49ce2"
            ]
        ]
    },
    {
        "id": "3a90a3d23c1b5aa2",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Set Global Context",
        "func": "\nvar os = context.global.get('os');\nvar path = context.global.get('path');\nvar fs = context.global.get('fs');\n\ncontext.global.set(\"Drivers\", []);\n\nvar interfaces = os.networkInterfaces();\nvar addresses = [];\n\nfor (var k in interfaces) {\n    for (var k2 = 0; k2 < interfaces[k].length; k2++) {\n        var address = interfaces[k][k2];\n        if (address.family === 'IPv4' && !address.internal) {\n            addresses.push(address.address);\n        }\n    }\n}\n\nvar host = addresses[0];\nvar port = context.global.get('uiPort');\n\n\ncontext.global.set('namespace', \"http://\" + host + \":\" + port);\n\n\n//Retrieving the home directory\nvar homedirectory = context.global.get('staticDocs');\nvar asmodelfolderRef = \"aasx/_rels/aasx-origin.rels\";\n\nvar modelDirRef = path.join(homedirectory, asmodelfolderRef);\ncontext.global.set(\"ModelDirRef\", modelDirRef);\nmsg.filename = modelDirRef;\n\nvar msg2 = {};\nvar thumbnailRef = \"_rels/.rels\";\n\nvar thumbnailDirRef = path.join(homedirectory, thumbnailRef);\ncontext.global.set(\"AssetThumbnailRef\", thumbnailDirRef);\nmsg2.filename = thumbnailDirRef;\n\n\n\n\nvar novaasIdentifier = context.global.get(\"AASIdentifier\") || \"\";\nif (novaasIdentifier === \"\") {\n    novaasIdentifier = \"http://novaas@\" + host + \":\" + port + \"/aas\";\n}\n\ncontext.global.set(\"AASIdentifier\", novaasIdentifier);\n\nreturn [msg, msg2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 40,
        "wires": [
            [
                "5da4edd2.1f440c"
            ],
            [
                "b552652f.7d8388"
            ]
        ]
    },
    {
        "id": "03eee048d6c026b9",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "set Model Filepath",
        "func": "var modelFilePath = context.global.get(\"staticDocs\").slice(0, -1) + msg.payload.Relationships.Relationship[0].$.Target;\ncontext.global.set(\"ModelFilePath\", modelFilePath);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 40,
        "wires": [
            [
                "a26f2e9e.3d0a3",
                "1686c59a.31af6a"
            ]
        ]
    },
    {
        "id": "a64502373196e6b8",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "set Thumbnail Filepath",
        "func": "var thumbnailFilePath = msg.payload.Relationships.Relationship[1].$.Target;\ncontext.global.set(\"ThumbnailFilePath\", thumbnailFilePath);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 100,
        "wires": [
            [
                "46ff0e8a.9a3288"
            ]
        ]
    },
    {
        "id": "f7c24c8dca81cb2c",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Read File ",
        "func": "var fs = context.global.get('fs');\nvar content = \"\";\nfs.readFile(context.global.get('ModelFilePath'), \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    content = data;\n\n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    processFile();          // Or put the next step in a function and invoke it\n});\n\nfunction processFile() {\n    msg.payload = content;\n    node.send(msg);\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 220,
        "wires": [
            [
                "3f7c074f.d35dc8",
                "a4b5d95301a58750"
            ]
        ]
    },
    {
        "id": "e19fcb6bfe4abba9",
        "type": "function",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "Get FlowsIds",
        "func": "var drivers = context.global.get(\"Drivers\");\nfor (var element in drivers){\n    if(msg.payload.id === drivers[element].id || msg.payload.label === drivers[element].label){\n        msg.flowId = drivers[element].id;\n        drivers.splice(1, element);\n        context.global.set(\"Drivers\", drivers);\n        return [msg, msg];\n    }\n}\nreturn [null, msg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 400,
        "wires": [
            [
                "ed752512.71a7e"
            ],
            [
                "ae1b6bc.0e50598"
            ]
        ]
    },
    {
        "id": "2c314cfc2cf2d5e4",
        "type": "function",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "Read File ",
        "func": "var fs = context.global.get('fs');\nvar content = \"\";\nfs.readFile(msg.req.files.driver[0].path, \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    content = data;\n\n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    processFile();          // Or put the next step in a function and invoke it\n});\n\nfunction processFile() {\n    msg.payload = content;\n    node.send(msg);\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 440,
        "wires": [
            [
                "fc0a9d8e.12c52",
                "f822f55e.4e556"
            ]
        ]
    },
    {
        "id": "cbeff4782cad4fc0",
        "type": "function",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "Read File ",
        "func": "msg.statusCode = 400;\nmsg.payload = \"no attached file\";\nmsg.headers = {};\nmsg.headers['content-type'] = 'text/plain';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 480,
        "wires": [
            [
                "6b047a758dbcf417",
                "0adccb6c34ec2802"
            ]
        ]
    },
    {
        "id": "6b047a758dbcf417",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1720,
        "y": 480,
        "wires": []
    },
    {
        "id": "0adccb6c34ec2802",
        "type": "subflow:56cb7422.e3d28c",
        "z": "fd31082e.5487d8",
        "g": "ea3b0ae56fd0d23e",
        "name": "",
        "env": [],
        "x": 1710,
        "y": 520,
        "wires": [],
        "icon": "node-red-contrib-viseo-log/log.svg"
    },
    {
        "id": "9fc975fe338b2abf",
        "type": "function",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "check AAS Status",
        "func": "var manifest = msg.payload;\nif(manifest != \"\" && manifest.submodels.length > 0){\n    var statusCheckSBI = context.global.get(\"statusCheckSBI\");\n    if(statusCheckSBI.connected){\n        if(statusCheckSBI.nrOfDataSources > 0){\n            if((typeof context.global.get('namespace') !== \"undefined\")){\n                context.global.set(\"NOVAAS_Overall_Status\", \"ok\");\n                msg.payload = context.global.get(\"NOVAAS_Overall_Status\");\n                return msg;\n            }\n        }\n    }\n}\ncontext.global.set(\"NOVAAS_Overall_Status\", \"not_ok\");\nmsg.payload = context.global.get(\"NOVAAS_Overall_Status\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 4260,
        "wires": [
            [
                "b88a92c6.fb547"
            ]
        ]
    },
    {
        "id": "78952cbf4d8743ea",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "PrepareOutput",
        "func": "//msg.filename = msg.payload.value;\n//msg.staticDocs = \"/home/gido/.node-red-novaas/\";\nvar fn = msg.req.params.fn;\n//msg.filename = context.global.get('staticDocs') + \"aasx/Document/\" + fn;\nmsg.payload = \"-name\" + \" \" + fn;\n//msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 4520,
        "wires": [
            [
                "2c5fff4c.088d18"
            ]
        ]
    },
    {
        "id": "b6bd0b4b46a4a1d1",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 980,
        "y": 1140,
        "wires": [
            [
                "21f31d100d2a67a8",
                "bf6e4a39bb0ca088"
            ]
        ]
    },
    {
        "id": "bf6e4a39bb0ca088",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1100,
        "wires": []
    },
    {
        "id": "6abd645a8e27ab81",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 960,
        "y": 1680,
        "wires": [
            [
                "b2905e0f704c3927"
            ]
        ]
    },
    {
        "id": "35ce011348a775ac",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 960,
        "y": 1840,
        "wires": [
            [
                "4da6553148130cbd"
            ]
        ]
    },
    {
        "id": "b8933cf5f65c1782",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 980,
        "y": 2080,
        "wires": [
            [
                "011c7dbb515cfacf"
            ]
        ]
    },
    {
        "id": "dd7a8dc3b33a4154",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 980,
        "y": 2240,
        "wires": [
            [
                "f0681b19e7a863c0"
            ]
        ]
    },
    {
        "id": "2ad5fcbf9b88bef5",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 960,
        "y": 2380,
        "wires": [
            [
                "20e5c41bfa32a36b"
            ]
        ]
    },
    {
        "id": "18de1a54dc74ec6d",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 1200,
        "y": 2560,
        "wires": [
            [
                "e02d1b43a793fdc3"
            ]
        ]
    },
    {
        "id": "881e744c9a36ef73",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 1200,
        "y": 2740,
        "wires": [
            [
                "8251cbb2f068e20a"
            ]
        ]
    },
    {
        "id": "060ae79b755bf1d6",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 1200,
        "y": 2940,
        "wires": [
            [
                "de8e7fd7714bf759"
            ]
        ]
    },
    {
        "id": "85a0dadb6caa8dd4",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 1200,
        "y": 3100,
        "wires": [
            [
                "8b7edec6509fb80d"
            ]
        ]
    },
    {
        "id": "6d92d6029bc49ce2",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 1200,
        "y": 3320,
        "wires": [
            [
                "1382247df77d6f76"
            ]
        ]
    },
    {
        "id": "1c9124e9.e36edb",
        "type": "inject",
        "z": "fd31082e.5487d8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 5229,
        "y": 514,
        "wires": [
            []
        ]
    },
    {
        "id": "48a892ea.b7576c",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 5625,
        "y": 611,
        "wires": []
    },
    {
        "id": "b0cfbfdbd880e7ea",
        "type": "comment",
        "z": "fd31082e.5487d8",
        "name": "Handling Base64 error",
        "info": "",
        "x": 340,
        "y": 3480,
        "wires": []
    },
    {
        "id": "77b3cdf9b841b147",
        "type": "catch",
        "z": "fd31082e.5487d8",
        "name": "Handling Bad Base64 string",
        "scope": [
            "b6bd0b4b46a4a1d1",
            "6abd645a8e27ab81",
            "35ce011348a775ac",
            "b8933cf5f65c1782",
            "dd7a8dc3b33a4154",
            "2ad5fcbf9b88bef5",
            "18de1a54dc74ec6d",
            "881e744c9a36ef73",
            "060ae79b755bf1d6",
            "85a0dadb6caa8dd4",
            "6d92d6029bc49ce2",
            "4da6553148130cbd",
            "f0681b19e7a863c0",
            "20e5c41bfa32a36b",
            "e02d1b43a793fdc3",
            "8251cbb2f068e20a",
            "de8e7fd7714bf759",
            "8b7edec6509fb80d",
            "1382247df77d6f76",
            "0fac9256d443d4bd"
        ],
        "uncaught": false,
        "x": 440,
        "y": 3540,
        "wires": [
            [
                "276c35a981be826f",
                "5007355fba6bd77f"
            ]
        ]
    },
    {
        "id": "276c35a981be826f",
        "type": "function",
        "z": "fd31082e.5487d8",
        "name": "Message Body",
        "func": "const timestamp = Date.now();\nmsg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Unable decode aasIdentifier. Incorrect Base64Url encoded string.\", \"Timestamp\": timestamp }] }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 3540,
        "wires": [
            [
                "414c216552f8a533"
            ]
        ]
    },
    {
        "id": "414c216552f8a533",
        "type": "http response",
        "z": "fd31082e.5487d8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1020,
        "y": 3540,
        "wires": []
    },
    {
        "id": "4da6553148130cbd",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.id",
        "x": 1120,
        "y": 1840,
        "wires": [
            [
                "6e85a29a582046fb"
            ]
        ]
    },
    {
        "id": "f0681b19e7a863c0",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.id",
        "x": 1180,
        "y": 2240,
        "wires": [
            [
                "199179b4652e7871"
            ]
        ]
    },
    {
        "id": "20e5c41bfa32a36b",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.id",
        "x": 1180,
        "y": 2380,
        "wires": [
            [
                "12ec04d558dab59c"
            ]
        ]
    },
    {
        "id": "e02d1b43a793fdc3",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.submodelId",
        "x": 1360,
        "y": 2560,
        "wires": [
            [
                "9d35035c1a45a17c"
            ]
        ]
    },
    {
        "id": "8251cbb2f068e20a",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.submodelId",
        "x": 1360,
        "y": 2740,
        "wires": [
            [
                "7eb44e78bedd8a62"
            ]
        ]
    },
    {
        "id": "de8e7fd7714bf759",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.submodelId",
        "x": 1360,
        "y": 2940,
        "wires": [
            [
                "235980676af940fd"
            ]
        ]
    },
    {
        "id": "8b7edec6509fb80d",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.submodelId",
        "x": 1360,
        "y": 3100,
        "wires": [
            [
                "d9cf551c464c4337"
            ]
        ]
    },
    {
        "id": "1382247df77d6f76",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.submodelId",
        "x": 1360,
        "y": 3320,
        "wires": [
            [
                "ac39b69bd18aa87e"
            ]
        ]
    },
    {
        "id": "cc53e8379c014a76",
        "type": "inject",
        "z": "fd31082e.5487d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "www.company.com/ids/sm/9055_4122_4002_7570",
        "payloadType": "str",
        "x": 1000,
        "y": 6360,
        "wires": [
            [
                "0efb37031c91d595"
            ]
        ]
    },
    {
        "id": "0efb37031c91d595",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 1180,
        "y": 6360,
        "wires": [
            [
                "19620560f933623d"
            ]
        ]
    },
    {
        "id": "19620560f933623d",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "debug 386",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 6360,
        "wires": []
    },
    {
        "id": "14183942fd4b56cd",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 700,
        "y": 4880,
        "wires": [
            [
                "deb1f51509244167"
            ]
        ]
    },
    {
        "id": "deb1f51509244167",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "action": "b64",
        "property": "req.params.submodelId",
        "x": 860,
        "y": 4880,
        "wires": [
            [
                "45cb0777f0f43a5d",
                "6d76f752732d606a"
            ]
        ]
    },
    {
        "id": "6d76f752732d606a",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "g": "4b4e4270.d440bc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1050,
        "y": 4840,
        "wires": []
    },
    {
        "id": "1c271c02ad31924a",
        "type": "link out",
        "z": "fd31082e.5487d8",
        "g": "d366c10f.cbf158",
        "name": "NOVAAS_informChange_UI",
        "mode": "link",
        "links": [
            "0aef361690b6ac29",
            "dd10449ed2f83a93"
        ],
        "x": 1100,
        "y": 4300,
        "wires": [],
        "l": true
    },
    {
        "id": "5007355fba6bd77f",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "debug 387",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 3500,
        "wires": []
    },
    {
        "id": "0fac9256d443d4bd",
        "type": "base64",
        "z": "fd31082e.5487d8",
        "name": "",
        "action": "b64",
        "property": "req.params.aasid",
        "x": 980,
        "y": 1020,
        "wires": [
            [
                "c4d6e4aeb633a478"
            ]
        ]
    },
    {
        "id": "09fe24773ade8e9b",
        "type": "debug",
        "z": "fd31082e.5487d8",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 3240,
        "wires": []
    },
    {
        "id": "411a49d448b119d2",
        "type": "msg-router",
        "z": "fd31082e.5487d8",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2730,
        "y": 3320,
        "wires": [
            [
                "5583c6b91d5daedd"
            ],
            [
                "711f4d75c2195aa4"
            ]
        ]
    },
    {
        "id": "951842fd783ccd81",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "call Environmnent API",
        "links": [
            "881a0c3218ffb16f"
        ],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2060,
        "y": 3280,
        "wires": [
            [
                "686cce1cad45487e"
            ]
        ]
    },
    {
        "id": "a85a357d7b226a0f",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Not Understood\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 3420,
        "wires": [
            [
                "411a49d448b119d2"
            ]
        ]
    },
    {
        "id": "ac39b69bd18aa87e",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "Content-Type",
        "property": "req.headers['content-type']",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "application/json",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1540,
        "y": 3320,
        "wires": [
            [
                "09fe24773ade8e9b",
                "5ee4fc71d7ade01f"
            ],
            [
                "a85a357d7b226a0f"
            ]
        ]
    },
    {
        "id": "55be63e5ca6c1b30",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "Invoke_Op in",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 3280,
        "wires": [
            [
                "951842fd783ccd81"
            ]
        ]
    },
    {
        "id": "5ee4fc71d7ade01f",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "req.query",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1710,
        "y": 3300,
        "wires": [
            [
                "55be63e5ca6c1b30"
            ],
            [
                "c3ee2b333c95a891"
            ]
        ]
    },
    {
        "id": "c3ee2b333c95a891",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"Missing Query Parameters\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 3360,
        "wires": [
            [
                "411a49d448b119d2"
            ]
        ]
    },
    {
        "id": "686cce1cad45487e",
        "type": "switch",
        "z": "fd31082e.5487d8",
        "name": "",
        "property": "req.query.async",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 2230,
        "y": 3280,
        "wires": [
            [
                "17e8e4783374b268"
            ],
            [
                "411a49d448b119d2",
                "874a674b3bb07867"
            ]
        ]
    },
    {
        "id": "cb224e8d1149b335",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2560,
        "y": 3220,
        "wires": [
            [
                "411a49d448b119d2"
            ]
        ]
    },
    {
        "id": "17e8e4783374b268",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.send.commands",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "api",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2400,
        "y": 3220,
        "wires": [
            [
                "cb224e8d1149b335"
            ]
        ]
    },
    {
        "id": "343d95b6718c5604",
        "type": "link call",
        "z": "fd31082e.5487d8",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2560,
        "y": 3260,
        "wires": [
            []
        ]
    },
    {
        "id": "874a674b3bb07867",
        "type": "change",
        "z": "fd31082e.5487d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.send.commands",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "api",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2400,
        "y": 3260,
        "wires": [
            [
                "343d95b6718c5604"
            ]
        ]
    },
    {
        "id": "0027cc86b8966e35",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 900,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "048ba3a0625e4510",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "07fcc6b18ab42712",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 740,
        "wires": []
    },
    {
        "id": "0acf0c089bdaea6a",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 2450,
        "y": 580,
        "wires": [
            [
                "92cfad2c91b09895",
                "631352fe068f3d43"
            ]
        ]
    },
    {
        "id": "0c4feb0062353fc2",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 440,
        "wires": []
    },
    {
        "id": "0d356070fd1e440b",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1160,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "0ee0e2d67b0efe5f",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1080,
        "wires": []
    },
    {
        "id": "1103084ec6579d65",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "trigger_out",
        "mode": "link",
        "links": [
            "469190e8fdba17b9",
            "528e58833a988422",
            "791f17302d8b4ca4",
            "806b9c4f8b70c7cd",
            "95e9e3286be87883",
            "c2ca411926b66486",
            "eac1e7b53fa37af3"
        ],
        "x": 1270,
        "y": 200,
        "wires": [],
        "l": true
    },
    {
        "id": "1216f346d5a223cf",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 920,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "12ce6e0bc92395a9",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 900,
        "wires": [
            [
                "1a86422394914d7e"
            ]
        ]
    },
    {
        "id": "151fde71.ad247a",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var date = new Date();\ncontext.flow.set(\"timestamp\", date.getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 2734,
        "wires": [
            []
        ]
    },
    {
        "id": "18abfa8d.7a70a5",
        "type": "countdown",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "event",
        "payloadTimerStopType": "msg",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": false,
        "startCountdownOnControlMessage": false,
        "x": 870,
        "y": 2634,
        "wires": [
            [
                "be9595d8.2df6a8",
                "ce77388f.a7693"
            ],
            [
                "5fe0925e.2b993c"
            ]
        ]
    },
    {
        "id": "18ad83ddc14a8fff",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 520,
        "wires": []
    },
    {
        "id": "19e11092ef115cb6",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2860,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "1a86422394914d7e",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1240,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "1aa7d12a78802563",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "1c2f7fbf9f21a1f0",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 5",
        "env": [
            {
                "name": "PropertyName",
                "value": "CylinderStatus",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/CylinderStatus",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/CylinderStatusEvt",
                "type": "str"
            }
        ],
        "x": 430,
        "y": 1140,
        "wires": [
            [
                "0ee0e2d67b0efe5f",
                "59bdbd7a506d8fd5"
            ],
            [
                "a54415cb96270ac0"
            ],
            [
                "6bf45f0ccc31aa24"
            ]
        ]
    },
    {
        "id": "1cbf9c0a31818457",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "20dbb9b7c78ffb49",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2230,
        "y": 1240,
        "wires": [
            [
                "77b206c3d0825bf2"
            ],
            [
                "6309522e4b653590",
                "47e50ac87f960055"
            ],
            [
                "d3b25c737224b1cb",
                "73e57ddb5b800255"
            ]
        ]
    },
    {
        "id": "233985a03f7af2aa",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "links": [
            "f3137293845d295d",
            "38b37541ec9d7086",
            "cd39ec5da0b7b743",
            "2779d6b6a0f7b1cc",
            "77b206c3d0825bf2",
            "ebeaa83d4abb8b92",
            "5df3fe8b89186d53"
        ],
        "x": 740,
        "y": 1960,
        "wires": [
            [
                "568d6b198e562bcd"
            ]
        ],
        "l": true
    },
    {
        "id": "256bc3429f4f5210",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 580,
        "wires": [
            [
                "60fc493c21196b3f"
            ]
        ]
    },
    {
        "id": "2779d6b6a0f7b1cc",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 900,
        "y": 540,
        "wires": [],
        "l": true
    },
    {
        "id": "2d551cdc88e42ae8",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1580,
        "wires": []
    },
    {
        "id": "2dd76a11.baee1e",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1950,
        "y": 2354,
        "wires": []
    },
    {
        "id": "2e02385365895e81",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 900,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "2ed0ae584bc3e15a",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 940,
        "wires": [
            [
                "7e4f682b4b2f5c11"
            ]
        ]
    },
    {
        "id": "33e4bfc73d822969",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 1790,
        "y": 1200,
        "wires": [
            [
                "b009e3eb0e2e199b"
            ]
        ]
    },
    {
        "id": "358bcce8ae429bd9",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1240,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "38b37541ec9d7086",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 900,
        "y": 1200,
        "wires": [],
        "l": true
    },
    {
        "id": "3bd02b39c1e9e9ec",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1240,
        "wires": [
            [
                "358bcce8ae429bd9"
            ]
        ]
    },
    {
        "id": "3cebbd208bc6d469",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2800,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "3de1f30f5c365959",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "3f2701d6.f73216",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var cycle = context.flow.get(\"Cycle\") || 0;\nvar valvePosition = context.flow.get(\"ValvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"CylinderStatus\") || 0;\n\nvar timeElapsed = 0;  \nvar date = new Date();\n\nif((cylinderStatus === \"undefined\" && valvePosition === 1)){\n    context.flow.set(\"CylinderStatus\", 1);\n} else if((cylinderStatus === \"undefined\" && valvePosition === 0)){\n    context.flow.set(\"CylinderStatus\", 0);\n}\n\nif(cycle < 10 && cycle >= 0){\n    timeElapsed = msg.delay;\n} else if(cycle < 15 && cycle >= 10){\n    timeElapsed = msg.delay;\n} else if (cycle < 20 && cycle >= 15){\n    timeElapsed = msg.delay;\n} else if(cycle < 30 && cycle >= 20){\n    timeElapsed = msg.delay;\n}else if(cycle < 40 && cycle >= 30){\n    timeElapsed = msg.delay;\n} else if(cycle >= 40){\n    cycle = 0;\n    context.flow.set(\"Cycle\", cycle);\n    context.flow.set(\"ValvePosition\", 0);\n    context.flow.set(\"CylinderStatus\", 0);\n    context.flow.set(\"NewCycle\", false);\n    context.flow.set(\"ResponseTime\", timeElapsed);\n\n    context.flow.set(\"timestamp\", date.getTime());\n    msg.payload = timeElapsed;\n    var msg_out_2 = {};\n    return [msg, msg_out_2];\n    \n}\n\ncontext.flow.set(\"ResponseTime\", timeElapsed);\n\ncontext.flow.set(\"timestamp\", date.getTime());\nmsg.payload = timeElapsed;\nmsg.topic = \"ResponseTimeMvgAvg\";\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "x": 1520,
        "y": 2540,
        "wires": [
            [
                "5543cf66.c72ba8",
                "9d3857b4.a3a72"
            ],
            [
                "95c62ca4.9097f8"
            ]
        ]
    },
    {
        "id": "41d1269376597f69",
        "type": "function",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "check connected",
        "func": "let connected = context.flow.get(\"connected\");\nif(connected) return msg;\nelse return null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 200,
        "wires": [
            [
                "1103084ec6579d65"
            ]
        ]
    },
    {
        "id": "41d553602c61b3d5",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "Initialize Context",
        "func": "context.flow.set(\"CurrentOperatingPressure\", 0);\ncontext.flow.set(\"CylinderStatus\", 0);\ncontext.flow.set(\"ResponseTime\", 0);\ncontext.flow.set(\"ValvePosition\", 0);\ncontext.flow.set(\"NewCycle\", false);\ncontext.flow.set(\"Cycle\", 0);\ncontext.flow.set(\"ResponseTimePred\", []);\n\ncontext.flow.set(\"NrOfDataSources\", 7);\ncontext.flow.set(\"connected\", false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "4496aaad104ba6e4",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 2450,
        "y": 900,
        "wires": [
            [
                "e0eb5904abedc0c5"
            ]
        ]
    },
    {
        "id": "4554e218694823c1",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1280,
        "wires": [
            [
                "1c2f7fbf9f21a1f0"
            ]
        ]
    },
    {
        "id": "468a613a.658ae8",
        "type": "delay",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "10",
        "randomLast": "15",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 860,
        "y": 2500,
        "wires": [
            [
                "66121d53.f7a264",
                "be9595d8.2df6a8"
            ]
        ]
    },
    {
        "id": "469190e8fdba17b9",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_4",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 1705,
        "y": 780,
        "wires": [
            [
                "b406223a6495d1be"
            ]
        ]
    },
    {
        "id": "47e50ac87f960055",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 2490,
        "y": 1240,
        "wires": [
            [
                "a3d5d731cd8b6d42"
            ]
        ]
    },
    {
        "id": "481398519a9d5237",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "48b59e1f8f29af8b",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 1740,
        "y": 920,
        "wires": [
            [
                "b406223a6495d1be"
            ]
        ]
    },
    {
        "id": "48dd5be3.c049ac",
        "type": "cronplus",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "schedule1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 2620,
        "wires": [
            [
                "50caec1c.6ad584",
                "b84f2e00.9385c8",
                "6b5bce5c.8f7818"
            ]
        ]
    },
    {
        "id": "4be0576d4487e1ca",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "Event Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sbi scheduling data routing",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "41d1269376597f69"
            ]
        ]
    },
    {
        "id": "4f1ed87887f71afd",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "name": "statusNotification",
        "func": "var statusCheck  = {};\nstatusCheck.connected = context.flow.get(\"connected\");\nstatusCheck.nrOfDataSources = context.flow.get(\"NrOfDataSources\");\nmsg.payload = {\"statusCheck\": statusCheck};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1560,
        "y": 2080,
        "wires": [
            [
                "ab057144cf917fb8"
            ]
        ]
    },
    {
        "id": "4f700a47.b1503c",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var responseTimePred = [];\nfor(var k = 1; k <= 10; k++){\n    var futurePrediction = msg.function.equation[0]*Math.pow((msg.payload.x + k), 2) + msg.function.equation[1]*(msg.payload.x + k) + msg.function.equation[2];\n    msg.payload.futurePrediction = futurePrediction;\n    responseTimePred.push(futurePrediction);\n}\n//responseTimePred.pop();\n//responseTimePred.unshift(futurePrediction);\ncontext.flow.set(\"ResponseTimePred\", responseTimePred);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2620,
        "y": 2540,
        "wires": [
            [
                "e3a6732e.ca9c5"
            ]
        ]
    },
    {
        "id": "4fc60620cd61db57",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 1200,
        "wires": []
    },
    {
        "id": "50caec1c.6ad584",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "context.flow.set(\"connected\", true);\nvar valvePosition = context.flow.get(\"ValvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"CylinderStatus\") || 0;\nvar newCycle = context.flow.get(\"NewCycle\") || false;\nvar cycle = context.flow.get(\"Cycle\") || 0;\nif((valvePosition === 0 && cylinderStatus === 0) && newCycle === false && cycle < 40){\n    context.flow.set(\"NewCycle\", true);\n    cycle = cycle + 1;\n    context.flow.set(\"Cycle\", cycle);\n    return [msg, null];\n} else if((valvePosition === 1 && cylinderStatus === 1) && newCycle === true && cycle < 40){\n    context.flow.set(\"NewCycle\", false);\n    cycle = cycle + 1;\n    context.flow.set(\"Cycle\", cycle);\n    return [null, msg];\n}\n\nreturn null;\n",
        "outputs": 2,
        "noerr": 0,
        "x": 460,
        "y": 2540,
        "wires": [
            [
                "a526eb90.5eb89",
                "be9595d8.2df6a8"
            ],
            [
                "18abfa8d.7a70a5"
            ]
        ]
    },
    {
        "id": "50f874d57977fcf9",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.metrics",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 1940,
        "wires": [
            [
                "ddd6397bb839158d"
            ]
        ]
    },
    {
        "id": "528e58833a988422",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_5",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 135,
        "y": 1520,
        "wires": [
            [
                "6b0c873361077c3b"
            ]
        ]
    },
    {
        "id": "5452497d5ac0f4cd",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1620,
        "wires": [
            [
                "f0552cbe3ca19565"
            ]
        ]
    },
    {
        "id": "54ecd0622d36e32d",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 580,
        "wires": [
            [
                "dc55258e946a2e61"
            ]
        ]
    },
    {
        "id": "5539401569fc87b3",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 2460,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "5543cf66.c72ba8",
        "type": "Data Analysis",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "action": "realtime",
        "outputs": 3,
        "outliersBase": "avg",
        "outliersStdDevs": "3",
        "term": "15",
        "keyProperty": "msg.topic",
        "dataProperty": "msg.payload",
        "dataProperties": [
            "msg.payload[0]",
            "msg.payload[1]"
        ],
        "x": 1740,
        "y": 2414,
        "wires": [
            [
                "2dd76a11.baee1e",
                "98dd4417.bb6a8",
                "a2d0442e.c3b158"
            ],
            [],
            []
        ]
    },
    {
        "id": "568d6b198e562bcd",
        "type": "msg-speed",
        "z": "128ab3134a54f6b4",
        "name": "",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 1340,
        "y": 1960,
        "wires": [
            [
                "d9a9ec7b13ac68ad"
            ],
            []
        ]
    },
    {
        "id": "59420534ad5d78a1",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "59bdbd7a506d8fd5",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1120,
        "wires": [
            [
                "cdb7ca556bf07837"
            ]
        ]
    },
    {
        "id": "5a83b4fb4e0ba10c",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "5c3897124d1d95c0",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "initScheduling",
                "v": "* * * * * * *",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "41d553602c61b3d5",
                "f8b354e5d9771dda"
            ]
        ]
    },
    {
        "id": "5df3fe8b89186d53",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 2460,
        "y": 540,
        "wires": [],
        "l": true
    },
    {
        "id": "5fe0925e.2b993c",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 2694,
        "wires": []
    },
    {
        "id": "60fc493c21196b3f",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 1",
        "env": [
            {
                "name": "PropertyName",
                "value": "CurrentOperatingPressure",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/CurrentOperatingPressure",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/CurrentOperatingPressureEvt",
                "type": "str"
            }
        ],
        "x": 350,
        "y": 480,
        "wires": [
            [
                "c15f3336dbf94ae6"
            ],
            [
                "eadbc9240e0cdc8c",
                "917b5192627637eb"
            ],
            [
                "a22a33eaebf6529f"
            ]
        ]
    },
    {
        "id": "626df66b2f8fedd5",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "6309522e4b653590",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 1200,
        "wires": []
    },
    {
        "id": "631352fe068f3d43",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2640,
        "y": 580,
        "wires": [
            [
                "3cebbd208bc6d469"
            ]
        ]
    },
    {
        "id": "636051731b8e795e",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 670,
        "y": 1620,
        "wires": [
            [
                "f3137293845d295d"
            ],
            [
                "2d551cdc88e42ae8",
                "90d5ba1a50c32e8f"
            ],
            [
                "1216f346d5a223cf"
            ]
        ]
    },
    {
        "id": "65378e2d9b245964",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 1720,
        "y": 580,
        "wires": [
            [
                "850ae93348f20888"
            ]
        ]
    },
    {
        "id": "66121d53.f7a264",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1110,
        "y": 2580,
        "wires": []
    },
    {
        "id": "671f4b7036c5715d",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 1740,
        "y": 620,
        "wires": [
            [
                "850ae93348f20888"
            ]
        ]
    },
    {
        "id": "67e92151.ed84b8",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2530,
        "y": 2480,
        "wires": []
    },
    {
        "id": "6b0c873361077c3b",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 7",
        "env": [
            {
                "name": "PropertyName",
                "value": "ResponseTimePred",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/ResponseTimePred",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/ResponseTimePredEvt",
                "type": "str"
            }
        ],
        "x": 430,
        "y": 1520,
        "wires": [
            [
                "734fd038b56535df",
                "bac985087fd6f894"
            ],
            [
                "c46fa08910fa0901"
            ],
            [
                "636051731b8e795e"
            ]
        ]
    },
    {
        "id": "6b0e702cef1b9412",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1620,
        "wires": [
            [
                "6b0c873361077c3b"
            ]
        ]
    },
    {
        "id": "6b5bce5c.8f7818",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "msg.topic = \"control\";\nmsg.payload = 60;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 2714,
        "wires": [
            [
                "fbec0d31.b2b898"
            ]
        ]
    },
    {
        "id": "6bf45f0ccc31aa24",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 670,
        "y": 1240,
        "wires": [
            [
                "38b37541ec9d7086"
            ],
            [
                "4fc60620cd61db57",
                "98d898ce9e662492"
            ],
            [
                "0027cc86b8966e35"
            ]
        ]
    },
    {
        "id": "6d18c370.e424fc",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 2674,
        "wires": []
    },
    {
        "id": "6f7c2c99bba4d56c",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "60fc493c21196b3f"
            ]
        ]
    },
    {
        "id": "72693a70ea801745",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "driver.send.commands",
        "links": [],
        "x": 880,
        "y": 2180,
        "wires": [
            [
                "f995bbc47f93d025",
                "377146044d37209b"
            ]
        ],
        "l": true
    },
    {
        "id": "7306d65d1bc01b37",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 780,
        "wires": [
            [
                "048ba3a0625e4510"
            ]
        ]
    },
    {
        "id": "734fd038b56535df",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1460,
        "wires": []
    },
    {
        "id": "73e57ddb5b800255",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 2500,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "74b1ba8063285d28",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1240,
        "wires": [
            [
                "1c2f7fbf9f21a1f0"
            ]
        ]
    },
    {
        "id": "7612f18343452a99",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2780,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "769bc30f1e2ca841",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 1120,
        "wires": [
            [
                "626df66b2f8fedd5"
            ]
        ]
    },
    {
        "id": "77b206c3d0825bf2",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 2460,
        "y": 1200,
        "wires": [],
        "l": true
    },
    {
        "id": "78057a0f7b42669f",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 650,
        "y": 920,
        "wires": [
            [
                "cd39ec5da0b7b743"
            ],
            [
                "b074660cba99adcf"
            ],
            [
                "2e02385365895e81"
            ]
        ]
    },
    {
        "id": "791f17302d8b4ca4",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_3",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 145,
        "y": 800,
        "wires": [
            [
                "7e4f682b4b2f5c11"
            ]
        ]
    },
    {
        "id": "7e4f682b4b2f5c11",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 3",
        "env": [
            {
                "name": "PropertyName",
                "value": "ValvePosition",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/ValvePosition",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/ValvePositionEvt",
                "type": "str"
            }
        ],
        "x": 410,
        "y": 800,
        "wires": [
            [
                "96ec7195857503e4",
                "7306d65d1bc01b37"
            ],
            [
                "e98655e2c9882820"
            ],
            [
                "78057a0f7b42669f"
            ]
        ]
    },
    {
        "id": "806b9c4f8b70c7cd",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_1",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 185,
        "y": 480,
        "wires": [
            [
                "60fc493c21196b3f"
            ]
        ]
    },
    {
        "id": "81565ab51080788a",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1160,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "84b237411eda95b6",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "driver.send.commands",
        "mode": "return",
        "links": [],
        "x": 2145,
        "y": 2180,
        "wires": []
    },
    {
        "id": "850ae93348f20888",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 2",
        "env": [
            {
                "name": "PropertyName",
                "value": "ResponseTime",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/ResponseTime",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/ResponseTimeEvt",
                "type": "str"
            }
        ],
        "x": 1910,
        "y": 480,
        "wires": [
            [
                "0c4feb0062353fc2",
                "fe88bf27f3c503ad"
            ],
            [
                "8d76970b5a1222aa"
            ],
            [
                "d2afefd3bc7955f0"
            ]
        ]
    },
    {
        "id": "8d76970b5a1222aa",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 500,
        "wires": [
            [
                "481398519a9d5237"
            ]
        ]
    },
    {
        "id": "90d5ba1a50c32e8f",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 1620,
        "wires": [
            [
                "5452497d5ac0f4cd"
            ]
        ]
    },
    {
        "id": "917b5192627637eb",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "91eeebe1d5234d19",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 890,
        "y": 580,
        "wires": [
            [
                "9972d2363fc6854d",
                "54ecd0622d36e32d"
            ]
        ]
    },
    {
        "id": "9233e59a.9662b",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var date = new Date();\nvar startCycle = context.flow.get(\"startCycleTs\");\ncontext.flow.set(\"ResponseTime\", date.getTime() - startCycle);\nlet calculatedDelay = context.flow.get(\"calculatedDelay\");\nif(calculatedDelay >= msg.payload ){\n    context.flow.set(\"CylinderStatus\", \"undefined\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1750,
        "y": 2774,
        "wires": [
            []
        ]
    },
    {
        "id": "92cfad2c91b09895",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2650,
        "y": 540,
        "wires": []
    },
    {
        "id": "95c62ca4.9097f8",
        "type": "regression",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "dataSetSize": "15",
        "regressionType": "polynomial",
        "polynomialOrder": 2,
        "precision": "2",
        "xInputField": "payload.x",
        "xInputFieldType": "msg",
        "yInputField": "payload.y",
        "yInputFieldType": "msg",
        "yOutputField": "payload.y_out",
        "yOutputFieldType": "msg",
        "functionOutputField": "function",
        "functionOutputFieldType": "msg",
        "resultOnly": false,
        "x": 2390,
        "y": 2540,
        "wires": [
            [
                "67e92151.ed84b8",
                "4f700a47.b1503c"
            ]
        ]
    },
    {
        "id": "95e9e3286be87883",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_5",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 135,
        "y": 1140,
        "wires": [
            [
                "1c2f7fbf9f21a1f0"
            ]
        ]
    },
    {
        "id": "95f3474f2f46c76d",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 900,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "963a48fed27b7275",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2690,
        "y": 840,
        "wires": []
    },
    {
        "id": "96ec7195857503e4",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 760,
        "wires": []
    },
    {
        "id": "989ece9714637fbd",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 1780,
        "y": 1240,
        "wires": [
            [
                "b009e3eb0e2e199b"
            ]
        ]
    },
    {
        "id": "98d898ce9e662492",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 890,
        "y": 1240,
        "wires": [
            [
                "3bd02b39c1e9e9ec"
            ]
        ]
    },
    {
        "id": "98dd4417.bb6a8",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var elapsedTimeMovingAvg = msg.result.movingAvg;\ncontext.flow.set(\"ResponseTimeMovingAvg\", elapsedTimeMovingAvg);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2100,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "9972d2363fc6854d",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 540,
        "wires": []
    },
    {
        "id": "9d3857b4.a3a72",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1710,
        "y": 2340,
        "wires": []
    },
    {
        "id": "a19b541913d06013",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 1160,
        "wires": [
            [
                "1cbf9c0a31818457"
            ]
        ]
    },
    {
        "id": "a22a33eaebf6529f",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 590,
        "y": 600,
        "wires": [
            [
                "2779d6b6a0f7b1cc"
            ],
            [
                "18ad83ddc14a8fff",
                "91eeebe1d5234d19"
            ],
            [
                "95f3474f2f46c76d"
            ]
        ]
    },
    {
        "id": "a2d0442e.c3b158",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var msg_out = {};\nvar payload = {};\n//payload.x = msg.result.count;\npayload.x = context.flow.get(\"Cycle\");\npayload.y = msg.payload;\npayload.y_out = \"\";\nmsg_out.payload = payload;\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "x": 2100,
        "y": 2420,
        "wires": [
            [
                "95c62ca4.9097f8",
                "deaca8d7.b5846"
            ]
        ]
    },
    {
        "id": "a3d5d731cd8b6d42",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2700,
        "y": 1240,
        "wires": [
            [
                "19e11092ef115cb6"
            ]
        ]
    },
    {
        "id": "a513ea10cf429ecb",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 1720,
        "y": 880,
        "wires": [
            [
                "b406223a6495d1be"
            ]
        ]
    },
    {
        "id": "a526eb90.5eb89",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 2580,
        "wires": []
    },
    {
        "id": "a54415cb96270ac0",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1160,
        "wires": [
            [
                "d3a21737e8f473b4"
            ]
        ]
    },
    {
        "id": "aa852a4a.3a9728",
        "type": "delay",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1340,
        "y": 2540,
        "wires": [
            [
                "3f2701d6.f73216"
            ]
        ]
    },
    {
        "id": "ab057144cf917fb8",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "driver.connection.check out",
        "mode": "return",
        "links": [],
        "x": 2175,
        "y": 2080,
        "wires": []
    },
    {
        "id": "b009e3eb0e2e199b",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 6",
        "env": [
            {
                "name": "PropertyName",
                "value": "Cycle",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/Cycle",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/CycleEvt",
                "type": "str"
            }
        ],
        "x": 1990,
        "y": 1140,
        "wires": [
            [
                "ed653a4c23fbbc0b",
                "769bc30f1e2ca841"
            ],
            [
                "a19b541913d06013"
            ],
            [
                "20dbb9b7c78ffb49"
            ]
        ]
    },
    {
        "id": "b074660cba99adcf",
        "type": "json",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "payload.data",
        "action": "",
        "pretty": false,
        "x": 890,
        "y": 900,
        "wires": [
            [
                "12ce6e0bc92395a9"
            ]
        ]
    },
    {
        "id": "b0a9cb27cdf5f9af",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 2460,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "b406223a6495d1be",
        "type": "subflow:41b3a1439ccec2c1",
        "z": "128ab3134a54f6b4",
        "name": "Property 4",
        "env": [
            {
                "name": "PropertyName",
                "value": "ResponseTimeMovingAvg",
                "type": "str"
            },
            {
                "name": "PropertyLink",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/ResponseTimeMovingAvg",
                "type": "str"
            },
            {
                "name": "HistoryLength",
                "value": "14400",
                "type": "num"
            },
            {
                "name": "PropertyLinkEvt",
                "value": "aHR0cHM6Ly9leGFtcGxlLmNvbS9pZHMvc20vMjA1NF83MDYyXzExNDJfOTg2Mg==/d3d3LmNvbXBhbnkuY29tL2lkcy9zbS85MDU1XzQxMjJfNDAwMl83NTcw/ResponseTimeMovingAvgEvt",
                "type": "str"
            }
        ],
        "x": 1910,
        "y": 780,
        "wires": [
            [
                "07fcc6b18ab42712",
                "fa5cbe0db60ec832"
            ],
            [
                "e2cb9dfbe9c7c212"
            ],
            [
                "c9ae4fcfe0c6c389"
            ]
        ]
    },
    {
        "id": "b6935d1d.70c508",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var cycle = context.flow.get(\"Cycle\");\nif(cycle < 40){\n    var calculatedDelay = context.flow.get(\"calculatedDelay\") || 0;\n    msg.topic = \"control\";\n    msg.payload = ((msg.delay)/1000) - 1;\n    calculatedDelay = Math.round(((msg.delay)/1000) - 1);\n    context.flow.set(\"calculatedDelay\", calculatedDelay);\n    return msg;\n} else return null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 2674,
        "wires": [
            [
                "cc4c0f0b.0473a8"
            ]
        ]
    },
    {
        "id": "b84f2e00.9385c8",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 430,
        "y": 2620,
        "wires": []
    },
    {
        "id": "bac985087fd6f894",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1500,
        "wires": [
            [
                "0d356070fd1e440b"
            ]
        ]
    },
    {
        "id": "baf4b91cb6d5e955",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 1800,
        "y": 1280,
        "wires": [
            [
                "b009e3eb0e2e199b"
            ]
        ]
    },
    {
        "id": "bb967e7e4e1268c3",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "be9595d8.2df6a8",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "func": "var cycle = context.flow.get(\"Cycle\") || 0;\nvar valvePosition = context.flow.get(\"ValvePosition\") || 0;\nvar cylinderStatus = context.flow.get(\"CylinderStatus\") || 0;\nvar startCycleTs = context.flow.get(\"startCycleTs\") || 0;\nvar date = new Date();\n\n    if((cylinderStatus === 0 && valvePosition === 0) || (cylinderStatus === 1 && valvePosition === 1)){\n\n        //context.flow.set(\"timestamp\", date.getTime());\n        context.flow.set(\"startCycleTs\", date.getTime());\n        \n        if(cycle >= 40){\n            //context.flow.set(\"cycle\", cycle);\n            msg.delay = 30000;\n            msg.topic =\"@stats reset\";\n            return msg;\n        }\n        if(valvePosition === 0){\n            valvePosition = 1;\n            context.flow.set(\"ResponseTime\", 0);\n        } else {\n            valvePosition = 0;\n            context.flow.set(\"ResponseTime\", 0);\n        }\n        context.flow.set(\"ValvePosition\", valvePosition);\n        /*if(cycle < 10){\n            msg.delay = 5000 + (5000*0.01*cycle);\n        } else if(cycle < 15 && cycle >= 10){\n            msg.delay = 5500 + (5000*0.02*cycle);\n        } else if (cycle < 20 && cycle >= 15){\n            msg.delay = 6500 + (5000*0.03*cycle);\n        } else if(cycle < 30 && cycle >= 20){\n            msg.delay = 7000 + (5000*0.035*cycle);\n        }else if(cycle < 40 && cycle >= 30){\n            msg.delay = 10250 + (5000*0.04*cycle);\n        }*/\n        if(cycle < 40){\n            msg.delay = 5000 + (5000*0.025*cycle);\n        }\n        \n        \n        return msg;\n    }\n\n\n//var date = new Date();\n//context.flow.set(\"timestamp\", date.getTime());\n//var currentTimeElapsed = date.getTime() - startCycleTs;\n//context.flow.set(\"responseTime\", currentTimeElapsed);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 2540,
        "wires": [
            [
                "aa852a4a.3a9728",
                "f23c2e8f.c112f",
                "b6935d1d.70c508"
            ]
        ]
    },
    {
        "id": "c15f3336dbf94ae6",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 440,
        "wires": [
            [
                "5a83b4fb4e0ba10c"
            ]
        ]
    },
    {
        "id": "c2ca411926b66486",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_2",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 1725,
        "y": 480,
        "wires": [
            [
                "850ae93348f20888"
            ]
        ]
    },
    {
        "id": "c46fa08910fa0901",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1540,
        "wires": [
            [
                "81565ab51080788a"
            ]
        ]
    },
    {
        "id": "c51b380ab3c5eba5",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1660,
        "wires": [
            [
                "6b0c873361077c3b"
            ]
        ]
    },
    {
        "id": "c9ae4fcfe0c6c389",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2150,
        "y": 920,
        "wires": [
            [
                "ebeaa83d4abb8b92"
            ],
            [
                "963a48fed27b7275",
                "4496aaad104ba6e4"
            ],
            [
                "5539401569fc87b3"
            ]
        ]
    },
    {
        "id": "ca845fe51ab78740",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "unobserve",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 900,
        "wires": [
            [
                "7e4f682b4b2f5c11"
            ]
        ]
    },
    {
        "id": "cacff0a08c562d53",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1580,
        "wires": [
            [
                "6b0c873361077c3b"
            ]
        ]
    },
    {
        "id": "cc4c0f0b.0473a8",
        "type": "countdown",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "",
        "payloadTimerStopType": "nul",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": true,
        "x": 1530,
        "y": 2674,
        "wires": [
            [],
            [
                "6d18c370.e424fc",
                "9233e59a.9662b"
            ]
        ]
    },
    {
        "id": "cc527a942da20281",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 1730,
        "y": 840,
        "wires": [
            [
                "b406223a6495d1be"
            ]
        ]
    },
    {
        "id": "cd39ec5da0b7b743",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 900,
        "y": 860,
        "wires": [],
        "l": true
    },
    {
        "id": "cdb7ca556bf07837",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "ce77388f.a7693",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1090,
        "y": 2654,
        "wires": []
    },
    {
        "id": "d006dee3ddf2966c",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 1730,
        "y": 540,
        "wires": [
            [
                "850ae93348f20888"
            ]
        ]
    },
    {
        "id": "d2afefd3bc7955f0",
        "type": "msg-router",
        "z": "128ab3134a54f6b4",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 2150,
        "y": 600,
        "wires": [
            [
                "5df3fe8b89186d53"
            ],
            [
                "0acf0c089bdaea6a"
            ],
            [
                "b0a9cb27cdf5f9af"
            ]
        ]
    },
    {
        "id": "d3a21737e8f473b4",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "d3b25c737224b1cb",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2490,
        "y": 1320,
        "wires": []
    },
    {
        "id": "d57f305ac53e4d3f",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1260,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d71c20e4c91d2c13",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "driver.connection.check",
        "links": [],
        "x": 790,
        "y": 2080,
        "wires": [
            [
                "4f1ed87887f71afd"
            ]
        ],
        "l": true
    },
    {
        "id": "d9a9ec7b13ac68ad",
        "type": "unsafe-function",
        "z": "128ab3134a54f6b4",
        "name": "stats",
        "func": "var statsSBI = {};\nvar msgSpeed = msg.payload;\nvar msgIntervalAndFrequency = msg.intervalAndFrequency;\nstatsSBI.msgSpeed = msgSpeed;\nstatsSBI.IntervalAndFrequency = msgIntervalAndFrequency;\nstatsSBI.maxMsgs = context.flow.get(\"NrOfDataSources\") * 60;\nmsg.payload = statsSBI;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1600,
        "y": 1940,
        "wires": [
            [
                "50f874d57977fcf9"
            ]
        ]
    },
    {
        "id": "dc55258e946a2e61",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1240,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "ddd6397bb839158d",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2170,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "deaca8d7.b5846",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2330,
        "y": 2460,
        "wires": []
    },
    {
        "id": "e0228169e632fce2",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 2740,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "e0eb5904abedc0c5",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateValue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2620,
        "y": 900,
        "wires": [
            [
                "7612f18343452a99"
            ]
        ]
    },
    {
        "id": "e1a3ba2461a9793f",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1200,
        "wires": [
            [
                "1c2f7fbf9f21a1f0"
            ]
        ]
    },
    {
        "id": "e2cb9dfbe9c7c212",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 800,
        "wires": [
            [
                "59420534ad5d78a1"
            ]
        ]
    },
    {
        "id": "e3a6732e.ca9c5",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2790,
        "y": 2480,
        "wires": []
    },
    {
        "id": "e5b5943b04487788",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "observe",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 860,
        "wires": [
            [
                "7e4f682b4b2f5c11"
            ]
        ]
    },
    {
        "id": "e98655e2c9882820",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 820,
        "wires": [
            [
                "bb967e7e4e1268c3"
            ]
        ]
    },
    {
        "id": "eac1e7b53fa37af3",
        "type": "link in",
        "z": "128ab3134a54f6b4",
        "name": "trigger_in_5",
        "links": [
            "1103084ec6579d65"
        ],
        "x": 1695,
        "y": 1140,
        "wires": [
            [
                "b009e3eb0e2e199b"
            ]
        ]
    },
    {
        "id": "eadbc9240e0cdc8c",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.routed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 480,
        "wires": [
            [
                "1aa7d12a78802563"
            ]
        ]
    },
    {
        "id": "ebeaa83d4abb8b92",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 2460,
        "y": 840,
        "wires": [],
        "l": true
    },
    {
        "id": "ed653a4c23fbbc0b",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f0552cbe3ca19565",
        "type": "link call",
        "z": "128ab3134a54f6b4",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1240,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "f23c2e8f.c112f",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1330,
        "y": 2480,
        "wires": []
    },
    {
        "id": "f3137293845d295d",
        "type": "link out",
        "z": "128ab3134a54f6b4",
        "name": "metrics",
        "mode": "link",
        "links": [
            "233985a03f7af2aa"
        ],
        "x": 900,
        "y": 1580,
        "wires": [],
        "l": true
    },
    {
        "id": "f8b354e5d9771dda",
        "type": "function",
        "z": "128ab3134a54f6b4",
        "g": "6aa9beecbf5f8d23",
        "name": "call Southbound Interface Reset Subscriptions",
        "func": "msg.target = \"southbound.resetSebscriptions\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 160,
        "wires": [
            [
                "d57f305ac53e4d3f"
            ]
        ]
    },
    {
        "id": "f97d56a1024072d1",
        "type": "inject",
        "z": "128ab3134a54f6b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 620,
        "wires": [
            [
                "60fc493c21196b3f"
            ]
        ]
    },
    {
        "id": "f995bbc47f93d025",
        "type": "debug",
        "z": "128ab3134a54f6b4",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 2160,
        "wires": []
    },
    {
        "id": "fa5cbe0db60ec832",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 760,
        "wires": [
            [
                "3de1f30f5c365959"
            ]
        ]
    },
    {
        "id": "fbec0d31.b2b898",
        "type": "countdown",
        "z": "128ab3134a54f6b4",
        "g": "b3fca1f0.1e5ef8",
        "name": "",
        "topic": "",
        "payloadTimerStart": "",
        "payloadTimerStartType": "nul",
        "payloadTimerStop": "",
        "payloadTimerStopType": "nul",
        "timer": "10",
        "resetWhileRunning": false,
        "setTimeToNewWhileRunning": true,
        "startCountdownOnControlMessage": true,
        "x": 490,
        "y": 2714,
        "wires": [
            [],
            [
                "151fde71.ad247a"
            ]
        ]
    },
    {
        "id": "fe88bf27f3c503ad",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "southbound.updateSubscriptions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 460,
        "wires": [
            [
                "e0228169e632fce2"
            ]
        ]
    },
    {
        "id": "7982f9ad4b18cdb6",
        "type": "change",
        "z": "128ab3134a54f6b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "payload.idShort",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 2180,
        "wires": [
            [
                "84b237411eda95b6"
            ]
        ]
    },
    {
        "id": "377146044d37209b",
        "type": "switch",
        "z": "128ab3134a54f6b4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "api",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1350,
        "y": 2180,
        "wires": [
            [
                "7982f9ad4b18cdb6"
            ]
        ]
    },
    {
        "id": "1ab0b9bfc07caea0",
        "type": "inject",
        "z": "1543d308b342690a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "1d76854dfbb20b18",
                "45d86a2225614c0a"
            ]
        ]
    },
    {
        "id": "1d76854dfbb20b18",
        "type": "function",
        "z": "1543d308b342690a",
        "name": "check status",
        "func": "function isObjEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\n\nlet status = context.global.get(\"statusCheckSBI\") || {};\nlet outMsg = {};\nif (isObjEmpty(status) || !status.connected){\n    outMsg.payload = \"NOT CONNECTED\";\n} else if (status.connected){\n    outMsg.payload = \"CONNECTED\";\n}\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 540,
        "wires": [
            [
                "33090ee7f29e16ae"
            ]
        ]
    },
    {
        "id": "1e6c7a273cda476c",
        "type": "function",
        "z": "1543d308b342690a",
        "name": " ",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 845,
        "y": 300,
        "wires": [
            [
                "a73adb6ccc517333"
            ]
        ],
        "icon": "node-red/arrow-in.svg",
        "l": false
    },
    {
        "id": "2aac71d34da0af1c",
        "type": "inject",
        "z": "1543d308b342690a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "96843b0c361b50cd"
            ]
        ]
    },
    {
        "id": "33090ee7f29e16ae",
        "type": "ui-text",
        "z": "1543d308b342690a",
        "group": "05a598e787528df2",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "Connected/NotConnected",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 900,
        "y": 580,
        "wires": []
    },
    {
        "id": "3b5c7f53a41bb6dc",
        "type": "change",
        "z": "1543d308b342690a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enable",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "4559a7bfe7335fb6",
        "type": "ui-text",
        "z": "1543d308b342690a",
        "group": "05a598e787528df2",
        "order": 1,
        "width": "2",
        "height": "1",
        "name": "Flow Started At",
        "label": "Flow Started At",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 600,
        "y": 60,
        "wires": []
    },
    {
        "id": "45d86a2225614c0a",
        "type": "function",
        "z": "1543d308b342690a",
        "name": "",
        "func": "let enable = flow.get('enable') || false;\nmsg.enable = enable;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 720,
        "wires": [
            [
                "644472c8576bb7d4"
            ]
        ]
    },
    {
        "id": "535fefea3045516a",
        "type": "debug",
        "z": "1543d308b342690a",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 340,
        "wires": []
    },
    {
        "id": "592a8d12e0705ea8",
        "type": "ui-chart",
        "z": "1543d308b342690a",
        "group": "fa3153f56f0dc028",
        "name": "SouthboundChart",
        "label": "msgs/1 min",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "msg",
        "xAxisType": "time",
        "yAxisLabel": "",
        "yAxisProperty": "",
        "ymin": "",
        "ymax": "",
        "action": "append",
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "width": "3",
        "height": "4",
        "className": "",
        "x": 710,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "5c430c858afe61df",
        "type": "ui-chart",
        "z": "1543d308b342690a",
        "group": "2e560a461d849b04",
        "name": "NorthboundChart",
        "label": "msgs/1 min",
        "order": 2,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "msg",
        "xAxisType": "time",
        "yAxisLabel": "",
        "yAxisProperty": "",
        "ymin": "",
        "ymax": "",
        "action": "append",
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "width": "3",
        "height": "4",
        "className": "",
        "x": 710,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "644472c8576bb7d4",
        "type": "function",
        "z": "1543d308b342690a",
        "name": "stats",
        "func": "function isObjEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\n\nlet statsNBI = context.global.get(\"statsNBI\") || {};\nlet statsSBI = context.global.get(\"statsSBI\") || {};\n\nlet outStatsSBI_msgSpeed = {};\nlet outStatsSBI_msgsOverTime = {};\n\nif (isObjEmpty(statsSBI) || msg.enable == false) {\n    outStatsSBI_msgSpeed.payload = 0;\n    outStatsSBI_msgSpeed.ui_update = { \"max\": 100 };\n    outStatsSBI_msgsOverTime.payload = [];\n\n\n} else {\n    outStatsSBI_msgSpeed.payload = statsSBI.msgSpeed;\n    outStatsSBI_msgsOverTime.payload = statsSBI.msgSpeed;\n    outStatsSBI_msgSpeed.ui_update = { \"max\": statsSBI.maxMsgs };\n\n}\n\nlet outStatsNBI_msgSpeed = {};\nlet outStatsNBI_msgsOverTime = {};\noutStatsNBI_msgsOverTime.payload = [];\nlet outStatsNBI_msgsSizeOverTime = {};\noutStatsNBI_msgsSizeOverTime.payload = [];\nif (isObjEmpty(statsNBI) || msg.enable == false) {\n    outStatsNBI_msgSpeed.payload = 0;\n    outStatsNBI_msgSpeed.ui_update = { \"max\": 100 };\n    outStatsNBI_msgsOverTime.payload = [];\n    outStatsNBI_msgsSizeOverTime.payload = [];\n\n\n} else {\n    outStatsNBI_msgSpeed.payload = statsNBI.msgSpeed;\n    outStatsNBI_msgsOverTime.payload = statsNBI.msgSpeed;\n    outStatsNBI_msgsSizeOverTime.payload = statsNBI.msgSize;\n\n}\n\nreturn [outStatsSBI_msgSpeed, outStatsSBI_msgsOverTime, outStatsNBI_msgSpeed, outStatsNBI_msgsOverTime, outStatsNBI_msgsSizeOverTime];\n\n\n\n",
        "outputs": 5,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 720,
        "wires": [
            [
                "8b1ddd1b6076a4ec"
            ],
            [
                "592a8d12e0705ea8"
            ],
            [
                "66868163a2a87a21"
            ],
            [
                "5c430c858afe61df"
            ],
            [
                "d055b0ab3e174e16"
            ]
        ]
    },
    {
        "id": "66868163a2a87a21",
        "type": "ui-gauge",
        "z": "1543d308b342690a",
        "name": "NorthboundGauge",
        "group": "2e560a461d849b04",
        "order": 1,
        "width": 3,
        "height": "4",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Northbound",
        "units": "msgs/1 min",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00f900"
            }
        ],
        "min": 0,
        "max": "420",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 710,
        "y": 780,
        "wires": []
    },
    {
        "id": "7897e5f9d24d31a3",
        "type": "link out",
        "z": "1543d308b342690a",
        "name": "link out 1",
        "mode": "return",
        "links": [],
        "x": 445,
        "y": 360,
        "wires": []
    },
    {
        "id": "8b1ddd1b6076a4ec",
        "type": "ui-gauge",
        "z": "1543d308b342690a",
        "name": "SouthboundGauge",
        "group": "fa3153f56f0dc028",
        "order": 1,
        "width": 3,
        "height": "4",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Southbound",
        "units": "msgs/1 min",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00f900"
            }
        ],
        "min": 0,
        "max": "420",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 710,
        "y": 700,
        "wires": []
    },
    {
        "id": "8cb87649afd62fd8",
        "type": "link in",
        "z": "1543d308b342690a",
        "name": "flexdash",
        "links": [],
        "x": 75,
        "y": 360,
        "wires": [
            [
                "7897e5f9d24d31a3",
                "535fefea3045516a",
                "f92ed2c964753a48"
            ]
        ]
    },
    {
        "id": "96843b0c361b50cd",
        "type": "function",
        "z": "1543d308b342690a",
        "name": "timestampToDatetime",
        "func": "const timestamp = msg.payload;\n\nconst timestampPlusOneHour = timestamp + 3600000;\n\nconst date = new Date(timestampPlusOneHour);\n\nconst formattedDate = date.toLocaleString();\n\nmsg.payload = formattedDate;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 60,
        "wires": [
            [
                "4559a7bfe7335fb6"
            ]
        ]
    },
    {
        "id": "a73adb6ccc517333",
        "type": "ui-switch",
        "z": "1543d308b342690a",
        "name": "Status",
        "label": "Stats ON/OFF",
        "group": "05a598e787528df2",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 810,
        "y": 120,
        "wires": [
            [
                "3b5c7f53a41bb6dc",
                "1e6c7a273cda476c"
            ]
        ]
    },
    {
        "id": "d055b0ab3e174e16",
        "type": "ui-chart",
        "z": "1543d308b342690a",
        "group": "2e560a461d849b04",
        "name": "NorthboundChart2",
        "label": "B/1 min",
        "order": 3,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "msg",
        "xAxisType": "time",
        "yAxisLabel": "",
        "yAxisProperty": "",
        "ymin": "",
        "ymax": "",
        "action": "append",
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "width": "3",
        "height": "4",
        "className": "",
        "x": 710,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "d6ebef8bfbac38d9",
        "type": "ui-gauge",
        "z": "1543d308b342690a",
        "name": "Nr of subscriptions",
        "group": "442bd3202a627b48",
        "order": 1,
        "width": 3,
        "height": "4",
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Active Subscriptions",
        "units": "Nr of subscriptions",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00f900"
            }
        ],
        "min": 0,
        "max": "7",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 870,
        "y": 440,
        "wires": []
    },
    {
        "id": "dd785b1b24fb2af7",
        "type": "function",
        "z": "1543d308b342690a",
        "name": "check subscriptions",
        "func": "function isObjEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\n\nlet status = context.global.get(\"statusCheckSBI\") || {};\nlet outMsg = {};\nif (isObjEmpty(status)) {\n    //outMsg.payload = 0;\n    outMsg.ui_update = { \"max\": 0 };\n    return outMsg;\n} else {\n    outMsg.payload = msg.payload.data;\n    outMsg.ui_update = { \"max\": status.nrOfDataSources };\n}\n\nreturn outMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 480,
        "wires": [
            [
                "d6ebef8bfbac38d9"
            ]
        ]
    },
    {
        "id": "f92ed2c964753a48",
        "type": "switch",
        "z": "1543d308b342690a",
        "name": "",
        "property": "payload.link",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "activeSubscriptions",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 480,
        "wires": [
            [
                "dd785b1b24fb2af7"
            ]
        ]
    },
    {
        "id": "fa84b4dea4c39af6",
        "type": "debug",
        "z": "1543d308b342690a",
        "name": "on/off switch",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 260,
        "wires": []
    },
    {
        "id": "04783421e5b9026b",
        "type": "Kafka Admin",
        "z": "3db1c009.99d51",
        "name": "",
        "broker": "6ff683fad530755b",
        "x": 990,
        "y": 1200,
        "wires": [
            [
                "8dcbaf6c67ef2ae4"
            ],
            [
                "0b49f5a71a590cb6"
            ]
        ]
    },
    {
        "id": "092c444b39d7671d",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 470,
        "y": 780,
        "wires": []
    },
    {
        "id": "0b49f5a71a590cb6",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1190,
        "y": 1220,
        "wires": []
    },
    {
        "id": "24179aae9a10d5f7",
        "type": "link in",
        "z": "3db1c009.99d51",
        "name": "encrypt in",
        "links": [],
        "x": 335,
        "y": 1620,
        "wires": [
            [
                "8692a308ffe9b589"
            ]
        ]
    },
    {
        "id": "29d98f1144bd68bb",
        "type": "link out",
        "z": "3db1c009.99d51",
        "name": "callNBI out",
        "mode": "return",
        "links": [],
        "x": 2195,
        "y": 140,
        "wires": []
    },
    {
        "id": "2a2379bd896bd5d3",
        "type": "comment",
        "z": "3db1c009.99d51",
        "name": "To MQTT",
        "info": "",
        "x": 1000,
        "y": 340,
        "wires": []
    },
    {
        "id": "2ac447e38ff068ba",
        "type": "inject",
        "z": "3db1c009.99d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "listTopics",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 1200,
        "wires": [
            [
                "04783421e5b9026b"
            ]
        ]
    },
    {
        "id": "30d7173d616dedec",
        "type": "link in",
        "z": "3db1c009.99d51",
        "name": "KAFKA in",
        "links": [],
        "x": 335,
        "y": 820,
        "wires": [
            [
                "5d339e7318eb4734",
                "092c444b39d7671d",
                "c6f95150480b2adf"
            ]
        ]
    },
    {
        "id": "411cbdf2e7b669be",
        "type": "mqtt out",
        "z": "3db1c009.99d51",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "e70d9188.7d95e",
        "x": 1830,
        "y": 460,
        "wires": []
    },
    {
        "id": "45c7bb3fdb70947c",
        "type": "link call",
        "z": "3db1c009.99d51",
        "name": "",
        "links": [
            "24179aae9a10d5f7"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1280,
        "y": 480,
        "wires": [
            [
                "7de52c9b9620a462"
            ]
        ]
    },
    {
        "id": "5360c0d6891e9fb7",
        "type": "inject",
        "z": "3db1c009.99d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "encrypt_cmd",
        "payload": "off",
        "payloadType": "str",
        "x": 610,
        "y": 1760,
        "wires": [
            [
                "a89170b27e831c5c"
            ]
        ]
    },
    {
        "id": "5b9a1bfddb52fef6",
        "type": "link out",
        "z": "3db1c009.99d51",
        "name": "encrypt out",
        "mode": "return",
        "links": [],
        "x": 1575,
        "y": 1620,
        "wires": []
    },
    {
        "id": "5d339e7318eb4734",
        "type": "link out",
        "z": "3db1c009.99d51",
        "name": "KAFKA out",
        "mode": "return",
        "links": [],
        "x": 1815,
        "y": 820,
        "wires": []
    },
    {
        "id": "68db3fe56b881c75",
        "type": "inject",
        "z": "3db1c009.99d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 540,
        "wires": [
            [
                "198f65a5af418152"
            ]
        ]
    },
    {
        "id": "6eeeab6dfeb25960",
        "type": "Kafka Producer",
        "z": "3db1c009.99d51",
        "name": "",
        "broker": "",
        "topic": "",
        "topicSlash2dot": false,
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "partitionerType": 0,
        "key": "",
        "partition": 0,
        "attributes": 0,
        "connectionType": "Producer",
        "convertFromJson": false,
        "x": 1520,
        "y": 900,
        "wires": []
    },
    {
        "id": "7a18f0a2c9f34dcd",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 2080,
        "wires": []
    },
    {
        "id": "7de52c9b9620a462",
        "type": "Load Balance",
        "z": "3db1c009.99d51",
        "defaultcapacity": 100,
        "dynamic": "d7e6d6dc.d37318",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 1580,
        "y": 420,
        "wires": [
            [],
            [
                "961e5989502b45f9",
                "bc4db7d796cfe8d3"
            ],
            [
                "411cbdf2e7b669be"
            ]
        ]
    },
    {
        "id": "802986f61fc9d518",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1210,
        "y": 1440,
        "wires": []
    },
    {
        "id": "8692a308ffe9b589",
        "type": "encrypt",
        "z": "3db1c009.99d51",
        "name": "",
        "algorithm": "AES",
        "key": "bd4nrg",
        "x": 940,
        "y": 1620,
        "wires": [
            [
                "5b9a1bfddb52fef6"
            ]
        ]
    },
    {
        "id": "8b50dd825e2ac7dc",
        "type": "Kafka Producer",
        "z": "3db1c009.99d51",
        "name": "",
        "broker": "",
        "topic": "",
        "topicSlash2dot": false,
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "partitionerType": 0,
        "key": "",
        "partition": 0,
        "attributes": 0,
        "connectionType": "Producer",
        "convertFromJson": false,
        "x": 1520,
        "y": 960,
        "wires": []
    },
    {
        "id": "8db2cd280f2c6c33",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 1740,
        "wires": []
    },
    {
        "id": "8dcbaf6c67ef2ae4",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1190,
        "y": 1180,
        "wires": []
    },
    {
        "id": "8e44c67736d4e9ae",
        "type": "link in",
        "z": "3db1c009.99d51",
        "name": "MQTT in",
        "links": [],
        "x": 335,
        "y": 300,
        "wires": [
            [
                "96889178a4b233f6",
                "cde2fdea5a797ff6",
                "078018eff20964bb"
            ]
        ]
    },
    {
        "id": "937a39644144b852",
        "type": "link call",
        "z": "3db1c009.99d51",
        "name": "",
        "links": [
            "8e44c67736d4e9ae"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1160,
        "y": 80,
        "wires": [
            [
                "29d98f1144bd68bb"
            ]
        ]
    },
    {
        "id": "961e5989502b45f9",
        "type": "mqtt out",
        "z": "3db1c009.99d51",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "e70d9188.7d95e",
        "x": 1830,
        "y": 380,
        "wires": []
    },
    {
        "id": "96889178a4b233f6",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 550,
        "y": 220,
        "wires": []
    },
    {
        "id": "99b95b4d975cf063",
        "type": "link in",
        "z": "3db1c009.99d51",
        "name": "callNBI in",
        "links": [],
        "x": 255,
        "y": 120,
        "wires": [
            [
                "b75adddeb2fb3e6d"
            ]
        ]
    },
    {
        "id": "9ce5fa4b1ca22e59",
        "type": "switch",
        "z": "3db1c009.99d51",
        "name": "",
        "property": "encrypt",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 920,
        "wires": [
            [
                "f2691110f2923b4c"
            ],
            [
                "b278d6abfcbfcdfc"
            ]
        ]
    },
    {
        "id": "a358175dc5be21b6",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1310,
        "y": 340,
        "wires": []
    },
    {
        "id": "a89170b27e831c5c",
        "type": "function",
        "z": "3db1c009.99d51",
        "name": "Encryption",
        "func": "if(msg.topic === \"encrypt_cmd\"){\n    if(msg.payload === \"on\"){\n        context.flow.set(\"encrypt\", true);\n    } else if (msg.payload === \"off\") {\n        context.flow.set(\"encrypt\", false);\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1740,
        "wires": [
            [
                "8db2cd280f2c6c33"
            ]
        ]
    },
    {
        "id": "b278d6abfcbfcdfc",
        "type": "link call",
        "z": "3db1c009.99d51",
        "name": "",
        "links": [
            "24179aae9a10d5f7"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1040,
        "y": 980,
        "wires": [
            [
                "f2691110f2923b4c"
            ]
        ]
    },
    {
        "id": "b75adddeb2fb3e6d",
        "type": "msg-router",
        "z": "3db1c009.99d51",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": false,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": false,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 3,
        "x": 590,
        "y": 120,
        "wires": [
            [
                "937a39644144b852"
            ],
            [
                "ed2c7ff5741eb991"
            ],
            []
        ]
    },
    {
        "id": "bc4db7d796cfe8d3",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1510,
        "y": 320,
        "wires": []
    },
    {
        "id": "c46120c57b198d8f",
        "type": "Kafka Consumer",
        "z": "3db1c009.99d51",
        "name": "",
        "broker": "",
        "regex": false,
        "topics": [
            {
                "topic": "",
                "offset": 0,
                "partition": 0
            }
        ],
        "groupId": "kafka-node-group",
        "autoCommit": "true",
        "autoCommitIntervalMs": 5000,
        "fetchMaxWaitMs": 100,
        "fetchMinBytes": 1,
        "fetchMaxBytes": 1048576,
        "fromOffset": 0,
        "encoding": "utf8",
        "keyEncoding": "utf8",
        "connectionType": "Consumer",
        "convertToJson": false,
        "x": 950,
        "y": 1440,
        "wires": [
            [
                "802986f61fc9d518"
            ]
        ]
    },
    {
        "id": "cde2fdea5a797ff6",
        "type": "link out",
        "z": "3db1c009.99d51",
        "name": "MQTT out",
        "mode": "return",
        "links": [],
        "x": 1775,
        "y": 300,
        "wires": []
    },
    {
        "id": "d8de01844ad18dbc",
        "type": "debug",
        "z": "3db1c009.99d51",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1210,
        "y": 860,
        "wires": []
    },
    {
        "id": "dcb7263cc5550382",
        "type": "link call",
        "z": "3db1c009.99d51",
        "name": "",
        "links": [
            "a945157b859dd5e1"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1710,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "dceb9cccc856bdb6",
        "type": "inject",
        "z": "3db1c009.99d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 2020,
        "wires": [
            [
                "dcb7263cc5550382",
                "7a18f0a2c9f34dcd"
            ]
        ]
    },
    {
        "id": "e33e736251599ab4",
        "type": "switch",
        "z": "3db1c009.99d51",
        "name": "",
        "property": "encrypt",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 420,
        "wires": [
            [
                "7de52c9b9620a462"
            ],
            [
                "45c7bb3fdb70947c"
            ]
        ]
    },
    {
        "id": "ed2c7ff5741eb991",
        "type": "link call",
        "z": "3db1c009.99d51",
        "name": "",
        "links": [
            "30d7173d616dedec"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1160,
        "y": 140,
        "wires": [
            [
                "29d98f1144bd68bb"
            ]
        ]
    },
    {
        "id": "f2691110f2923b4c",
        "type": "Load Balance",
        "z": "3db1c009.99d51",
        "defaultcapacity": 100,
        "dynamic": "d7e6d6dc.d37318",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 1240,
        "y": 920,
        "wires": [
            [],
            [
                "6eeeab6dfeb25960"
            ],
            [
                "8b50dd825e2ac7dc"
            ]
        ]
    },
    {
        "id": "f9b5420cad128eaf",
        "type": "inject",
        "z": "3db1c009.99d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "encrypt_cmd",
        "payload": "on",
        "payloadType": "str",
        "x": 600,
        "y": 1720,
        "wires": [
            [
                "a89170b27e831c5c"
            ]
        ]
    },
    {
        "id": "078018eff20964bb",
        "type": "function",
        "z": "3db1c009.99d51",
        "name": "event Processing",
        "func": "function splitOnce(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index === -1) {\n        return [str]; // Return the original string in an array if the delimiter is not found\n    }\n    return [str.slice(0, index), str.slice(index + delimiter.length)];\n}\n\nvar msg1 = {};\nlet observation = {};\nobservation.id = msg.id;\nobservation.source = msg.source;\nobservation.direction = msg.direction;\nobservation.observableReference = msg.observableReference;\nobservation.timestamp = msg.timestamp;\nobservation.payload = msg.payload;\nobservation.topic = msg.topic;\n//msg1.topic = context.global.get('AASIdentifier');\nif (msg.topic == \"\" || typeof msg.topic == \"undefined\") {\n    let topic_processing = msg.observableReference.replace(\"https://\", \"\");\n    topic_processing = topic_processing.replace(\"http://\", \"\");\n    const regex = /\\./g;\n    topic_processing.replace(regex, \"/\")\n    let topic_processing_splitted = splitOnce(topic_processing, \"/\"); \n    let topic = \"aas/\" + topic_processing_splitted[0] + \"/sm/\" + topic_processing_splitted[1];\n\n    msg1.topic = topic;\n    msg1.payload = observation;\n} else {\n    msg1.topic = msg.topic;\n    msg1.payload = observation;\n}\nreturn msg1;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 420,
        "wires": [
            [
                "a358175dc5be21b6",
                "e33e736251599ab4"
            ]
        ]
    },
    {
        "id": "198f65a5af418152",
        "type": "function",
        "z": "3db1c009.99d51",
        "name": "event Processing",
        "func": "function splitOnce(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index === -1) {\n        return [str]; // Return the original string in an array if the delimiter is not found\n    }\n    return [str.slice(0, index), str.slice(index + delimiter.length)];\n}\n\nvar msg1 = {};\nlet observation = {};\nobservation.id = msg.id;\nobservation.source = msg.source;\nobservation.direction = msg.direction;\nobservation.observableReference = msg.observableReference;\nobservation.timestamp = msg.timestamp;\nobservation.payload = msg.payload;\nobservation.topic = msg.topic;\n//msg1.topic = context.global.get('AASIdentifier');\nif (msg.topic == \"\" || typeof msg.topic == \"undefined\") {\n    let topic_processing = msg.observableReference.replace(\"https://\", \"\");\n    topic_processing = topic_processing.replace(\"http://\", \"\");\n    const regex = /\\./g;\n    topic_processing.replace(regex, \"/\")\n    let topic_processing_splitted = splitOnce(topic_processing, \"/\");\n    let topic = \"aas/\" + topic_processing_splitted[0] + \"/sm/\" + topic_processing_splitted[1];\n\n    msg1.topic = topic;\n    msg1.payload = observation;\n} else {\n    msg1.topic = msg.topic;\n    msg1.payload = observation;\n}\nreturn msg1;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 540,
        "wires": [
            [
                "e33e736251599ab4"
            ]
        ]
    },
    {
        "id": "c6f95150480b2adf",
        "type": "function",
        "z": "3db1c009.99d51",
        "name": "event Processing",
        "func": "function splitOnce(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index === -1) {\n        return [str]; // Return the original string in an array if the delimiter is not found\n    }\n    return [str.slice(0, index), str.slice(index + delimiter.length)];\n}\n\nvar msg1 = {};\nlet observation = {};\nobservation.id = msg.id;\nobservation.source = msg.source;\nobservation.direction = msg.direction;\nobservation.observableReference = msg.observableReference;\nobservation.timestamp = msg.timestamp;\nobservation.payload = msg.payload;\nobservation.topic = msg.topic;\n//msg1.topic = context.global.get('AASIdentifier');\nif (msg.topic == \"\" || typeof msg.topic == \"undefined\") {\n    let topic_processing = msg.observableReference.replace(\"https://\", \"\");\n    topic_processing = topic_processing.replace(\"http://\", \"\");\n    const regex = /\\./g;\n    topic_processing.replace(regex, \"/\")\n    let topic_processing_splitted = splitOnce(topic_processing, \"/\");\n    let topic = \"aas/\" + topic_processing_splitted[0] + \"/sm/\" + topic_processing_splitted[1];\n\n    msg1.topic = topic;\n    msg1.payload = observation;\n} else {\n    msg1.topic = msg.topic;\n    msg1.payload = observation;\n}\nreturn msg1;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 860,
        "wires": [
            [
                "9ce5fa4b1ca22e59"
            ]
        ]
    },
    {
        "id": "02bb228b85db556d",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "callSBIReadSubscriptions in",
        "links": [],
        "x": 280,
        "y": 1100,
        "wires": [
            [
                "3c4d0520.a593ba"
            ]
        ],
        "l": true
    },
    {
        "id": "05f103af299b62e2",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "southbound.routed out",
        "mode": "return",
        "links": [],
        "x": 465,
        "y": 1020,
        "wires": []
    },
    {
        "id": "0ae4afa7de3588c6",
        "type": "sqlite",
        "z": "670d9c89.6d0424",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1150,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "125cba557ead93be",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "callSBIReadSubscriptions out",
        "mode": "return",
        "links": [],
        "x": 1885,
        "y": 1100,
        "wires": []
    },
    {
        "id": "1507dd29d9896744",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "southbound.routed",
        "links": [],
        "x": 250,
        "y": 620,
        "wires": [
            [
                "bb464dc962e986c0"
            ]
        ],
        "l": true
    },
    {
        "id": "1cd120a.1a88b5f",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "checkHealthStatus",
        "func": "var statusCheck = msg.payload.statusCheck;\ncontext.global.set(\"statusCheckSBI\", statusCheck);\nmsg.payload = { \"statusCheckSBI\": statusCheck };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 1220,
        "wires": [
            [
                "796fdeb5.8f68b8"
            ]
        ]
    },
    {
        "id": "1ec43281754fe568",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 1340,
        "wires": []
    },
    {
        "id": "1ee9cdfac8c39c44",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "UpdateSubscriptions",
        "func": "var subscriptions = context.flow.get(\"subscriptions\");\nvar subscription = msg.payload.observableReference;\nif (msg.topic === \"observe\") {\n    if (subscriptions.includes(subscription)) return null;\n    else {\n        subscriptions.push(subscription);\n        context.flow.set(\"subscriptions\", subscriptions);\n        return msg;\n    }\n} else if (msg.topic === \"unobserve\") {\n    if (subscriptions.length > 0) {\n        for (var index = 0; index < subscriptions.length; index++) {        \n            if (subscriptions[index] === subscription) {\n                subscriptions.splice(index, 1);\n                context.flow.set(\"subscriptions\", subscriptions);\n                return msg;\n            }\n        }\n    }\n\n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 1400,
        "wires": [
            [
                "658d3def08041704",
                "46a5a9b368202acd"
            ]
        ]
    },
    {
        "id": "1fc06f6a8f3492b8",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "updateValueCallback",
        "mode": "link",
        "links": [
            "7b48ced64946a8d2"
        ],
        "x": 1895,
        "y": 980,
        "wires": []
    },
    {
        "id": "27003dfc19eeaf18",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 960,
        "wires": []
    },
    {
        "id": "2c43db2c.fe9c9c",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "stats",
        "func": "let subscriptions = context.flow.get(\"subscriptions\");\nif(subscriptions.length > 0){\n    let stats = context.global.get(\"statsNBI\");\n    let msgSize = msg.averageMsgSize;\n    let msgSizeIntervalAndFrequency = msg.intervalAndFrequency;\n    stats.msgSize = msgSize;\n    stats.msgSizeIntervalAndFrequency = msgSizeIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n} else {\n    let stats = context.global.get(\"statsNBI\");\n    let msgSize = 0;\n    let msgSizeIntervalAndFrequency = \"n/a\";\n    stats.msgSize = msgSize;\n    stats.msgSizeIntervalAndFrequency = msgSizeIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1950,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "35ab961d.d6237a",
        "type": "msg-size",
        "z": "670d9c89.6d0424",
        "name": "",
        "frequency": "min",
        "interval": 1,
        "statusContent": "avg",
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "humanReadableStatus": true,
        "x": 1700,
        "y": 600,
        "wires": [
            [
                "2c43db2c.fe9c9c"
            ],
            [
                "e05fcd52.be3ca8"
            ]
        ]
    },
    {
        "id": "36f799fe398b26b2",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 710,
        "y": 580,
        "wires": []
    },
    {
        "id": "3abd27719863de64",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "southbound.metrics",
        "links": [],
        "x": 250,
        "y": 860,
        "wires": [
            [
                "e35d4cb1f2b5081a"
            ]
        ],
        "l": true
    },
    {
        "id": "3b16557852968add",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "southbound.resetSebscriptions",
        "links": [],
        "x": 290,
        "y": 1480,
        "wires": [
            [
                "a3c38653d83ba91e"
            ]
        ],
        "l": true
    },
    {
        "id": "3c4d0520.a593ba",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "getSubscriptions",
        "func": "var subscriptions = context.flow.get(\"subscriptions\") || [];\nmsg.payload = subscriptions;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 1100,
        "wires": [
            [
                "125cba557ead93be"
            ]
        ]
    },
    {
        "id": "4380234d202dd256",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "southbound.routed out",
        "mode": "return",
        "links": [],
        "x": 465,
        "y": 680,
        "wires": []
    },
    {
        "id": "46a5a9b368202acd",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "southbound.updateSubscriptions",
        "mode": "return",
        "links": [],
        "x": 1875,
        "y": 1400,
        "wires": []
    },
    {
        "id": "4ee113af.7624f4",
        "type": "inject",
        "z": "670d9c89.6d0424",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "connectionStatusCheck",
        "payloadType": "str",
        "x": 360,
        "y": 1220,
        "wires": [
            [
                "ee3040f0bd4fbbdf"
            ]
        ]
    },
    {
        "id": "4fc7fe8f.a5bc58",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1590,
        "y": 560,
        "wires": []
    },
    {
        "id": "5d86388d.5f97d",
        "type": "Load Balance",
        "z": "670d9c89.6d0424",
        "defaultcapacity": 100,
        "dynamic": "d7e6d6dc.d37318",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 1120,
        "y": 620,
        "wires": [
            [],
            [
                "cf377a9a.6c438"
            ],
            [
                "b33ebee8.a7fa18"
            ]
        ]
    },
    {
        "id": "658d3def08041704",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 1360,
        "wires": []
    },
    {
        "id": "65e9dd4ea589116f",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1500,
        "wires": []
    },
    {
        "id": "66816677.7a4348",
        "type": "msg-speed",
        "z": "670d9c89.6d0424",
        "name": "",
        "frequency": "min",
        "interval": "1",
        "estimation": true,
        "ignore": false,
        "x": 910,
        "y": 620,
        "wires": [
            [
                "b0715b05.2c6488"
            ],
            [
                "5d86388d.5f97d"
            ]
        ]
    },
    {
        "id": "6f094db8.345924",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "flowVariables",
        "func": "context.flow.set('subscriptions', []);\ncontext.global.set('statusCheckSBI', \"\");",
        "outputs": 1,
        "noerr": 0,
        "x": 810.3273315429688,
        "y": 75.85719299316406,
        "wires": [
            []
        ]
    },
    {
        "id": "796fdeb5.8f68b8",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "status_SBI_Out",
        "links": [
            "d7f84005.ce11e8"
        ],
        "x": 1875,
        "y": 1220,
        "wires": []
    },
    {
        "id": "7d0ec41d.2d0d8c",
        "type": "comment",
        "z": "670d9c89.6d0424",
        "name": "Internal Interface Entry Point",
        "info": "",
        "x": 260,
        "y": 20,
        "wires": []
    },
    {
        "id": "8ba74a55.e37468",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 900,
        "wires": []
    },
    {
        "id": "921dd9207d4fd2a3",
        "type": "link call",
        "z": "670d9c89.6d0424",
        "name": "",
        "links": [],
        "linkType": "dynamic",
        "timeout": "30",
        "x": 1140,
        "y": 1220,
        "wires": [
            [
                "1cd120a.1a88b5f",
                "e0c0795b.6a17b8"
            ]
        ]
    },
    {
        "id": "9231865ff3148b49",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "southbound.updateSubscriptions",
        "links": [],
        "x": 290,
        "y": 1400,
        "wires": [
            [
                "c51eb8701d678fcf",
                "1ee9cdfac8c39c44",
                "1ec43281754fe568"
            ]
        ],
        "l": true
    },
    {
        "id": "a1e4b28.4d15dd",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 860,
        "wires": []
    },
    {
        "id": "a3c38653d83ba91e",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "ResetSubscriptions",
        "func": "context.flow.set(\"subscriptions\", []);\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 1480,
        "wires": [
            [
                "bbd803fb8d0f8ede",
                "65e9dd4ea589116f"
            ]
        ]
    },
    {
        "id": "a81af3fe552c97a0",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "southbound.routed out",
        "mode": "return",
        "links": [],
        "x": 465,
        "y": 900,
        "wires": []
    },
    {
        "id": "a945157b859dd5e1",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "southbound.send.commands",
        "links": [],
        "x": 280,
        "y": 1720,
        "wires": [
            [
                "ab6759f66a906482"
            ]
        ],
        "l": true
    },
    {
        "id": "ab6759f66a906482",
        "type": "link call",
        "z": "670d9c89.6d0424",
        "name": "",
        "links": [
            "72693a70ea801745"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1130,
        "y": 1720,
        "wires": [
            [
                "cd6f2a247f2e7f66"
            ]
        ]
    },
    {
        "id": "af4b6639.02a008",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "InvokeInternalDriver",
        "func": "msg.source = context.global.get('AASIdentifier');\nmsg.staticDocs = context.global.get(\"staticDocs\");\nmsg.topic = \"request\";\nvar af = context.global.get(\"actionflows\");\nvar link = msg.req.params.aasid + \"/\" + msg.req.params.submodelId + \"/\" + msg.req.params.id;\nvar action_ = af.invoke(link, msg);\naction_.then(function(msg){\n    node.send(msg);\n});\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b0715b05.2c6488",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "stats",
        "func": "let subscriptions = context.flow.get(\"subscriptions\");\nif(subscriptions.length > 0){\n    let stats = context.global.get(\"statsNBI\") || {};\n    let msgSpeed = msg.payload;\n    let msgIntervalAndFrequency = msg.intervalAndFrequency;\n    stats.msgSpeed = msgSpeed;\n    stats.IntervalAndFrequency = msgIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n} else {\n    let stats = context.global.get(\"statsNBI\") || {};\n    let msgSpeed = 0;\n    let msgIntervalAndFrequency = \"n/a\";\n    stats.msgSpeed = msgSpeed;\n    stats.IntervalAndFrequency = msgIntervalAndFrequency;\n    context.global.set(\"statsNBI\", stats);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b21cf6aa08b3e9e4",
        "type": "link in",
        "z": "670d9c89.6d0424",
        "name": "southbound.updateValue",
        "links": [],
        "x": 270,
        "y": 980,
        "wires": [
            [
                "201be4c08d5d19e0"
            ]
        ],
        "l": true
    },
    {
        "id": "b33ebee8.a7fa18",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "prepare Observation",
        "func": "//var observation = JSON.parse(msg.payload);\nvar subscriptions = context.flow.get(\"subscriptions\");\nvar outMsgs = [];\nfor (var subscription = 0; subscription < subscriptions.length; subscription++) {\n    //var splittedSubscription = subscriptions[subscription].split(\";\");\n    //if (msg.payload.source.includes(splittedSubscription[0]) && msg.payload.source.includes(splittedSubscription[1]) && msg.payload.source.includes(splittedSubscription[2])){\n    if (msg.payload.source.includes(subscriptions[subscription])) {\n        var observation = msg.payload;\n        //observation.source = context.global.get(\"AASIdentifier\");\n        var outMsg = observation;\n        outMsgs.push(outMsg);\n        //msg.topic = splittedSubscription[3];\n    }\n}\n//var observation = msg.payload;\n//observation.source = context.global.get(\"AASIdentifier\");\n//msg.payload = observation;\n//return msg;\nreturn [outMsgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 640,
        "wires": [
            [
                "35ab961d.d6237a"
            ]
        ]
    },
    {
        "id": "bbd803fb8d0f8ede",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "southbound.resetSebscriptions out",
        "mode": "return",
        "links": [],
        "x": 1875,
        "y": 1480,
        "wires": []
    },
    {
        "id": "bc85e755bd96a45e",
        "type": "comment",
        "z": "670d9c89.6d0424",
        "name": "To be used in the case of event-based communication for receving events",
        "info": "",
        "x": 420,
        "y": 1680,
        "wires": []
    },
    {
        "id": "c51eb8701d678fcf",
        "type": "function",
        "z": "670d9c89.6d0424",
        "name": "prepare INSERT Statement",
        "func": "let observation = msg.payload;\nmsg.topic = \"INSERT INTO aasLogs (aasId, observableRef, timestamp, value) VALUES ($aasId, $observableRef, $timestamp, $value)\";\nmsg.payload = [context.global.get('AASIdentifier'), observation.observableReference, observation.timestamp, observation.payload];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1340,
        "wires": [
            [
                "0ae4afa7de3588c6"
            ]
        ]
    },
    {
        "id": "c9d662c9.664cf",
        "type": "inject",
        "z": "670d9c89.6d0424",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 225.952392578125,
        "y": 75.857177734375,
        "wires": [
            [
                "6f094db8.345924"
            ]
        ]
    },
    {
        "id": "cd6f2a247f2e7f66",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "southbound.send.commands out",
        "mode": "return",
        "links": [],
        "x": 1865,
        "y": 1720,
        "wires": []
    },
    {
        "id": "cf377a9a.6c438",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "prepare Observation",
        "func": "//var observation = JSON.parse(msg.payload);\nvar subscriptions = context.flow.get(\"subscriptions\");\nvar outMsgs = [];\nfor (var subscription = 0; subscription < subscriptions.length; subscription++) {\n    //var splittedSubscription = subscriptions[subscription].split(\";\");\n    //if (msg.payload.source.includes(splittedSubscription[0]) && msg.payload.source.includes(splittedSubscription[1]) && msg.payload.source.includes(splittedSubscription[2])){\n    if (msg.payload.source.includes(subscriptions[subscription])) {\n        var observation = msg.payload;\n        //observation.source = context.global.get(\"AASIdentifier\");\n        var outMsg = observation;\n        outMsgs.push(outMsg);\n        //msg.topic = splittedSubscription[3];\n    }\n}\n//var observation = msg.payload;\n//observation.source = context.global.get(\"AASIdentifier\");\n//msg.payload = observation;\n//return msg;\nreturn [outMsgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 600,
        "wires": [
            [
                "4fc7fe8f.a5bc58",
                "35ab961d.d6237a"
            ]
        ]
    },
    {
        "id": "e05fcd52.be3ca8",
        "type": "link out",
        "z": "670d9c89.6d0424",
        "name": "routedCallback",
        "mode": "link",
        "links": [
            "3e11fc1c.d74334"
        ],
        "x": 1995,
        "y": 620,
        "wires": []
    },
    {
        "id": "e0c0795b.6a17b8",
        "type": "debug",
        "z": "670d9c89.6d0424",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ee3040f0bd4fbbdf",
        "type": "function",
        "z": "670d9c89.6d0424",
        "name": "call driver for getting Connection Status",
        "func": "msg.target = \"driver.connection.check\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1220,
        "wires": [
            [
                "921dd9207d4fd2a3"
            ]
        ]
    },
    {
        "id": "eeab441ae2b4c1e1",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "prepareUpdate",
        "func": "var update = {};\nupdate.link = msg.payload.link;\nupdate.value = msg.payload.data;\nupdate.content = \"value\";\nreturn update;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 980,
        "wires": [
            [
                "27003dfc19eeaf18",
                "1fc06f6a8f3492b8"
            ]
        ]
    },
    {
        "id": "fbd472e7.d10f48",
        "type": "unsafe-function",
        "z": "670d9c89.6d0424",
        "name": "set Stats SBI Variable",
        "func": "context.global.set(\"statsSBI\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 860,
        "wires": [
            [
                "a1e4b28.4d15dd"
            ]
        ]
    },
    {
        "id": "012ebb5641006b90",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "removeSubmodel in",
        "links": [],
        "x": 315,
        "y": 840,
        "wires": [
            [
                "608d01fd6a3d76b7"
            ]
        ]
    },
    {
        "id": "02157f126a36c845",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "73fa67f7ce94427b"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 750,
        "y": 1520,
        "wires": [
            [
                "37b3dae381c34ec2",
                "f416fff6010dbb4f"
            ]
        ]
    },
    {
        "id": "06cdab4690033b11",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "updateSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1500,
        "wires": []
    },
    {
        "id": "0c6d65d1dcab6fee",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "73fa67f7ce94427b"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 750,
        "y": 2140,
        "wires": [
            [
                "8de067076149825d"
            ]
        ]
    },
    {
        "id": "0e55b7ef64843da7",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "Adding Concept Description",
        "func": "var manifest = context.flow.get(\"manifest\");\nvar descriptions = manifest.conceptDescriptions;\nvar newDescription = msg.conceptDescription;\nfor (let descriptionIndex = 0; descriptionIndex < descriptions.length; descriptionIndex++){\n    if (descriptions[descriptionIndex].identification.id == newDescription.identification.id){\n        msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Error Concept Description with ID already exists\", \"Timestamp\": Date.now() }] };\n        msg.statusCode = \"400\";\n        return msg;\n    }\n}\nmsg.statusCode = \"200\";\nmanifest.conceptDescriptions.push(msg.payload);\ncontext.flow.set(\"manifest\", manifest);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1820,
        "wires": [
            [
                "9dfa1a9a.a3b8d8"
            ]
        ]
    },
    {
        "id": "0e6dba6f13a192ce",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 640,
        "wires": []
    },
    {
        "id": "0f43bd0ecaaa73ea",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readAssets out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 360,
        "wires": []
    },
    {
        "id": "10b11772197e8f3e",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readAasSubmodels out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 560,
        "wires": []
    },
    {
        "id": "16aaa0fd22061e5e",
        "type": "change",
        "z": "7585249f.880c0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "submodelElementId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 2100,
        "wires": [
            [
                "73183c0e7e10afe5"
            ]
        ]
    },
    {
        "id": "183a7366ee87aed5",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "removeSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1380,
        "wires": [
            [
                "34680c353b2fda57"
            ]
        ]
    },
    {
        "id": "19cf7aace4a280db",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1650,
        "y": 2100,
        "wires": [
            [
                "c7789bcaee9c8777",
                "eda11e1af3a33633",
                "4e93dd24164082a2"
            ],
            [
                "eda11e1af3a33633",
                "c7789bcaee9c8777"
            ]
        ]
    },
    {
        "id": "1e83a689.597559",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "ReadSubmodel",
        "func": "var ShellId = msg.req.params.id;\nif(msg.jsonataStatus == \"Success\"){\n    msg.payload = msg.jsonataResult;\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Asset Administration Shell with id:\" + ShellId + \" not found\", \"Timestamp\": Date.now() } ] };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 560,
        "wires": [
            [
                "10b11772197e8f3e"
            ]
        ]
    },
    {
        "id": "20aa7bb66b4bf13e",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "function 1",
        "func": "function getFlatObject(object) {\n    function iter(o, p) {\n        if (o && typeof o === 'object') {\n            Object.keys(o).forEach(function (k) {\n                iter(o[k], p.concat(k));\n            });\n            return;\n        }\n        path[p.join('.')] = o;\n    }\n\n    var path = {};\n    iter(object, []);\n    return path;\n}\n\nlet manifest = context.flow.get(\"manifest\");\nlet flattenObject = getFlatObject(manifest);\nmsg.payload = flattenObject;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 2260,
        "wires": [
            [
                "20eb23e457527d08"
            ]
        ]
    },
    {
        "id": "20eb23e457527d08",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2260,
        "wires": []
    },
    {
        "id": "2260c322068373cd",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readSubmodels out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 500,
        "wires": []
    },
    {
        "id": "22676ba099ea6e73",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 2250,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "23e08773.bbef88",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "submodelElement",
        "func": "msg.submodelElement = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 1260,
        "wires": [
            [
                "a43738e6d134a0e4"
            ]
        ]
    },
    {
        "id": "24f12c469a065810",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 420,
        "wires": []
    },
    {
        "id": "2a0df1842c81dcd2",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readShells out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 300,
        "wires": []
    },
    {
        "id": "2e0bc58c812ae978",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readSubmodels in",
        "links": [],
        "x": 315,
        "y": 500,
        "wires": [
            [
                "ec827ecb.501e9"
            ]
        ]
    },
    {
        "id": "2e0ef87ae37655e9",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 2350,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "2fc9f75cb156754d",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readAssets in",
        "links": [],
        "x": 315,
        "y": 360,
        "wires": [
            [
                "3de9055d88bf3d72"
            ]
        ]
    },
    {
        "id": "34680c353b2fda57",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "86b4b166afaa8721"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 850,
        "y": 1380,
        "wires": [
            [
                "395b75cf.7d610a"
            ]
        ]
    },
    {
        "id": "37b3dae381c34ec2",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1440,
        "wires": []
    },
    {
        "id": "3804b824.0a40d8",
        "type": "change",
        "z": "7585249f.880c0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_2\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 180,
        "wires": [
            [
                "821c43fa.7502b"
            ]
        ]
    },
    {
        "id": "38ed1e42ac4fb036",
        "type": "change",
        "z": "7585249f.880c0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "conceptDescription",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 1820,
        "wires": [
            [
                "0e55b7ef64843da7"
            ]
        ]
    },
    {
        "id": "395b75cf.7d610a",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1380,
        "wires": [
            [
                "96ff73d.313f69"
            ],
            [
                "cbfa3c93a83bddd6"
            ]
        ]
    },
    {
        "id": "39980413b1dc2403",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 620,
        "wires": []
    },
    {
        "id": "3ae2508615759ff1",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "addSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 720,
        "wires": []
    },
    {
        "id": "3bfd1d54ac6a712e",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "86b4b166afaa8721"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1530,
        "y": 1620,
        "wires": [
            [
                "e18a6480a564220d"
            ]
        ]
    },
    {
        "id": "3cf9675a.eb4928",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 1480,
        "wires": [
            [
                "9d52563a1d0e86d3"
            ],
            [
                "06cdab4690033b11"
            ]
        ]
    },
    {
        "id": "3de9055d88bf3d72",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "Getting aas aaset keys",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor (var indexShell = 0; indexShell < shells.length; indexShell++){\n    let id = shells[indexShell].identification.id;\n    if(id == ShellId){\n        msg.jsonataResult = shells[indexShell].asset.keys;\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\nmsg.jsonataStatus = \"Failure\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 360,
        "wires": [
            [
                "9af1e8ba.14f4a8",
                "f308240a.bf55c"
            ]
        ]
    },
    {
        "id": "3e922de3b2450eba",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "Getting aas submodels key",
        "func": "var ShellId = msg.req.params.aasid;\nvar submodelFromPayload = msg.payload;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor (var indexShell = 0; indexShell < shells.length; indexShell++) {\n    let id = shells[indexShell].identification.id;\n    if (id == ShellId) {\n        let submodels = shells[indexShell].submodels;\n        for (var indexSubmodel = 0; indexSubmodel < submodels.length; indexSubmodel++) {\n            var submodelKeys = submodels[indexSubmodel].keys;\n            for (var indexKey = 0; indexKey < submodelKeys.length; indexKey++) {\n                let keyId = submodelKeys[indexKey].value;\n                if (keyId == submodelFromPayload.identification.id){\n                    msg.jsonataStatus = \"Success\";\n                    return msg;\n                }\n            }\n        }\n    }\n}\n\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 720,
        "wires": [
            [
                "643649a5.2eddb8",
                "baa39adde9859415"
            ]
        ]
    },
    {
        "id": "3ef1dfccaa2aa8e1",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2380,
        "y": 2040,
        "wires": []
    },
    {
        "id": "3f7f7d86b973187a",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "Getting aas submodels",
        "func": "var submodelFromPayload = msg.payload;\nvar manifest = context.flow.get('manifest');\n\nvar submodels = manifest.submodels;\n\nfor (var indexSubmodel = 0; indexSubmodel < submodels.length; indexSubmodel++){\n    let id = submodels[indexSubmodel].identification.id;\n    if (id == submodelFromPayload.identification.id){\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 980,
        "wires": [
            [
                "4b7901f0.6bbe8",
                "47c2f73e75854e7f"
            ]
        ]
    },
    {
        "id": "40913d2d8a161a11",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readAas in",
        "links": [],
        "x": 315,
        "y": 440,
        "wires": [
            [
                "6d353eca41c7f3c2"
            ]
        ]
    },
    {
        "id": "46864302963bba04",
        "type": "file",
        "z": "7585249f.880c0c",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1340,
        "y": 1920,
        "wires": [
            [
                "f3d77d2c4bd793f1"
            ]
        ]
    },
    {
        "id": "47c2f73e75854e7f",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 930,
        "y": 960,
        "wires": []
    },
    {
        "id": "47dbd85db98e87d7",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1410,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "48e654a6.f98c5c",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "ReadSubmodelElement",
        "func": "var iterate = function(submodelElementId, collectionIds, submodelElements){\n    for(var index = 0; index < submodelElements.length; index++) {\n        var submodelElement = submodelElements[index];\n        if ((submodelElement.modelType.name !== \"SubmodelElementCollection\" && collectionIds.length == 0) || (submodelElement.modelType.name === \"SubmodelElementCollection\" && collectionIds.length < 1)){\n               if(submodelElement.idShort === submodelElementId){\n                    return submodelElement;\n                    \n                }\n            \n            }  else {\n                for(var collIndex = 0; collIndex < collectionIds.length; collIndex++){\n                    var collectionId = collectionIds[collIndex];\n                    if(submodelElement.idShort === collectionId){\n                        collectionIds.splice(collIndex, 1);\n                        var result = iterate(submodelElementId, collectionIds, submodelElement.value);\n                        return result;\n                }\n                }\n                \n            }\n    }\n    return \"\";\n}\n\nvar submodelElementId = msg.req.params.id;\nvar submodelId = msg.req.params.submodelId;\n\nvar submodelCollectionId = [];\nvar splittedSubmodel = submodelElementId.split(\".\");\n//submodelId = splittedSubmodel[0];\n\nif(splittedSubmodel.length > 1){\n    for(var index = 0; index < splittedSubmodel.length; index++){\n\n        if(index < (splittedSubmodel.length - 1)){\n            submodelCollectionId.push(splittedSubmodel[index]);\n        } else {\n            submodelElementId = splittedSubmodel[index];\n        }\n    }\n}\n\nvar selectedSubmodels = [];\nvar selctedSubmodelElements = [];\nif(msg.jsonataStatus == \"Success\"){\n    var submodels = msg.jsonataResult;\n    for(var index1 = 0; index1 < submodels.length; index1++){\n        var submodelElements = submodels[index1].submodelElements;\n        var result = iterate(submodelElementId, submodelCollectionId, submodelElements);\n        if (result != \"\"){\n            selectedSubmodels.push(submodels[index1]);\n            selctedSubmodelElements.push(result);\n        }\n    }\n    if(selectedSubmodels.length > 0){\n        var manifest = context.flow.get(\"manifest\");\n        var shells = manifest.assetAdministrationShells;\n        var ShellId = msg.req.params.aasid;\n        for(var index3 = 0; index3 < shells.length; index3++){\n            if(shells[index3].identification.id === ShellId){\n                var submodelRefs = shells[index3].submodels;\n                for(var index4 = 0; index4 < submodelRefs.length; index4++){\n                    var ref = submodelRefs[index4];\n                    for(var index5 = 0; index5 < selectedSubmodels.length; index5++){\n                        if(ref.keys[0].value === selectedSubmodels[index5].identification.id){\n                            msg.statusCode = \"200\";\n                            msg.payload = selctedSubmodelElements[index5];\n                            return msg;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        msg.statusCode = \"400\";\n        msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"SubmodelElement with id:\" + submodelElementId + \" not found\", \"Timestamp\": Date.now() } ] };\n    \n    }\n    \n\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Submodel with id:\" + submodelId + \" not found\", \"Timestamp\": Date.now() } ] };\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1100,
        "wires": [
            [
                "5891422c.8306cc",
                "fe06f34ca6318762"
            ]
        ]
    },
    {
        "id": "4b7901f0.6bbe8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "UpdatingSubmodel...",
        "func": "var submodel = msg.payload;\n\nif(msg.jsonataStatus == \"Success\"){\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    for(var element = 0; element < submodels.length; element++){\n        if(submodels[element].identification.id == submodel.identification.id){\n            submodels[element] = submodel;\n            msg.statusCode = \"200\";\n            context.flow.set(\"manifest\", manifest);\n            return msg;\n        }\n    }\n} else {\n    \n    msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Error submodel not found\", \"Timestamp\": Date.now() } ] };\n    msg.statusCode = \"400\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 980,
        "wires": [
            [
                "9ff89318.c7ef7"
            ]
        ]
    },
    {
        "id": "4e93dd24164082a2",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "function 4",
        "func": "let body = msg.req.body;\nlet operation_from_model = msg.payload;\n\n// Verify InputVariable\nif (operation_from_model.inputVariable.length == body.inputArguments.length && operation_from_model.inoutputVariable.length == body.inoutputArguments.length){\n    \n    //Process InputVariable\n    for (let index0 = 0; index0 < operation_from_model.inputVariable.length; index0++){\n        for (let index1 = 0; index1 < body.inputArguments.length; index1++){\n            if (body.inputArguments[index1].value.submodelElement.idShort == operation_from_model.inputVariable[index0].value.submodelElement.idShort){\n                break;\n            }\n            return [null, msg];\n        }\n    }\n\n    //Process InoutputVariable\n    for (let index2 = 0; index2 < operation_from_model.inoutputVariable.length; index2++) {\n        for (let index3 = 0; index3 < body.inoutputArguments.length; index3++) {\n            if (body.inoutputArguments[index3].value.submodelElement.idShort == operation_from_model.inoutputVariable[index2].value.submodelElement.idShort) {\n                break;\n            }\n            return [null, msg];\n        }\n    }\n    return [msg,null];\n\n} else {\n    return [null, msg];\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 2060,
        "wires": [
            [
                "3ef1dfccaa2aa8e1"
            ],
            [
                "e50adb828b97e318"
            ]
        ]
    },
    {
        "id": "52525c75638e585c",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "createEnv out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 180,
        "wires": []
    },
    {
        "id": "52e528996d833792",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "removeSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 840,
        "wires": []
    },
    {
        "id": "53bc4f2d72d3363a",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readAasSubmodels in",
        "links": [],
        "x": 315,
        "y": 560,
        "wires": [
            [
                "74b0ade885314eb2"
            ]
        ]
    },
    {
        "id": "55642c2f54fe88ec",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "Update SubmodelElement",
        "func": "var verifySubmodelBelongsToAasId = function (aasId, shells, submodel) {\n    for (var index = 0; index < shells.length; index++) {\n        if (shells[index].identification.id === aasId) {\n            var submodelRefs = shells[index].submodels;\n            for (var index2 = 0; index2 < submodelRefs.length; index2++) {\n                var ref = submodelRefs[index2];\n                if (ref.keys[0].value === submodel.identification.id) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\nvar iterate = function (submodelToUpdate, collectionIds, submodelElements) {\n    for (var index = 0; index < submodelElements.length; index++) {\n        if (submodelElements[index].modelType.name !== \"SubmodelElementCollection\" || (submodelElements[index].modelType.name === \"SubmodelElementCollection\" && collectionIds.length < 1)) {\n            if (submodelElements[index].idShort === submodelToUpdate.idShort) {\n                submodelElements[index] = submodelToUpdate;\n                return submodelToUpdate;\n\n            }\n\n        } else {\n            for (var collIndex = 0; collIndex < collectionIds.length; collIndex++) {\n                var collectionId = collectionIds[collIndex];\n                if (submodelElements[index].idShort === collectionId) {\n                    collectionIds.splice(collIndex, 1);\n                    var result = iterate(submodelToUpdate, collectionIds, submodelElements[index].value);\n                    return result;\n                }\n            }\n\n        }\n    }\n    return \"\";\n}\n\nlet manifest = context.flow.get(\"manifest\");\nlet aasid = msg.req.params.aasid;\nvar submodelElementId = msg.req.params.id;\nvar submodelId = msg.req.params.submodelId;\n\nvar submodelCollectionId = [];\nvar submodelToUpdate = msg.submodelElement;\n\nif (msg.jsonataStatus == \"Success\") {\n\n\n    for (var index1 = 0; index1 < manifest.submodels.length; index1++) {\n\n        let verified = verifySubmodelBelongsToAasId(aasid, manifest.assetAdministrationShells, manifest.submodels[index1]);\n\n        if (verified) {\n            var result = iterate(submodelToUpdate, submodelCollectionId, manifest.submodels[index1].submodelElements);\n            if (result != \"\") {\n                context.flow.set(\"manifest\", manifest);\n                msg.payload = result;\n                msg.statusCode = \"200\";\n                return [msg, null];\n            }\n        }\n    }\n\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"SubmodelElement with id:\" + submodelElementId + \" not found\", \"Timestamp\": Date.now() }] };\n\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Submodel with id:\" + submodelId + \" not found\", \"Timestamp\": Date.now() }] };\n\n}\n\nreturn [null, msg];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 1580,
        "wires": [
            [
                "22676ba099ea6e73",
                "f26f2711b159da25"
            ],
            [
                "f26f2711b159da25"
            ]
        ]
    },
    {
        "id": "5891422c.8306cc",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1530,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5c835f2d90b6596f",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "submodelElement",
        "func": "msg.submodelElement = msg.payload;\nmsg.submodelElementId = msg.req.params.id;\nmsg.req.params.id = msg.req.params.submodelId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 1680,
        "wires": [
            [
                "7d372240b1186833"
            ]
        ]
    },
    {
        "id": "5de6d074.7d79",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1260,
        "wires": [
            [
                "633f32d82a484e78"
            ],
            [
                "9838633ea1b4686f"
            ]
        ]
    },
    {
        "id": "608d01fd6a3d76b7",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "Getting aas submodels",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor(var indexShell = 0; indexShell < shells.length; indexShell++){\n    let id = shells[indexShell].identification.id;\n    if(id == ShellId){\n        msg.jsonataResult = shells[indexShell].submodels;\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 840,
        "wires": [
            [
                "da187920.ebbfd8",
                "faadeccab2b979c5"
            ]
        ]
    },
    {
        "id": "633f32d82a484e78",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "check if submodelelement Exists",
        "func": "var element = msg.payload;\nvar submodelElementId = msg.submodelElement.idShort;\nvar submodelElements = element.submodelElements;\nfor (var submodelElementIndex = 0; submodelElementIndex < submodelElements.length; submodelElementIndex++){\n    if(submodelElementId == submodelElements[submodelElementIndex].idShort){\n        msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Error submodelElement with ID: \" + submodelElementId + \" already exists\", \"Timestamp\": Date.now() }] };\n        msg.statusCode = \"400\";\n        return msg;\n    }\n}\n\nelement.submodelElements.push(msg.submodelElement);\nmsg.payload = element;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 1180,
        "wires": [
            [
                "6e36a0dd.0aff2"
            ]
        ]
    },
    {
        "id": "643649a5.2eddb8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "Add Submodel",
        "func": "var submodel = msg.payload;\nvar shellId = msg.req.params.aasid;\nif(msg.jsonataStatus == \"Success\"){\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Error! submodel already exists!\", \"Timestamp\": Date.now() } ] };\n    return msg;\n} else {\n    // Verify IdShort\n    let manifest = context.flow.get(\"manifest\");\n    let submodels = manifest.submodels;\n    for (let index1 = 0; index1 < submodels.length; index1++) {\n        var submodelElement = submodels[index1];\n        if(submodel.idShort == submodelElement.idShort){\n            msg.statusCode = \"400\";\n            msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Error! submodel with idShort: \" + submodel.idShort + \" already exists!\", \"Timestamp\": Date.now() } ] };\n            return msg;\n        }\n    }\n    // Add Submodel after IdShort Verification\n    msg.statusCode = \"200\";\n    //var manifest = context.flow.get(\"manifest\");\n    manifest.submodels.push(msg.payload);\n    var shells = manifest.assetAdministrationShells;\n    for(var element = 0; element < shells.length; element++){\n        if(shells[element].identification.id == shellId){\n            var submodelRef = {};\n            // @ts-ignore\n            var keys = [];\n            var ref = {};\n            ref.type = \"Submodel\";\n            ref.local = true;\n            ref.value = submodel.identification.id;\n            ref.index = 0;\n            ref.idType = submodel.identification.idType;\n            keys.push(ref);\n            submodelRef.keys = keys;\n            shells[element].submodels.push(submodelRef);\n            context.flow.set(\"manifest\", manifest);\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 720,
        "wires": [
            [
                "3ae2508615759ff1",
                "47dbd85db98e87d7"
            ]
        ]
    },
    {
        "id": "64e0e16be8a6705d",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "updateSubmodel in",
        "links": [],
        "x": 315,
        "y": 980,
        "wires": [
            [
                "3f7f7d86b973187a"
            ]
        ]
    },
    {
        "id": "66b1db9209510ea0",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 1660,
        "wires": []
    },
    {
        "id": "67a4873f76838cd0",
        "type": "change",
        "z": "7585249f.880c0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "submodelElementId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1480,
        "wires": [
            [
                "eebdedc7c3c0954d"
            ]
        ]
    },
    {
        "id": "67c6d794.309d08",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "PersistModel",
        "func": "var manifest = context.flow.get('manifest');\nvar manifestJsonStr = JSON.stringify(manifest);\nmsg.payload = manifestJsonStr;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 1920,
        "wires": [
            [
                "46864302963bba04"
            ]
        ]
    },
    {
        "id": "67fe686ec4b22e4b",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "Getting aas submodels",
        "func": "var submodelId = msg.req.params.submodelId;\nvar manifest = context.flow.get('manifest');\n\nvar submodels = manifest.submodels;\n\nfor (var indexSubmodel = 0; indexSubmodel < submodels.length; indexSubmodel++){\n    let id = submodels[indexSubmodel].identification.id;\n    if (id == submodelId){\n        msg.jsonataResult = [];\n        msg.jsonataResult.push(submodels[indexSubmodel]);\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1100,
        "wires": [
            [
                "e11cc9ff.59b02",
                "48e654a6.f98c5c"
            ]
        ]
    },
    {
        "id": "6d353eca41c7f3c2",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "Getting aass",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor(var indexShell = 0; indexShell < shells.length; indexShell++){\n    let id = shells[indexShell].identification.id;\n    if(id == ShellId){\n        msg.jsonataResult = shells[indexShell];\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 440,
        "wires": [
            [
                "8f8f9ca3.088ce8",
                "24f12c469a065810"
            ]
        ]
    },
    {
        "id": "6e36a0dd.0aff2",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1840,
        "y": 1180,
        "wires": [
            [
                "9838633ea1b4686f"
            ],
            [
                "bb10f0b5176f7432"
            ]
        ]
    },
    {
        "id": "6f9c803ab9cca499",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1680,
        "wires": [
            [
                "814ecf2813124b8e"
            ],
            [
                "f26f2711b159da25"
            ]
        ]
    },
    {
        "id": "73183c0e7e10afe5",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "86b4b166afaa8721"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1430,
        "y": 2100,
        "wires": [
            [
                "19cf7aace4a280db"
            ]
        ]
    },
    {
        "id": "731ed6daed8bb6ac",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readAas out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 440,
        "wires": []
    },
    {
        "id": "73fa67f7ce94427b",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readSubmodel in",
        "links": [],
        "x": 315,
        "y": 640,
        "wires": [
            [
                "c34af678226125c4"
            ]
        ]
    },
    {
        "id": "74b0ade885314eb2",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "Getting aas submodels",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor(var indexShell = 0; indexShell < shells.length; indexShell++){\n    let id = shells[indexShell].identification.id;\n    if(id == ShellId){\n        msg.jsonataResult = shells[indexShell].submodels;\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 560,
        "wires": [
            [
                "1e83a689.597559"
            ]
        ]
    },
    {
        "id": "7d372240b1186833",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "73fa67f7ce94427b"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 910,
        "y": 1680,
        "wires": [
            [
                "6f9c803ab9cca499"
            ]
        ]
    },
    {
        "id": "814ecf2813124b8e",
        "type": "change",
        "z": "7585249f.880c0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "submodelElementId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1620,
        "wires": [
            [
                "3bfd1d54ac6a712e"
            ]
        ]
    },
    {
        "id": "821c43fa.7502b",
        "type": "wait-paths",
        "z": "7585249f.880c0c",
        "name": "",
        "paths": "[\"path_2\",\"path_1\"]",
        "timeout": 15000,
        "finalTimeout": 60000,
        "x": 1430,
        "y": 180,
        "wires": [
            [
                "52525c75638e585c"
            ]
        ]
    },
    {
        "id": "86b4b166afaa8721",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1100,
        "wires": [
            [
                "67fe686ec4b22e4b"
            ]
        ]
    },
    {
        "id": "881a0c3218ffb16f",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "Invoke_Op in",
        "links": [],
        "x": 315,
        "y": 2140,
        "wires": [
            [
                "b826322d4c5e0dd3"
            ]
        ]
    },
    {
        "id": "8de067076149825d",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 2140,
        "wires": [
            [
                "16aaa0fd22061e5e"
            ],
            [
                "eda11e1af3a33633"
            ]
        ]
    },
    {
        "id": "8f8f9ca3.088ce8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingAas...",
        "func": "var ShellId = msg.req.params.id;\nif(msg.jsonataStatus == \"Success\"){\n    msg.payload = msg.jsonataResult;\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\" : \"Asset Adminsitration Shell with id:\" + ShellId + \" not found\", \"Timestamp\": Date.now() } ] };\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 440,
        "wires": [
            [
                "731ed6daed8bb6ac"
            ]
        ]
    },
    {
        "id": "96eab839b9a5526e",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1570,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "96ff73d.313f69",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RemoveSubmodelElement",
        "func": "var manifest = context.flow.get(\"manifest\");\nvar submodels = manifest.submodels;\nfor(var elementSub = 0; elementSub < submodels.length; elementSub++){\n    var submodelElements = submodels[elementSub].submodelElements;\n    for(var elementSubElem = 0; elementSubElem < submodelElements.length; elementSubElem++){\n        if(submodelElements[elementSubElem].identification.id == msg.payload.identification.id){\n            submodelElements.splice(elementSubElem, 1);\n            context.flow.set(\"manifest\", manifest);\n            msg.statusCode = \"200\";\n            return msg;\n        }\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 1360,
        "wires": [
            [
                "cbfa3c93a83bddd6"
            ]
        ]
    },
    {
        "id": "9838633ea1b4686f",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "addSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1260,
        "wires": []
    },
    {
        "id": "9af1e8ba.14f4a8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingAssets...",
        "func": "var ShellId = msg.req.params.aasid;\nif(msg.jsonataStatus == \"Success\"){\n    var keys = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var assets = manifest.assets;\n    for(var index1 = 0; index1 < keys.length; index1++){\n        var key = keys[index1];\n        for(var index2 = 0; index2 < assets.length; index2++){\n            var asset = assets[index2];\n            if(asset.identification.id === key.value){\n                msg.payload = asset;\n                msg.statusCode = \"200\";\n                return msg;\n            }\n        }\n    }\n    msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\" : \"Asset not found\", \"Timestamp\": Date.now() } ] };\n    msg.statusCode = \"400\";\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\" : \"Asset Administration Shell with id:\" + ShellId + \" not found\", \"Timestamp\": Date.now() } ] };\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 360,
        "wires": [
            [
                "0f43bd0ecaaa73ea"
            ]
        ]
    },
    {
        "id": "9c413192820ac72d",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "addSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1260,
        "wires": [
            [
                "23e08773.bbef88"
            ]
        ]
    },
    {
        "id": "9d52563a1d0e86d3",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "preprocessing and flattening JSON",
        "func": "function isJSONString(str) {\n    try {\n        JSON.parse(str);\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getFlatObject(object) {\n    function iter(o, p) {\n        if (o && typeof o === 'object') {\n            Object.keys(o).forEach(function (k) {\n                iter(o[k], p.concat(k));\n            });\n            return;\n        }\n        path[p.join('.')] = o;\n    }\n\n    var path = {};\n    iter(object, []);\n    return path;\n}\n\nlet flattenObject;\nlet keys = [];\nlet object = JSON.parse(msg.value);\n\nif (object.hasOwnProperty(\"blob\")) {\n    let data = object.blob;\n    flattenObject = getFlatObject(data);\n    keys = Object.keys(flattenObject);\n    //msg.object = data;\n} else {\n    if(msg.payload.modelType.name == \"Property\"){\n        if(isJSONString(msg.value)){\n            flattenObject = msg.value;\n            keys.push(\"\");\n        }\n    } else if (msg.payload.modelType.name == \"SubmodelElementCollection\"){\n        flattenObject = getFlatObject(JSON.parse(msg.value));\n        keys = Object.keys(flattenObject);\n    }\n    \n}\n\n//let flattenObject = getFlatObject(JSON.parse(msg.value));\n\nmsg.flattenObject = flattenObject;\nmsg.keys = keys;\nfor (let keyIndex = 0; keyIndex < keys.length; keyIndex++) {\n    let substringsArray = keys[keyIndex].split(\".\");\n    keys[keyIndex] = keys[keyIndex].replace(\".\" + substringsArray[substringsArray.length - 1], \"\");\n}\nlet uniqueKeys = Array.from(new Set(keys));\n\nlet pathsToUpdate = [];\nif (uniqueKeys.length > 1) {\n    for (let uniqueKeyIndex = 0; uniqueKeyIndex < uniqueKeys.length; uniqueKeyIndex++) {\n        uniqueKeys[uniqueKeyIndex] = msg.submodelElementId + \".\" + uniqueKeys[uniqueKeyIndex];\n        pathsToUpdate.push(uniqueKeys[uniqueKeyIndex]);\n    }\n} else {\n    uniqueKeys[0] = msg.submodelElementId;\n    pathsToUpdate.push(uniqueKeys[0]);\n}\nmsg.pathsToUpdate = pathsToUpdate;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 1460,
        "wires": [
            [
                "b9eb97851f3682d9",
                "e8062b0fb407564c"
            ]
        ]
    },
    {
        "id": "9dfa1a9a.a3b8d8",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 1820,
        "wires": [
            [
                "96eab839b9a5526e",
                "bfe1628b021fb4bd"
            ],
            [
                "bfe1628b021fb4bd"
            ]
        ]
    },
    {
        "id": "9f0d3344.1a35d",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "IntializeVariables",
        "func": "//Initialize flow variables\n/*var uuid = context.global.get('AASIdentifier')||'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });*/\n/*var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });*/\n\nvar manifest = context.flow.get(\"manifest\") || \"\";\n//var submodels = context.flow.get(\"submodels\") || \"\";\n//var properties = context.flow.get(\"properties\") || \"\";\n\ncontext.flow.set(\"manifest\", manifest);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 778.1428527832031,
        "y": 57.500030517578125,
        "wires": [
            []
        ]
    },
    {
        "id": "9ff89318.c7ef7",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 980,
        "wires": [
            [
                "c6f2ebed8beb7fcd",
                "e8d3c684d0d7eba8"
            ],
            [
                "e8d3c684d0d7eba8"
            ]
        ]
    },
    {
        "id": "a336bc52.db545",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 100,
        "wires": []
    },
    {
        "id": "a420653d.283e18",
        "type": "inject",
        "z": "7585249f.880c0c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 461,
        "y": 57.500030517578125,
        "wires": [
            [
                "9f0d3344.1a35d"
            ]
        ]
    },
    {
        "id": "a43738e6d134a0e4",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "73fa67f7ce94427b"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 910,
        "y": 1260,
        "wires": [
            [
                "5de6d074.7d79"
            ]
        ]
    },
    {
        "id": "a688b662.2d1b18",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingModelFilePath",
        "func": "msg.filename = context.global.get(\"ModelFilePath\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 1920,
        "wires": [
            [
                "67c6d794.309d08"
            ]
        ]
    },
    {
        "id": "ab943405e80b0646",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "updateSubmodelElementNormal In",
        "links": [],
        "x": 315,
        "y": 1680,
        "wires": [
            [
                "5c835f2d90b6596f"
            ]
        ]
    },
    {
        "id": "abb9cde9.3e22b",
        "type": "change",
        "z": "7585249f.880c0c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_1\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 140,
        "wires": [
            [
                "821c43fa.7502b"
            ]
        ]
    },
    {
        "id": "b575bbba.b65c88",
        "type": "json",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "a336bc52.db545",
                "ddd14f97.46b59"
            ]
        ]
    },
    {
        "id": "b826322d4c5e0dd3",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nmsg.submodelElement = msg.payload;\nmsg.submodelElementId = msg.req.params.id;\nmsg.req.params.id = msg.req.params.submodelId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 2140,
        "wires": [
            [
                "0c6d65d1dcab6fee"
            ]
        ]
    },
    {
        "id": "b9eb97851f3682d9",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "UpdatingSubmodelElement...",
        "func": "let submodelElement = \"\";\nlet submodelElementId = msg.req.params.id;\nlet submodelId = msg.req.params.submodelId;\nlet persist = \"false\";\nif (msg.req.query.content == \"value\") {\n\n    msg.payload.value = msg.submodelElement[msg.submodelElementId];\n    submodelElement = msg.payload;\n\n} else {\n    submodelElement = msg.submodelElement;\n    persist = \"true\";\n}\n\n\nlet updateSubmodelElementValues = function (submodelElements, indexIdPath, collectionIds, value) {\n\n    if (indexIdPath < collectionIds.length) {\n\n        let idPath = collectionIds[indexIdPath];\n\n        for (let submodelElement = 0; submodelElement < submodelElements.length; submodelElement++) {\n\n            let submodelElementIdentifier = submodelElements[submodelElement].idShort;\n\n            let modelType = submodelElements[submodelElement].modelType.name;\n\n            if (submodelElementIdentifier === idPath && modelType === \"SubmodelElementCollection\" && indexIdPath < (collectionIds.length - 1)) {\n\n                indexIdPath = indexIdPath + 1;\n\n                return updateSubmodelElementValues(submodelElements[submodelElement].value, indexIdPath, collectionIds, value);\n\n            } else if (submodelElementIdentifier === idPath && modelType === \"SubmodelElementCollection\" && indexIdPath === (collectionIds.length - 1)) {\n\n                let values = value;\n\n                let keys = Object.keys(values);\n\n                for (let keyIndex = 0; keyIndex < keys.length; keyIndex++) {\n\n                    let selectedValue = 0;\n\n                    selectedValue = values[keys[keyIndex]];\n                    //msg.debug15 = selectedValue;\n                    //return msg;\n                    if (typeof selectedValue != 'object') {\n                        for (let valuesIndex = 0; valuesIndex < submodelElements[submodelElement].value.length; valuesIndex++) {\n                            if (submodelElements[submodelElement].value[valuesIndex].idShort == keys[keyIndex]) {\n                                submodelElements[submodelElement].value[valuesIndex].value = selectedValue;\n                                break;\n                            }\n                        }\n                    }\n\n\n                }\n\n                return true;\n\n            }\n            else if (submodelElementIdentifier === idPath && (modelType === \"Property\" || modelType === \"Blob\")) {\n                //msg.debug11 = \"Entrei \" + submodelElements[submodelElement].idShort + \" and \" + idPath + \" \" + value;\n\n                submodelElements[submodelElement].value = value;\n                return true;\n\n            }\n\n        }\n\n    } else {\n\n        return false;\n\n    }\n\n}\n\nvar submodelCollectionId = [];\n\nlet manifest = context.flow.get(\"manifest\");\nif (msg.jsonataStatus == \"Success\") {\n\n    let submodelRoot = msg.jsonataResult[0];\n\n    let pathsToSubmodelElements = msg.pathsToUpdate;\n\n    let submodelRootIdentifier = submodelRoot.identification.id;\n\n    let manifestSubmodels = manifest.submodels;\n\n    let manifestSubmodelElements = {};\n\n    let stratingJsonDecomposition = msg.submodelElementId.split(\".\");\n\n    for (let manifestSubmodel = 0; manifestSubmodel < manifestSubmodels.length; manifestSubmodel++) {\n\n        let manifestSubmodelIdentifier = manifestSubmodels[manifestSubmodel].identification.id;\n\n        if (submodelRootIdentifier === manifestSubmodelIdentifier) {\n\n            manifestSubmodelElements = manifestSubmodels[manifestSubmodel].submodelElements;\n\n        }\n\n    }\n\n    for (let pathIndex = 0; pathIndex < pathsToSubmodelElements.length; pathIndex++) {\n\n        let collectionIds = pathsToSubmodelElements[pathIndex].split(\".\");\n        msg.collectionIds = collectionIds;\n        let value = msg.submodelElement[msg.submodelElementId];\n        //msg.getValue1 = value;\n        let jsonObjectValue = {};\n\n        let processedValue = {};\n\n        if (collectionIds.length > 1) {\n            jsonObjectValue = JSON.parse(value);\n            let decomposeJsonObj = jsonObjectValue;\n            for (let index = stratingJsonDecomposition.length; index < collectionIds.length; index++) {\n                decomposeJsonObj = decomposeJsonObj[collectionIds[index]];\n            }\n            /*if (typeof decomposeJsonObj === \"string\") {\n                 processedValue = JSON.stringify(decomposeJsonObj.replace(/^\"|\"$/g, ''));\n             } else {\n                 processedValue = decomposeJsonObj;\n             }*/\n            processedValue = decomposeJsonObj;\n            //msg.stringified = decomposeJsonObj;\n\n        } else {\n            if (typeof value == \"object\") {\n                jsonObjectValue = JSON.parse(value);\n            } else {\n                processedValue = value;\n            }\n\n        }\n        //msg.getValue2 = processedValue;\n        //msg.getValue3 = value;\n        updateSubmodelElementValues(manifestSubmodelElements, 0, collectionIds, processedValue);\n\n    }\n    context.flow.set(\"manifest\", manifest);\n\n    if (persist == \"true\") {\n\n        return [msg, null];\n\n    } else {\n\n        return [null, msg];\n    }\n\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Submodel with id:\" + submodelId + \" not found\", \"Timestamp\": Date.now() }] };\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 2090,
        "y": 1460,
        "wires": [
            [
                "2e0ef87ae37655e9",
                "06cdab4690033b11"
            ],
            [
                "06cdab4690033b11"
            ]
        ]
    },
    {
        "id": "ba54bb9c.cb2028",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingShells...",
        "func": "var manifest = context.flow.get(\"manifest\");\nmsg.payload = manifest.assetAdministrationShells;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1127.4263916015625,
        "y": 299.59288024902344,
        "wires": [
            [
                "2a0df1842c81dcd2"
            ]
        ]
    },
    {
        "id": "baa39adde9859415",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 700,
        "wires": []
    },
    {
        "id": "bb10f0b5176f7432",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "64e0e16be8a6705d"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1910,
        "y": 1240,
        "wires": [
            [
                "9838633ea1b4686f"
            ]
        ]
    },
    {
        "id": "bfe1628b021fb4bd",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "addConceptDescription out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1820,
        "wires": []
    },
    {
        "id": "c34af678226125c4",
        "type": "function",
        "z": "7585249f.880c0c",
        "name": "Getting aas submodels keys",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor(var indexShell = 0; indexShell < shells.length; indexShell++){\n    let id = shells[indexShell].identification.id;\n    if(id == ShellId){\n        let submodels = shells[indexShell].submodels;\n        var keys = [];\n        for(var indexSubmodel = 0; indexSubmodel < submodels.length; indexSubmodel++){\n            keys = [...submodels[indexSubmodel].keys, ...keys];\n        }\n        msg.jsonataResult = keys;\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 640,
        "wires": [
            [
                "39980413b1dc2403",
                "c80258e3.6fb648"
            ]
        ]
    },
    {
        "id": "c38a6d952fa9ab40",
        "type": "inject",
        "z": "7585249f.880c0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 570,
        "y": 2260,
        "wires": [
            [
                "20aa7bb66b4bf13e"
            ]
        ]
    },
    {
        "id": "c6f2ebed8beb7fcd",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1530,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "c7789bcaee9c8777",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 2040,
        "wires": []
    },
    {
        "id": "c80258e3.6fb648",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "ReadSubmodel",
        "func": "var ShellId = msg.req.params.aasid;\nvar submodelId = msg.req.params.id;\nif(msg.jsonataStatus == \"Success\"){\n    var keys = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    for(var index1 = 0; index1 < keys.length; index1++){\n        var key = keys[index1];\n        for(var index2 = 0; index2 < submodels.length; index2++){\n            var submodel = submodels[index2];\n            if(submodel.identification.id === key.value){\n                if(submodel.identification.id === submodelId){\n                    msg.payload = submodel;\n                    msg.statusCode = \"200\";\n                    return msg;\n                }\n            }\n        }\n    }\n    msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Submodel with id:\" + submodelId + \" not found\", \"Timestamp\": Date.now() } ] };\n    msg.statusCode = \"400\";\n    \n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Asset Administration Shell with id:\" + ShellId + \" not found\", \"Timestamp\": Date.now() } ] };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 640,
        "wires": [
            [
                "0e6dba6f13a192ce"
            ]
        ]
    },
    {
        "id": "c99decec.108e8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nmsg.submodelElement = msg.payload;\nmsg.submodelElementId = msg.req.params.id;\nmsg.req.params.id = msg.req.params.submodelId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 1520,
        "wires": [
            [
                "02157f126a36c845"
            ]
        ]
    },
    {
        "id": "cbfa3c93a83bddd6",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "removeSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1380,
        "wires": []
    },
    {
        "id": "cfe951f06c55831e",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readEnv in",
        "links": [],
        "x": 315,
        "y": 240,
        "wires": [
            [
                "e7377ce7.f77bc"
            ]
        ]
    },
    {
        "id": "d3fb1180ea60c900",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "addConceptDescription in",
        "links": [],
        "x": 315,
        "y": 1820,
        "wires": [
            [
                "38ed1e42ac4fb036"
            ]
        ]
    },
    {
        "id": "da187920.ebbfd8",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "Remove Submodel",
        "func": "var submodel = msg.payload;\nvar submodelId = msg.req.params.id;\nvar shellId = msg.req.params.aasid;\n\nif(msg.jsonataStatus == \"Success\"){\n    var refs = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    var deletedSubmodelRef = \"\";\n    for(var index1 = 0; index1 < refs.length; index1++){\n        var ref = refs[index1];\n        for(var index2 = 0; index2 < submodels.length; index2++){\n            var submodel = submodels[index2];\n            if(submodel.identification.id === ref.keys[0].value){\n                if(submodel.identiifcation.id === submodelId){\n                    submodels.splice(index2, 1);\n                    deletedSubmodelRef = submodel.identification.id;\n                    break;\n                }\n            }\n        }\n    }\n    if(deletedSubmodelRef !== \"\"){\n        var shells = manifest.assetAdministrationShells;\n        for(var index3 = 0; index3 < shells.length; index3++){\n            var shell = shells[index3];\n            if(shell.identification.id == shellId){\n                var submodelRefs = shell.submodels;\n                for(var index4 = 0; index4 < submodelRefs.length; index4++){\n                    var submodelRef = submodelRefs[index4];\n                    if(submodelRef.keys[0].value === deletedSubmodelRef){\n                        submodelRefs.splice(index4, 1);\n                        break;\n                    }\n                }\n            }\n        }\n        msg.statusCode = \"200\";\n        context.flow.set(\"manifest\", manifest);\n    } else {\n        msg.statusCode = \"400\";\n        msg.payload = { \"Messages\": [ { \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Submodel with id: \" + submodelId + \" not found\", \"Timestamp\": Date.now() } ] };\n    }\n    \n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Asset Administration Shell with id:\" + shellId + \" not found\", \"Timestamp\": Date.now() }] };\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 837,
        "wires": [
            [
                "e410ab6a.5218c8"
            ]
        ]
    },
    {
        "id": "ddd14f97.46b59",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "CreateInMemoryManifest",
        "func": "var manifest = msg.payload;\ncontext.flow.set(\"manifest\", manifest);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "abb9cde9.3e22b"
            ]
        ]
    },
    {
        "id": "e11cc9ff.59b02",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 930,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e18a6480a564220d",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1730,
        "y": 1620,
        "wires": [
            [
                "55642c2f54fe88ec"
            ],
            [
                "66b1db9209510ea0",
                "f26f2711b159da25"
            ]
        ]
    },
    {
        "id": "e27443b73694af6b",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readEnv out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 240,
        "wires": []
    },
    {
        "id": "e410ab6a.5218c8",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 837,
        "wires": [
            [
                "52e528996d833792",
                "e6c3848135c0d875"
            ],
            [
                "52e528996d833792"
            ]
        ]
    },
    {
        "id": "e50adb828b97e318",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2380,
        "y": 2080,
        "wires": []
    },
    {
        "id": "e5e3e5e6456ee35c",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "readShells in",
        "links": [],
        "x": 315,
        "y": 300,
        "wires": [
            [
                "ba54bb9c.cb2028"
            ]
        ]
    },
    {
        "id": "e6c3848135c0d875",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "feac9604b306e8d4"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1610,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "e7377ce7.f77bc",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingEnvironment...",
        "func": "msg.payload = context.flow.get(\"manifest\");\nmsg.AASID = context.flow.get('AASIdentifier');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 240,
        "wires": [
            [
                "e27443b73694af6b"
            ]
        ]
    },
    {
        "id": "e8062b0fb407564c",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 1420,
        "wires": []
    },
    {
        "id": "e8d3c684d0d7eba8",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "updateSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 980,
        "wires": []
    },
    {
        "id": "ec827ecb.501e9",
        "type": "unsafe-function",
        "z": "7585249f.880c0c",
        "name": "RetrievingSubmodels...",
        "func": "var manifest = context.flow.get(\"manifest\");\nmsg.payload = manifest.submodels;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 500,
        "wires": [
            [
                "2260c322068373cd"
            ]
        ]
    },
    {
        "id": "eda11e1af3a33633",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "Invoke_Op out",
        "mode": "return",
        "links": [],
        "x": 2425,
        "y": 2140,
        "wires": []
    },
    {
        "id": "eebdedc7c3c0954d",
        "type": "link call",
        "z": "7585249f.880c0c",
        "name": "",
        "links": [
            "86b4b166afaa8721"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1350,
        "y": 1480,
        "wires": [
            [
                "3cf9675a.eb4928"
            ]
        ]
    },
    {
        "id": "f26f2711b159da25",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "updateSubmodelElementNormal Out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1680,
        "wires": []
    },
    {
        "id": "f308240a.bf55c",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 340,
        "wires": []
    },
    {
        "id": "f3d77d2c4bd793f1",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "persistEnv out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1920,
        "wires": []
    },
    {
        "id": "f416fff6010dbb4f",
        "type": "switch",
        "z": "7585249f.880c0c",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 1520,
        "wires": [
            [
                "67a4873f76838cd0"
            ],
            [
                "06cdab4690033b11"
            ]
        ]
    },
    {
        "id": "f5cc371119932661",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "addSubmodel in",
        "links": [],
        "x": 315,
        "y": 720,
        "wires": [
            [
                "3e922de3b2450eba"
            ]
        ]
    },
    {
        "id": "f8e2cdcf35feb9b2",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "createEnv in",
        "links": [],
        "x": 315,
        "y": 180,
        "wires": [
            [
                "3804b824.0a40d8",
                "b575bbba.b65c88"
            ]
        ]
    },
    {
        "id": "fa81926752921ab7",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "updateSubmodelElementValue in",
        "links": [],
        "x": 315,
        "y": 1520,
        "wires": [
            [
                "c99decec.108e8"
            ]
        ]
    },
    {
        "id": "faadeccab2b979c5",
        "type": "debug",
        "z": "7585249f.880c0c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 820,
        "wires": []
    },
    {
        "id": "fe06f34ca6318762",
        "type": "link out",
        "z": "7585249f.880c0c",
        "name": "readSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1100,
        "wires": []
    },
    {
        "id": "feac9604b306e8d4",
        "type": "link in",
        "z": "7585249f.880c0c",
        "name": "persistEnv in",
        "links": [],
        "x": 315,
        "y": 1920,
        "wires": [
            [
                "a688b662.2d1b18"
            ]
        ]
    },
    {
        "id": "03a40b9def235c79",
        "type": "change",
        "z": "76d11e83ac083a40",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "submodelElementId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1620,
        "wires": [
            [
                "9859f4532779d987"
            ]
        ]
    },
    {
        "id": "0464b642e2cba8e3",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 930,
        "y": 1080,
        "wires": []
    },
    {
        "id": "06b5ab314b17cb1d",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "IntializeVariables",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "//Initialize flow variables\n/*var uuid = context.global.get('AASIdentifier')||'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });*/\n/*var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });*/\n\nvar manifest = context.flow.get(\"manifest\") || \"\";\n//var submodels = context.flow.get(\"submodels\") || \"\";\n//var properties = context.flow.get(\"properties\") || \"\";\n\ncontext.flow.set(\"manifest\", manifest);\nreturn msg;\n",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "08e30e2c325e7de9",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Preparing aas aaset Information",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor (var indexShell = 0; indexShell < shells.length; indexShell++){\n    let id = shells[indexShell].id;\n    if(id == ShellId){\n        msg.jsonataResult = shells[indexShell].assetInformation;\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\nmsg.jsonataStatus = \"Failure\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 360,
        "wires": [
            [
                "99cf767b7c80650a",
                "bd0433c5d06b8017"
            ]
        ]
    },
    {
        "id": "0ac57037dc16c894",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "readShells out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 300,
        "wires": []
    },
    {
        "id": "0cd7f7ce473da64a",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "230717c8753e9434"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1910,
        "y": 1240,
        "wires": [
            [
                "c549646fcbe9247a"
            ]
        ]
    },
    {
        "id": "0fa5222b3f446db9",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "CreateInMemoryManifest",
        "func": "var manifest = msg.payload;\ncontext.flow.set(\"manifest\", manifest);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 140,
        "wires": [
            [
                "670cce5e96e5b83a"
            ]
        ]
    },
    {
        "id": "0fcaec0eb0bba0a6",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 1480,
        "wires": [
            [
                "af1e551e330320df"
            ],
            [
                "1a1935f08f70c863"
            ]
        ]
    },
    {
        "id": "1033d305f1bacb22",
        "type": "unsafe-function",
        "z": "76d11e83ac083a40",
        "d": true,
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nmsg.submodelElement = msg.payload;\nmsg.submodelElementId = msg.req.params.id;\nmsg.req.params.id = msg.req.params.submodelId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "1203cf3b298fa3fc",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "updateSubmodelElementNormal In",
        "links": [],
        "x": 315,
        "y": 1680,
        "wires": [
            [
                "bd236aee7c151d99"
            ]
        ]
    },
    {
        "id": "139e654a46c2dad3",
        "type": "unsafe-function",
        "z": "76d11e83ac083a40",
        "d": true,
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nvar conceptDescription = msg.payload;\nvar manifest = context.flow.get(\"manifest\");\nmsg.conceptDescriptionsJsonStr = JSON.stringify(manifest.conceptDescriptions);\nmsg.jsonata = \"$[identification.id='\" + conceptDescription.identification.id +\"']\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "18963fe75ba0e9c8",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "Invoke_Op out",
        "mode": "return",
        "links": [],
        "x": 2425,
        "y": 2140,
        "wires": []
    },
    {
        "id": "1a1935f08f70c863",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "updateSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1500,
        "wires": []
    },
    {
        "id": "1ad81b7bfe10f421",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "63f253e2fb041de3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 910,
        "y": 1680,
        "wires": [
            [
                "2bdfa22e86a97f83"
            ]
        ]
    },
    {
        "id": "1cc71f8525febf7b",
        "type": "change",
        "z": "76d11e83ac083a40",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submodelElement",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "submodelElementId",
                "pt": "msg",
                "to": "req.params.id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "req.params.submodelId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1520,
        "wires": [
            [
                "c24f0c63d44da317"
            ]
        ]
    },
    {
        "id": "1dc92cc33c4f1b52",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "9555fa6bf8f71680"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1570,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "230717c8753e9434",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "updateSubmodel in",
        "links": [],
        "x": 315,
        "y": 980,
        "wires": [
            [
                "901ba1fde76d7adf"
            ]
        ]
    },
    {
        "id": "233e7b5f075a31d4",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 100,
        "wires": []
    },
    {
        "id": "239cdd96e4d647e4",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "createEnv in",
        "links": [],
        "x": 315,
        "y": 180,
        "wires": [
            [
                "cb8d45903d954f61",
                "b09f91f0408ac6d9"
            ]
        ]
    },
    {
        "id": "25a1b82f5c57df38",
        "type": "change",
        "z": "76d11e83ac083a40",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "submodelElementId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1480,
        "wires": [
            [
                "fd476a5d2d47de14"
            ]
        ]
    },
    {
        "id": "25dabe20ebce31f5",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Adding Submodel",
        "func": "var submodel = msg.payload;\nvar shellId = msg.req.params.aasid;\nif (msg.jsonataStatus == \"Success\") {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Error! submodel already exists!\", \"Timestamp\": Date.now() }] };\n    return msg;\n} else {\n    // Verify IdShort\n    let manifest = context.flow.get(\"manifest\");\n    let submodels = manifest.submodels;\n    for (let index1 = 0; index1 < submodels.length; index1++) {\n        var submodelElement = submodels[index1];\n        if (submodel.idShort == submodelElement.idShort) {\n            msg.statusCode = \"400\";\n            msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Error! submodel with idShort: \" + submodel.idShort + \" already exists!\", \"Timestamp\": Date.now() }] };\n            return msg;\n        }\n    }\n    // Add Submodel after IdShort Verification\n    msg.statusCode = \"200\";\n    //var manifest = context.flow.get(\"manifest\");\n    manifest.submodels.push(msg.payload);\n    var shells = manifest.assetAdministrationShells;\n    for (var element = 0; element < shells.length; element++) {\n        if (shells[element].id == shellId) {\n            var submodelRef = {};\n            submodelRef.type = \"ModelReference\";\n            // @ts-ignore\n            var keys = [];\n            var ref = {};\n            ref.type = \"Submodel\";\n            ref.value = submodel.id;\n            keys.push(ref);\n            submodelRef.keys = keys;\n            shells[element].submodels.push(submodelRef);\n            context.flow.set(\"manifest\", manifest);\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 720,
        "wires": [
            [
                "4c9445026d0dbfe7",
                "5ecdfea790b38177"
            ]
        ]
    },
    {
        "id": "27bf9933db808abb",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1610,
        "y": 1160,
        "wires": []
    },
    {
        "id": "2bdfa22e86a97f83",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1680,
        "wires": [
            [
                "03a40b9def235c79"
            ],
            [
                "52987851f608cb92"
            ]
        ]
    },
    {
        "id": "2c32db0f315b4bd4",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Process Operation In/out",
        "func": "let body = msg.req.body;\nlet operation_from_model = msg.payload;\n\n// Verify InputVariable\nif (operation_from_model.inputVariable.length == body.inputArguments.length && operation_from_model.inoutputVariable.length == body.inoutputArguments.length){\n    \n    //Process InputVariable\n    for (let index0 = 0; index0 < operation_from_model.inputVariable.length; index0++){\n        for (let index1 = 0; index1 < body.inputArguments.length; index1++){\n            if (body.inputArguments[index1].value.submodelElement.idShort == operation_from_model.inputVariable[index0].value.submodelElement.idShort){\n                break;\n            }\n            return [null, msg];\n        }\n    }\n\n    //Process InoutputVariable\n    for (let index2 = 0; index2 < operation_from_model.inoutputVariable.length; index2++) {\n        for (let index3 = 0; index3 < body.inoutputArguments.length; index3++) {\n            if (body.inoutputArguments[index3].value.submodelElement.idShort == operation_from_model.inoutputVariable[index2].value.submodelElement.idShort) {\n                break;\n            }\n            return [null, msg];\n        }\n    }\n    return [msg,null];\n\n} else {\n    return [null, msg];\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 2060,
        "wires": [
            [
                "96bd8a4c06332a0f"
            ],
            [
                "561e9541c27f78bc"
            ]
        ]
    },
    {
        "id": "2e941c31bfadc617",
        "type": "wait-paths",
        "z": "76d11e83ac083a40",
        "name": "",
        "paths": "[\"path_2\",\"path_1\"]",
        "timeout": 15000,
        "finalTimeout": 60000,
        "x": 1430,
        "y": 180,
        "wires": [
            [
                "8cd9f1d7b31d4077"
            ]
        ]
    },
    {
        "id": "36e11f15f6ef8807",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "readSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1100,
        "wires": [
            [
                "a143c3240185a243"
            ]
        ]
    },
    {
        "id": "378bfee0745e42e1",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "addSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1260,
        "wires": [
            [
                "9c1557c92baea015"
            ]
        ]
    },
    {
        "id": "3812b6b36f3c017f",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1260,
        "wires": [
            [
                "4a0bea662236fa1f"
            ],
            [
                "c549646fcbe9247a"
            ]
        ]
    },
    {
        "id": "38935caf31e9101a",
        "type": "inject",
        "z": "76d11e83ac083a40",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 570,
        "y": 2260,
        "wires": [
            [
                "dd6d047677cb1b5e"
            ]
        ]
    },
    {
        "id": "3c52e2b7ae3d0cad",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 930,
        "y": 960,
        "wires": []
    },
    {
        "id": "3dec8a8319703c08",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "updateSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 980,
        "wires": []
    },
    {
        "id": "41d08b4e2e3251cd",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1650,
        "y": 2100,
        "wires": [
            [
                "9abb3b8618d9b8f9",
                "18963fe75ba0e9c8",
                "2c32db0f315b4bd4"
            ],
            [
                "18963fe75ba0e9c8",
                "9abb3b8618d9b8f9"
            ]
        ]
    },
    {
        "id": "44447526e761aa78",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1530,
        "y": 1080,
        "wires": []
    },
    {
        "id": "4761c89811e8df41",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "9555fa6bf8f71680"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1590,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "4818defa81a58022",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 420,
        "wires": []
    },
    {
        "id": "49df5ddc331c8aa6",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 1420,
        "wires": []
    },
    {
        "id": "4a0bea662236fa1f",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "check if submodelelement Exists",
        "func": "var element = msg.payload;\nvar submodelElementId = msg.submodelElement.idShort;\nvar submodelElements = element.submodelElements;\nfor (var submodelElementIndex = 0; submodelElementIndex < submodelElements.length; submodelElementIndex++){\n    if(submodelElementId == submodelElements[submodelElementIndex].id){\n        msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Error submodelElement with ID: \" + submodelElementId + \" already exists\", \"Timestamp\": Date.now() }] };\n        msg.statusCode = \"400\";\n        return msg;\n    }\n}\n\nelement.submodelElements.push(msg.submodelElement);\nmsg.payload = element;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1200,
        "wires": [
            [
                "702874a8c85b35e3",
                "27bf9933db808abb"
            ]
        ]
    },
    {
        "id": "4c6a19c3a29c8d31",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 1660,
        "wires": []
    },
    {
        "id": "4c9445026d0dbfe7",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "addSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 720,
        "wires": []
    },
    {
        "id": "4d89161e69d21e13",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "36e11f15f6ef8807"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 850,
        "y": 1380,
        "wires": [
            [
                "978e9ebc2e68e6a3"
            ]
        ]
    },
    {
        "id": "4f30634125ae96c1",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "removeSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1380,
        "wires": []
    },
    {
        "id": "52987851f608cb92",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "updateSubmodelElementNormal Out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1680,
        "wires": []
    },
    {
        "id": "52b180069c5cd6de",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "9555fa6bf8f71680"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 2250,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "52dfa0adfbb4c426",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Returning Submodel",
        "func": "var ShellId = msg.req.params.aasid;\nvar submodelId = msg.req.params.id;\nif (msg.jsonataStatus == \"Success\") {\n    var keys = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    for (var index1 = 0; index1 < keys.length; index1++) {\n        var key = keys[index1];\n        for (var index2 = 0; index2 < submodels.length; index2++) {\n            var submodel = submodels[index2];\n            if (submodel.id === key.value) {\n                if (submodel.id === submodelId) {\n                    msg.payload = submodel;\n                    msg.statusCode = \"200\";\n                    return msg;\n                }\n            }\n        }\n    }\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Submodel with id:\" + submodelId + \" not found\", \"Timestamp\": Date.now() }] };\n    msg.statusCode = \"400\";\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Asset Administration Shell with id:\" + ShellId + \" not found\", \"Timestamp\": Date.now() }] };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 640,
        "wires": [
            [
                "93ea0e61cda2ab1d",
                "fbbd356f292b630f"
            ]
        ]
    },
    {
        "id": "537e4af92871cf60",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Removing Submodel",
        "func": "var submodel = msg.payload;\nvar submodelId = msg.req.params.id;\nvar shellId = msg.req.params.aasid;\n\nif (msg.jsonataStatus == \"Success\") {\n    var refs = msg.jsonataResult;\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    var deletedSubmodelRef = \"\";\n    for (var index1 = 0; index1 < refs.length; index1++) {\n        var ref = refs[index1];\n        for (var index2 = 0; index2 < submodels.length; index2++) {\n            var submodel = submodels[index2];\n            if (submodel.id === ref.keys[0].value) {\n                if (submodel.idShort === submodelId) {\n                    submodels.splice(index2, 1);\n                    deletedSubmodelRef = submodel.id;\n                    break;\n                }\n            }\n        }\n    }\n    if (deletedSubmodelRef !== \"\") {\n        var shells = manifest.assetAdministrationShells;\n        for (var index3 = 0; index3 < shells.length; index3++) {\n            var shell = shells[index3];\n            if (shell.id == shellId) {\n                var submodelRefs = shell.submodels;\n                for (var index4 = 0; index4 < submodelRefs.length; index4++) {\n                    var submodelRef = submodelRefs[index4];\n                    if (submodelRef.keys[0].value === deletedSubmodelRef) {\n                        submodelRefs.splice(index4, 1);\n                        break;\n                    }\n                }\n            }\n        }\n        msg.statusCode = \"200\";\n        context.flow.set(\"manifest\", manifest);\n    } else {\n        msg.statusCode = \"400\";\n        msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Submodel with id: \" + submodelId + \" not found\", \"Timestamp\": Date.now() }] };\n    }\n\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Asset Administration Shell with id:\" + shellId + \" not found\", \"Timestamp\": Date.now() }] };\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 840,
        "wires": [
            [
                "fd6884499d28590f"
            ]
        ]
    },
    {
        "id": "560f270810ed1f23",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 1820,
        "wires": [
            [
                "1dc92cc33c4f1b52",
                "dba47d338d3e630e"
            ],
            [
                "dba47d338d3e630e"
            ]
        ]
    },
    {
        "id": "561e9541c27f78bc",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2380,
        "y": 2080,
        "wires": []
    },
    {
        "id": "573b0cd06acd1f87",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "Invoke_Op in",
        "links": [],
        "x": 315,
        "y": 2140,
        "wires": [
            [
                "ba412e4aa2441097"
            ]
        ]
    },
    {
        "id": "5ecdfea790b38177",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "9555fa6bf8f71680"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1410,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "60942554797b9963",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "removeSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 840,
        "wires": []
    },
    {
        "id": "622625b03b85c50a",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Reading SubmodelElement",
        "func": "var iterate = function (submodelElementId, collectionIds, submodelElements) {\n    for (var index = 0; index < submodelElements.length; index++) {\n        var submodelElement = submodelElements[index];\n        if ((submodelElement.modelType.name !== \"SubmodelElementCollection\" && collectionIds.length == 0) || (submodelElement.modelType.name === \"SubmodelElementCollection\" && collectionIds.length < 1)) {\n            if (submodelElement.idShort === submodelElementId) {\n                return submodelElement;\n\n            }\n\n        } else {\n            for (var collIndex = 0; collIndex < collectionIds.length; collIndex++) {\n                var collectionId = collectionIds[collIndex];\n                if (submodelElement.idShort === collectionId) {\n                    collectionIds.splice(collIndex, 1);\n                    var result = iterate(submodelElementId, collectionIds, submodelElement.value);\n                    return result;\n                }\n            }\n\n        }\n    }\n    return \"\";\n}\n\nvar submodelElementId = msg.req.params.id;\nvar submodelId = msg.req.params.submodelId;\n\nvar submodelCollectionId = [];\nvar splittedSubmodel = submodelElementId.split(\".\");\n//submodelId = splittedSubmodel[0];\n\nif (splittedSubmodel.length > 1) {\n    for (var index = 0; index < splittedSubmodel.length; index++) {\n\n        if (index < (splittedSubmodel.length - 1)) {\n            submodelCollectionId.push(splittedSubmodel[index]);\n        } else {\n            submodelElementId = splittedSubmodel[index];\n        }\n    }\n}\n\nvar selectedSubmodels = [];\nvar selctedSubmodelElements = [];\nif (msg.jsonataStatus == \"Success\") {\n    var submodels = msg.jsonataResult;\n    for (var index1 = 0; index1 < submodels.length; index1++) {\n        var submodelElements = submodels[index1].submodelElements;\n        var result = iterate(submodelElementId, submodelCollectionId, submodelElements);\n        if (result != \"\") {\n            selectedSubmodels.push(submodels[index1]);\n            selctedSubmodelElements.push(result);\n        }\n    }\n    if (selectedSubmodels.length > 0) {\n        var manifest = context.flow.get(\"manifest\");\n        var shells = manifest.assetAdministrationShells;\n        var ShellId = msg.req.params.aasid;\n        for (var index3 = 0; index3 < shells.length; index3++) {\n            if (shells[index3].id === ShellId) {\n                var submodelRefs = shells[index3].submodels;\n                for (var index4 = 0; index4 < submodelRefs.length; index4++) {\n                    var ref = submodelRefs[index4];\n                    for (var index5 = 0; index5 < selectedSubmodels.length; index5++) {\n                        if (ref.keys[0].value === selectedSubmodels[index5].id) {\n                            msg.statusCode = \"200\";\n                            msg.payload = selctedSubmodelElements[index5];\n                            return msg;\n                        }\n                    }\n                }\n            }\n        }\n        msg.statusCode = \"400\";\n        msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Aas with id:\" + ShellId + \" not found\", \"Timestamp\": Date.now() }] };\n\n    } else {\n        msg.statusCode = \"400\";\n        msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"SubmodelElement with id:\" + submodelElementId + \" not found\", \"Timestamp\": Date.now() }] };\n\n    }\n\n\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Submodel with id:\" + submodelId + \" not found\", \"Timestamp\": Date.now() }] };\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1100,
        "wires": [
            [
                "44447526e761aa78",
                "90de0dc5d36435be"
            ]
        ]
    },
    {
        "id": "63f253e2fb041de3",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "readSubmodel in",
        "links": [],
        "x": 315,
        "y": 640,
        "wires": [
            [
                "abe7b80ff3b124ce"
            ]
        ]
    },
    {
        "id": "6441ea80b49bbccd",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1730,
        "y": 1620,
        "wires": [
            [
                "d237ae4830b265ec"
            ],
            [
                "4c6a19c3a29c8d31",
                "52987851f608cb92"
            ]
        ]
    },
    {
        "id": "670cce5e96e5b83a",
        "type": "change",
        "z": "76d11e83ac083a40",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_1\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 140,
        "wires": [
            [
                "2e941c31bfadc617"
            ]
        ]
    },
    {
        "id": "673b2469fad75a4e",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 820,
        "wires": []
    },
    {
        "id": "68a53bbb4297d1b1",
        "type": "unsafe-function",
        "z": "76d11e83ac083a40",
        "d": true,
        "name": "BuildingJsonataQuery...",
        "func": "//var xml_string = msg.payload;\n//var XML = context.global.get('XML');\n\nmsg.submodelElement = msg.payload;\nmsg.submodelElementId = msg.req.params.id;\nmsg.req.params.id = msg.req.params.submodelId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "6be2bfcf9c4d44d7",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "readShells in",
        "links": [],
        "x": 315,
        "y": 300,
        "wires": [
            [
                "c4810d50aed1b354"
            ]
        ]
    },
    {
        "id": "6f584b513c2ba7eb",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "readSubmodels out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 500,
        "wires": []
    },
    {
        "id": "702874a8c85b35e3",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1690,
        "y": 1200,
        "wires": [
            [
                "c549646fcbe9247a"
            ],
            [
                "0cd7f7ce473da64a"
            ]
        ]
    },
    {
        "id": "703bbb516cbdc03f",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "readEnv out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 240,
        "wires": []
    },
    {
        "id": "70c639e039cda016",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Returning Environment...",
        "func": "msg.payload = context.flow.get(\"manifest\");\nmsg.AASID = context.flow.get('AASIdentifier');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 240,
        "wires": [
            [
                "703bbb516cbdc03f"
            ]
        ]
    },
    {
        "id": "7219e64f62fc6f3a",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1430,
        "y": 980,
        "wires": [
            [
                "4761c89811e8df41",
                "3dec8a8319703c08"
            ],
            [
                "3dec8a8319703c08"
            ]
        ]
    },
    {
        "id": "75d2fb50f033319c",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Getting aas submodels key",
        "func": "var ShellId = msg.req.params.aasid;\nvar submodelFromPayload = msg.payload;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor (var indexShell = 0; indexShell < shells.length; indexShell++) {\n    let id = shells[indexShell].id;\n    if (id == ShellId) {\n        let submodels = shells[indexShell].submodels;\n        for (var indexSubmodel = 0; indexSubmodel < submodels.length; indexSubmodel++) {\n            var submodelKeys = submodels[indexSubmodel].keys;\n            for (var indexKey = 0; indexKey < submodelKeys.length; indexKey++) {\n                let keyId = submodelKeys[indexKey].value;\n                if (keyId == submodelFromPayload.id){\n                    msg.jsonataStatus = \"Success\";\n                    return msg;\n                }\n            }\n        }\n    }\n}\n\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 720,
        "wires": [
            [
                "f47bf7b32155ce4b",
                "25dabe20ebce31f5"
            ]
        ]
    },
    {
        "id": "76572304e90f0748",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Getting aass",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor(var indexShell = 0; indexShell < shells.length; indexShell++){\n    let id = shells[indexShell].id;\n    if(id == ShellId){\n        msg.jsonataResult = shells[indexShell];\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 440,
        "wires": [
            [
                "4818defa81a58022",
                "dad22aca5566de5b"
            ]
        ]
    },
    {
        "id": "786b809ca8505dba",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Updating Submodel",
        "func": "var submodel = msg.payload;\n\nif (msg.jsonataStatus == \"Success\") {\n    var manifest = context.flow.get(\"manifest\");\n    var submodels = manifest.submodels;\n    for (var element = 0; element < submodels.length; element++) {\n        if (submodels[element].id == submodel.id) {\n            submodels[element] = submodel;\n            msg.statusCode = \"200\";\n            context.flow.set(\"manifest\", manifest);\n            return msg;\n        }\n    }\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Error submodel not found\", \"Timestamp\": Date.now() }] };\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 980,
        "wires": [
            [
                "7219e64f62fc6f3a"
            ]
        ]
    },
    {
        "id": "7889ef2f1a11325e",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "addConceptDescription in",
        "links": [],
        "x": 315,
        "y": 1820,
        "wires": [
            [
                "c26a63277371eaac"
            ]
        ]
    },
    {
        "id": "7c2e9360520b5d49",
        "type": "change",
        "z": "76d11e83ac083a40",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "submodelElementId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 2100,
        "wires": [
            [
                "ee7a27262c44995f"
            ]
        ]
    },
    {
        "id": "7d32f0cc14c604c4",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Getting aas submodels",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor(var indexShell = 0; indexShell < shells.length; indexShell++){\n    let id = shells[indexShell].id;\n    if(id == ShellId){\n        msg.jsonataResult = shells[indexShell].submodels;\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 840,
        "wires": [
            [
                "673b2469fad75a4e",
                "537e4af92871cf60"
            ]
        ]
    },
    {
        "id": "7f3f34cddc5ae948",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2260,
        "wires": []
    },
    {
        "id": "83e6fdd38ec0334e",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "9555fa6bf8f71680"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 2350,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "88085df6f12c3b4b",
        "type": "unsafe-function",
        "z": "76d11e83ac083a40",
        "d": true,
        "name": "submodelElement",
        "func": "msg.submodelElement = msg.payload;\nmsg.submodelElementId = msg.req.params.id;\nmsg.req.params.id = msg.req.params.submodelId;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "8c9780cf7e4badfc",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Persist model",
        "func": "var manifest = context.flow.get('manifest');\nvar manifestJsonStr = JSON.stringify(manifest);\nmsg.payload = manifestJsonStr;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1920,
        "wires": [
            [
                "92bec72808f48b2e"
            ]
        ]
    },
    {
        "id": "8cd9f1d7b31d4077",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "createEnv out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 180,
        "wires": []
    },
    {
        "id": "8dbd0137992ac4ce",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "readAssets out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 360,
        "wires": []
    },
    {
        "id": "8f8e3546b9047865",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "addSubmodel in",
        "links": [],
        "x": 315,
        "y": 720,
        "wires": [
            [
                "75d2fb50f033319c"
            ]
        ]
    },
    {
        "id": "901ba1fde76d7adf",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Getting aas submodels",
        "func": "var submodelFromPayload = msg.payload;\nvar manifest = context.flow.get('manifest');\n\nvar submodels = manifest.submodels;\n\nfor (var indexSubmodel = 0; indexSubmodel < submodels.length; indexSubmodel++){\n    let id = submodels[indexSubmodel].id;\n    if (id == submodelFromPayload.id){\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 980,
        "wires": [
            [
                "3c52e2b7ae3d0cad",
                "786b809ca8505dba"
            ]
        ]
    },
    {
        "id": "90de0dc5d36435be",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "readSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1100,
        "wires": []
    },
    {
        "id": "9111964efb6b63e5",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "63f253e2fb041de3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 750,
        "y": 2140,
        "wires": [
            [
                "b6eae2f0d2bc5005"
            ]
        ]
    },
    {
        "id": "919fbeeb7aa61bbd",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1440,
        "wires": []
    },
    {
        "id": "92bec72808f48b2e",
        "type": "file",
        "z": "76d11e83ac083a40",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1340,
        "y": 1920,
        "wires": [
            [
                "d56e50a8d733cd77"
            ]
        ]
    },
    {
        "id": "93ea0e61cda2ab1d",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 620,
        "wires": []
    },
    {
        "id": "9555fa6bf8f71680",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "persistEnv in",
        "links": [],
        "x": 315,
        "y": 1920,
        "wires": [
            [
                "9f3eb517b5c979ac"
            ]
        ]
    },
    {
        "id": "96bd8a4c06332a0f",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2380,
        "y": 2040,
        "wires": []
    },
    {
        "id": "978e9ebc2e68e6a3",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 1380,
        "wires": [
            [
                "dc5d5ef5fcd4473a"
            ],
            [
                "4f30634125ae96c1"
            ]
        ]
    },
    {
        "id": "9859f4532779d987",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "36e11f15f6ef8807"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1530,
        "y": 1620,
        "wires": [
            [
                "6441ea80b49bbccd"
            ]
        ]
    },
    {
        "id": "99cf767b7c80650a",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 340,
        "wires": []
    },
    {
        "id": "9abb3b8618d9b8f9",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 2040,
        "wires": []
    },
    {
        "id": "9c1557c92baea015",
        "type": "change",
        "z": "76d11e83ac083a40",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submodelElement",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1260,
        "wires": [
            [
                "e27650a89d8be432",
                "9fd80d6d7c1c4b16"
            ]
        ]
    },
    {
        "id": "9f3eb517b5c979ac",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Getting Model filepath",
        "func": "msg.filename = context.global.get(\"ModelFilePath\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1920,
        "wires": [
            [
                "8c9780cf7e4badfc"
            ]
        ]
    },
    {
        "id": "9fd80d6d7c1c4b16",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1220,
        "wires": []
    },
    {
        "id": "a143c3240185a243",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Getting aas submodels",
        "func": "var submodelId = msg.req.params.submodelId;\nvar submodelCollectionId = [];\nsubmodelCollectionId = msg.req.params.submodelId.split(\".\");\nvar manifest = context.flow.get('manifest');\n\nvar submodels = manifest.submodels;\n\nfor (var indexSubmodel = 0; indexSubmodel < submodels.length; indexSubmodel++){\n    let id = submodels[indexSubmodel].id;\n    if (id == submodelId){\n        msg.jsonataResult = [];\n        msg.jsonataResult.push(submodels[indexSubmodel]);\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1100,
        "wires": [
            [
                "0464b642e2cba8e3",
                "622625b03b85c50a"
            ]
        ]
    },
    {
        "id": "abe7b80ff3b124ce",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Getting aas submodels keys",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor(var indexShell = 0; indexShell < shells.length; indexShell++){\n    let id = shells[indexShell].id;\n    if(id == ShellId){\n        let submodels = shells[indexShell].submodels;\n        var keys = [];\n        for(var indexSubmodel = 0; indexSubmodel < submodels.length; indexSubmodel++){\n            keys = [...submodels[indexSubmodel].keys, ...keys];\n        }\n        msg.jsonataResult = keys;\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 640,
        "wires": [
            [
                "52dfa0adfbb4c426"
            ]
        ]
    },
    {
        "id": "ac57850bb4cbfffa",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "removeSubmodel in",
        "links": [],
        "x": 315,
        "y": 840,
        "wires": [
            [
                "7d32f0cc14c604c4"
            ]
        ]
    },
    {
        "id": "ad8c675cb3d8441b",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "9555fa6bf8f71680"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1610,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "af1e551e330320df",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "preprocessing and flattening JSON",
        "func": "function isJSONString(str) {\n    try {\n        JSON.parse(str);\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getFlatObject(object) {\n    function iter(o, p) {\n        if (o && typeof o === 'object') {\n            Object.keys(o).forEach(function (k) {\n                iter(o[k], p.concat(k));\n            });\n            return;\n        }\n        path[p.join('.')] = o;\n    }\n\n    var path = {};\n    iter(object, []);\n    return path;\n}\n\nlet flattenObject;\nlet keys = [];\nlet object = JSON.parse(msg.value);\n\nif (object.hasOwnProperty(\"blob\")) {\n    let data = object.blob;\n    flattenObject = getFlatObject(data);\n    keys = Object.keys(flattenObject);\n    //msg.object = data;\n} else {\n    if(msg.payload.modelType == \"Property\"){\n        if(isJSONString(msg.value)){\n            flattenObject = msg.value;\n            keys.push(\"\");\n        }\n    } else if (msg.payload.modelType == \"SubmodelElementCollection\"){\n        flattenObject = getFlatObject(JSON.parse(msg.value));\n        keys = Object.keys(flattenObject);\n    }\n    \n}\n\n//let flattenObject = getFlatObject(JSON.parse(msg.value));\n\nmsg.flattenObject = flattenObject;\nmsg.keys = keys;\nfor (let keyIndex = 0; keyIndex < keys.length; keyIndex++) {\n    let substringsArray = keys[keyIndex].split(\".\");\n    keys[keyIndex] = keys[keyIndex].replace(\".\" + substringsArray[substringsArray.length - 1], \"\");\n}\nlet uniqueKeys = Array.from(new Set(keys));\n\nlet pathsToUpdate = [];\nif (uniqueKeys.length > 1) {\n    for (let uniqueKeyIndex = 0; uniqueKeyIndex < uniqueKeys.length; uniqueKeyIndex++) {\n        uniqueKeys[uniqueKeyIndex] = msg.submodelElementId + \".\" + uniqueKeys[uniqueKeyIndex];\n        pathsToUpdate.push(uniqueKeys[uniqueKeyIndex]);\n    }\n} else {\n    uniqueKeys[0] = msg.submodelElementId;\n    pathsToUpdate.push(uniqueKeys[0]);\n}\nmsg.pathsToUpdate = pathsToUpdate;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 1460,
        "wires": [
            [
                "49df5ddc331c8aa6",
                "e7cb9ec4caa6c2d5"
            ]
        ]
    },
    {
        "id": "b09f91f0408ac6d9",
        "type": "json",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "233e7b5f075a31d4",
                "0fa5222b3f446db9"
            ]
        ]
    },
    {
        "id": "b0e8c7b07d3faae6",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Returning Submodels",
        "func": "var manifest = context.flow.get(\"manifest\");\nmsg.payload = manifest.submodels;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 500,
        "wires": [
            [
                "6f584b513c2ba7eb"
            ]
        ]
    },
    {
        "id": "b6eae2f0d2bc5005",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 2140,
        "wires": [
            [
                "7c2e9360520b5d49"
            ],
            [
                "18963fe75ba0e9c8"
            ]
        ]
    },
    {
        "id": "b90a4c620b8bf4a9",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "readEnv in",
        "links": [],
        "x": 315,
        "y": 240,
        "wires": [
            [
                "70c639e039cda016"
            ]
        ]
    },
    {
        "id": "ba412e4aa2441097",
        "type": "change",
        "z": "76d11e83ac083a40",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submodelElement",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "submodelElementId",
                "pt": "msg",
                "to": "req.params.id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "req.params.submodelId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 2140,
        "wires": [
            [
                "9111964efb6b63e5"
            ]
        ]
    },
    {
        "id": "bbab70355f2be65e",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Getting aas submodels",
        "func": "var ShellId = msg.req.params.aasid;\nvar manifest = context.flow.get('manifest');\n\nvar shells = manifest.assetAdministrationShells;\n\nfor(var indexShell = 0; indexShell < shells.length; indexShell++){\n    let id = shells[indexShell].id;\n    if(id == ShellId){\n        msg.jsonataResult = shells[indexShell].submodels;\n        msg.jsonataStatus = \"Success\";\n        return msg;\n    }\n}\n\nmsg.jsonataStatus = \"Failure\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 560,
        "wires": [
            [
                "c086b1d2bcc6d15f"
            ]
        ]
    },
    {
        "id": "bceb994e404c988a",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "updateSubmodelElementValue in",
        "links": [],
        "x": 315,
        "y": 1520,
        "wires": [
            [
                "1cc71f8525febf7b"
            ]
        ]
    },
    {
        "id": "bd0433c5d06b8017",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Returning Asset-Information",
        "func": "var ShellId = msg.req.params.aasid;\nif (msg.jsonataStatus == \"Success\") {\n    var assetInformation = msg.jsonataResult;\n    msg.payload = assetInformation;\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Asset Administration Shell with id:\" + ShellId + \" not found\", \"Timestamp\": Date.now() }] };\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 360,
        "wires": [
            [
                "8dbd0137992ac4ce"
            ]
        ]
    },
    {
        "id": "bd236aee7c151d99",
        "type": "change",
        "z": "76d11e83ac083a40",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submodelElement",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "submodelElementId",
                "pt": "msg",
                "to": "req.params.id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "req.params.id",
                "pt": "msg",
                "to": "req.params.submodelId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1680,
        "wires": [
            [
                "1ad81b7bfe10f421"
            ]
        ]
    },
    {
        "id": "c086b1d2bcc6d15f",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Returning Submodel by AAS id",
        "func": "var ShellId = msg.req.params.id;\nif (msg.jsonataStatus == \"Success\") {\n    msg.payload = msg.jsonataResult;\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"404\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Asset Adminsitration Shell with id:\" + ShellId + \" not found\", \"Timestamp\": Date.now() }] };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 560,
        "wires": [
            [
                "d7b711e1c4c262aa"
            ]
        ]
    },
    {
        "id": "c24f0c63d44da317",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "63f253e2fb041de3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 750,
        "y": 1520,
        "wires": [
            [
                "919fbeeb7aa61bbd",
                "ea92da5a91c28dd9"
            ]
        ]
    },
    {
        "id": "c26a63277371eaac",
        "type": "change",
        "z": "76d11e83ac083a40",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "conceptDescription",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1820,
        "wires": [
            [
                "eacd5ebbca532874"
            ]
        ]
    },
    {
        "id": "c40c85c495cec99f",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "readSubmodels in",
        "links": [],
        "x": 315,
        "y": 500,
        "wires": [
            [
                "b0e8c7b07d3faae6"
            ]
        ]
    },
    {
        "id": "c4810d50aed1b354",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Returning Shells...",
        "func": "var manifest = context.flow.get(\"manifest\");\nmsg.payload = manifest.assetAdministrationShells;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 300,
        "wires": [
            [
                "0ac57037dc16c894"
            ]
        ]
    },
    {
        "id": "c549646fcbe9247a",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "addSubmodelElement out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1260,
        "wires": []
    },
    {
        "id": "c6869b1ed053a387",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "readAasSubmodels in",
        "links": [],
        "x": 315,
        "y": 560,
        "wires": [
            [
                "bbab70355f2be65e"
            ]
        ]
    },
    {
        "id": "ca5a44ae4dac509b",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "readAas out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 440,
        "wires": []
    },
    {
        "id": "cb8d45903d954f61",
        "type": "change",
        "z": "76d11e83ac083a40",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths[\"path_2\"]",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 180,
        "wires": [
            [
                "2e941c31bfadc617"
            ]
        ]
    },
    {
        "id": "cbefa271f5cf2df2",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "removeSubmodelElement in",
        "links": [],
        "x": 315,
        "y": 1380,
        "wires": [
            [
                "4d89161e69d21e13"
            ]
        ]
    },
    {
        "id": "d237ae4830b265ec",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Update SubmodelElement",
        "func": "var verifySubmodelBelongsToAasId = function (aasId, shells, submodel) {\n    for (var index = 0; index < shells.length; index++) {\n        if (shells[index].id === aasId) {\n            var submodelRefs = shells[index].submodels;\n            for (var index2 = 0; index2 < submodelRefs.length; index2++) {\n                var ref = submodelRefs[index2];\n                if (ref.keys[0].value === submodel.id) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\nvar iterate = function (submodelToUpdate, collectionIds, submodelElements) {\n    for (var index = 0; index < submodelElements.length; index++) {\n        if (submodelElements[index].modelType !== \"SubmodelElementCollection\" || (submodelElements[index].modelType === \"SubmodelElementCollection\" && collectionIds.length < 1)) {\n            if (submodelElements[index].idShort === submodelToUpdate.idShort) {\n                submodelElements[index] = submodelToUpdate;\n                return submodelToUpdate;\n\n            }\n\n        } else {\n            for (var collIndex = 0; collIndex < collectionIds.length; collIndex++) {\n                var collectionId = collectionIds[collIndex];\n                if (submodelElements[index].idShort === collectionId) {\n                    collectionIds.splice(collIndex, 1);\n                    var result = iterate(submodelToUpdate, collectionIds, submodelElements[index].value);\n                    return result;\n                }\n            }\n\n        }\n    }\n    return \"\";\n}\n\nlet manifest = context.flow.get(\"manifest\");\nlet aasid = msg.req.params.aasid;\nvar submodelElementId = msg.req.params.id;\nvar submodelId = msg.req.params.submodelId;\n\nvar submodelCollectionId = [];\nvar submodelToUpdate = msg.submodelElement;\n\nif (msg.jsonataStatus == \"Success\") {\n\n\n    for (var index1 = 0; index1 < manifest.submodels.length; index1++) {\n\n        let verified = verifySubmodelBelongsToAasId(aasid, manifest.assetAdministrationShells, manifest.submodels[index1]);\n\n        if (verified) {\n            var result = iterate(submodelToUpdate, submodelCollectionId, manifest.submodels[index1].submodelElements);\n            if (result != \"\") {\n                context.flow.set(\"manifest\", manifest);\n                msg.payload = result;\n                msg.statusCode = \"200\";\n                return [msg, null];\n            }\n        }\n    }\n\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"SubmodelElement with id:\" + submodelElementId + \" not found\", \"Timestamp\": Date.now() }] };\n\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Submodel with id:\" + submodelId + \" not found\", \"Timestamp\": Date.now() }] };\n\n}\n\nreturn [null, msg];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 1580,
        "wires": [
            [
                "52b180069c5cd6de",
                "52987851f608cb92"
            ],
            [
                "52987851f608cb92"
            ]
        ]
    },
    {
        "id": "d2a8a0b77ff29088",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "setSubmodelElement",
        "func": "msg.submodelElement = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "d56e50a8d733cd77",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "persistEnv out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1920,
        "wires": []
    },
    {
        "id": "d7b711e1c4c262aa",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "readAasSubmodels out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 560,
        "wires": []
    },
    {
        "id": "dad22aca5566de5b",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Returning AAS",
        "func": "var ShellId = msg.req.params.id;\nif (msg.jsonataStatus == \"Success\") {\n    msg.payload = msg.jsonataResult;\n    msg.statusCode = \"200\";\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Asset Adminsitration Shell with id:\" + ShellId + \" not found\", \"Timestamp\": Date.now() }] };\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 440,
        "wires": [
            [
                "ca5a44ae4dac509b"
            ]
        ]
    },
    {
        "id": "dba47d338d3e630e",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "addConceptDescription out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 1820,
        "wires": []
    },
    {
        "id": "dc5d5ef5fcd4473a",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Remove SubmodelElement",
        "func": "var manifest = context.flow.get(\"manifest\");\nvar submodels = manifest.submodels;\nfor (var elementSub = 0; elementSub < submodels.length; elementSub++) {\n    var submodelElements = submodels[elementSub].submodelElements;\n    for (var elementSubElem = 0; elementSubElem < submodelElements.length; elementSubElem++) {\n        if (submodelElements[elementSubElem].idShort == msg.payload.idShort) {\n            submodelElements.splice(elementSubElem, 1);\n            context.flow.set(\"manifest\", manifest);\n            msg.statusCode = \"200\";\n            return msg;\n        }\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 1360,
        "wires": [
            [
                "4f30634125ae96c1"
            ]
        ]
    },
    {
        "id": "dd6d047677cb1b5e",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Stringify",
        "func": "function getFlatObject(object) {\n    function iter(o, p) {\n        if (o && typeof o === 'object') {\n            Object.keys(o).forEach(function (k) {\n                iter(o[k], p.concat(k));\n            });\n            return;\n        }\n        path[p.join('.')] = o;\n    }\n\n    var path = {};\n    iter(object, []);\n    return path;\n}\n\nlet manifest = context.flow.get(\"manifest\");\nlet flattenObject = getFlatObject(manifest);\nmsg.payload = flattenObject;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 2260,
        "wires": [
            [
                "7f3f34cddc5ae948"
            ]
        ]
    },
    {
        "id": "e27650a89d8be432",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "63f253e2fb041de3"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 910,
        "y": 1260,
        "wires": [
            [
                "3812b6b36f3c017f"
            ]
        ]
    },
    {
        "id": "e4c3bc2b67808cac",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "readAssets in",
        "links": [],
        "x": 315,
        "y": 360,
        "wires": [
            [
                "08e30e2c325e7de9"
            ]
        ]
    },
    {
        "id": "e5eb4cee6f687de7",
        "type": "inject",
        "z": "76d11e83ac083a40",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 461,
        "y": 57.500030517578125,
        "wires": [
            [
                "06b5ab314b17cb1d"
            ]
        ]
    },
    {
        "id": "e7cb9ec4caa6c2d5",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Updating SubmodelElement",
        "func": "let submodelElement = \"\";\nlet submodelElementId = msg.req.params.id;\nlet submodelId = msg.req.params.submodelId;\nlet persist = \"false\";\nif (msg.req.query.content == \"value\") {\n\n    msg.payload.value = msg.submodelElement[msg.submodelElementId];\n    submodelElement = msg.payload;\n\n} else {\n    submodelElement = msg.submodelElement;\n    persist = \"true\";\n}\n\n\nlet updateSubmodelElementValues = function (submodelElements, indexIdPath, collectionIds, value) {\n\n    if (indexIdPath < collectionIds.length) {\n\n        let idPath = collectionIds[indexIdPath];\n\n        for (let submodelElement = 0; submodelElement < submodelElements.length; submodelElement++) {\n\n            let submodelElementIdentifier = submodelElements[submodelElement].idShort;\n\n            let modelType = submodelElements[submodelElement].modelType;\n\n            if (submodelElementIdentifier === idPath && modelType === \"SubmodelElementCollection\" && indexIdPath < (collectionIds.length - 1)) {\n\n                indexIdPath = indexIdPath + 1;\n\n                return updateSubmodelElementValues(submodelElements[submodelElement].value, indexIdPath, collectionIds, value);\n\n            } else if (submodelElementIdentifier === idPath && modelType === \"SubmodelElementCollection\" && indexIdPath === (collectionIds.length - 1)) {\n\n                let values = value;\n\n                let keys = Object.keys(values);\n\n                for (let keyIndex = 0; keyIndex < keys.length; keyIndex++) {\n\n                    let selectedValue = 0;\n\n                    selectedValue = values[keys[keyIndex]];\n                    //msg.debug15 = selectedValue;\n                    //return msg;\n                    if (typeof selectedValue != 'object') {\n                        for (let valuesIndex = 0; valuesIndex < submodelElements[submodelElement].value.length; valuesIndex++) {\n                            if (submodelElements[submodelElement].value[valuesIndex].idShort == keys[keyIndex]) {\n                                submodelElements[submodelElement].value[valuesIndex].value = selectedValue;\n                                break;\n                            }\n                        }\n                    }\n\n\n                }\n\n                return true;\n\n            }\n            else if (submodelElementIdentifier === idPath && (modelType === \"Property\" || modelType === \"Blob\")) {\n                //msg.debug11 = \"Entrei \" + submodelElements[submodelElement].idShort + \" and \" + idPath + \" \" + value;\n\n                submodelElements[submodelElement].value = value;\n                return true;\n\n            }\n\n        }\n\n    } else {\n\n        return false;\n\n    }\n\n}\n\nvar submodelCollectionId = [];\n\nlet manifest = context.flow.get(\"manifest\");\nif (msg.jsonataStatus == \"Success\") {\n\n    let submodelRoot = msg.jsonataResult[0];\n\n    let pathsToSubmodelElements = msg.pathsToUpdate;\n\n    let submodelRootIdentifier = submodelRoot.id;\n\n    let manifestSubmodels = manifest.submodels;\n\n    let manifestSubmodelElements = {};\n\n    let stratingJsonDecomposition = msg.submodelElementId.split(\".\");\n\n    for (let manifestSubmodel = 0; manifestSubmodel < manifestSubmodels.length; manifestSubmodel++) {\n\n        let manifestSubmodelIdentifier = manifestSubmodels[manifestSubmodel].id;\n\n        if (submodelRootIdentifier === manifestSubmodelIdentifier) {\n\n            manifestSubmodelElements = manifestSubmodels[manifestSubmodel].submodelElements;\n\n        }\n\n    }\n\n    for (let pathIndex = 0; pathIndex < pathsToSubmodelElements.length; pathIndex++) {\n\n        let collectionIds = pathsToSubmodelElements[pathIndex].split(\".\");\n        msg.collectionIds = collectionIds;\n        let value = msg.submodelElement[msg.submodelElementId];\n        //msg.getValue1 = value;\n        let jsonObjectValue = {};\n\n        let processedValue = {};\n\n        if (collectionIds.length > 1) {\n            jsonObjectValue = JSON.parse(value);\n            let decomposeJsonObj = jsonObjectValue;\n            for (let index = stratingJsonDecomposition.length; index < collectionIds.length; index++) {\n                decomposeJsonObj = decomposeJsonObj[collectionIds[index]];\n            }\n            /*if (typeof decomposeJsonObj === \"string\") {\n                 processedValue = JSON.stringify(decomposeJsonObj.replace(/^\"|\"$/g, ''));\n             } else {\n                 processedValue = decomposeJsonObj;\n             }*/\n            processedValue = decomposeJsonObj;\n            //msg.stringified = decomposeJsonObj;\n\n        } else {\n            if (typeof value == \"object\") {\n                jsonObjectValue = JSON.parse(value);\n            } else {\n                processedValue = value;\n            }\n\n        }\n        //msg.getValue2 = processedValue;\n        //msg.getValue3 = manifestSubmodelElements;\n\n        //msg.getValue4 = collectionIds;\n        //return msg;\n        updateSubmodelElementValues(manifestSubmodelElements, 0, collectionIds, processedValue);\n\n    }\n    context.flow.set(\"manifest\", manifest);\n\n    if (persist == \"true\") {\n\n        return [msg, null];\n\n    } else {\n\n        return [null, msg];\n    }\n\n} else {\n    msg.statusCode = \"400\";\n    msg.payload = { \"Messages\": [{ \"Code\": \"BadRequest\", \"CorrelationId\": null, \"MessageType\": \"Error\", \"Text\": \"Submodel with id:\" + submodelId + \" not found\", \"Timestamp\": Date.now() }] };\n    return [null, msg];\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 1460,
        "wires": [
            [
                "83e6fdd38ec0334e",
                "1a1935f08f70c863"
            ],
            [
                "1a1935f08f70c863"
            ]
        ]
    },
    {
        "id": "e94e5642d24eb440",
        "type": "link in",
        "z": "76d11e83ac083a40",
        "name": "readAas in",
        "links": [],
        "x": 315,
        "y": 440,
        "wires": [
            [
                "76572304e90f0748"
            ]
        ]
    },
    {
        "id": "ea92da5a91c28dd9",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 1520,
        "wires": [
            [
                "25a1b82f5c57df38"
            ],
            [
                "1a1935f08f70c863"
            ]
        ]
    },
    {
        "id": "eacd5ebbca532874",
        "type": "function",
        "z": "76d11e83ac083a40",
        "name": "Adding Concept Description",
        "func": "var manifest = context.flow.get(\"manifest\");\nvar descriptions = manifest.conceptDescriptions;\nvar newDescription = msg.conceptDescription;\nfor (let descriptionIndex = 0; descriptionIndex < descriptions.length; descriptionIndex++){\n    if (descriptions[descriptionIndex].id == newDescription.id){\n        msg.payload = \"Error Concept Description with ID already exists\";\n        msg.statusCode = \"400\";\n        return msg;\n    }\n}\nmsg.statusCode = \"200\";\nmanifest.conceptDescriptions.push(msg.payload);\ncontext.flow.set(\"manifest\", manifest);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1820,
        "wires": [
            [
                "560f270810ed1f23"
            ]
        ]
    },
    {
        "id": "ee7a27262c44995f",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "36e11f15f6ef8807"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1430,
        "y": 2100,
        "wires": [
            [
                "41d08b4e2e3251cd"
            ]
        ]
    },
    {
        "id": "f47bf7b32155ce4b",
        "type": "debug",
        "z": "76d11e83ac083a40",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 700,
        "wires": []
    },
    {
        "id": "fbbd356f292b630f",
        "type": "link out",
        "z": "76d11e83ac083a40",
        "name": "readSubmodel out",
        "mode": "return",
        "links": [],
        "x": 2435,
        "y": 640,
        "wires": []
    },
    {
        "id": "fd476a5d2d47de14",
        "type": "link call",
        "z": "76d11e83ac083a40",
        "name": "",
        "links": [
            "36e11f15f6ef8807"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1350,
        "y": 1480,
        "wires": [
            [
                "0fcaec0eb0bba0a6"
            ]
        ]
    },
    {
        "id": "fd6884499d28590f",
        "type": "switch",
        "z": "76d11e83ac083a40",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1430,
        "y": 840,
        "wires": [
            [
                "60942554797b9963",
                "ad8c675cb3d8441b"
            ],
            [
                "60942554797b9963"
            ]
        ]
    },
    {
        "id": "4c73862aca011a2c",
        "type": "function",
        "z": "d6ac686a8b33b0c0",
        "name": "",
        "func": "msg.topic = \"select * FROM aasLogs\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 740,
        "wires": [
            [
                "e5d1870f13a17d9c"
            ]
        ]
    },
    {
        "id": "4da6b4b63bc9c3be",
        "type": "sqlite",
        "z": "d6ac686a8b33b0c0",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1130,
        "y": 800,
        "wires": [
            [
                "d46e4990ad8a2374"
            ]
        ]
    },
    {
        "id": "9b99d064808aa5a3",
        "type": "inject",
        "z": "d6ac686a8b33b0c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 600,
        "y": 740,
        "wires": [
            [
                "4c73862aca011a2c",
                "d9231ce7a7157e12"
            ]
        ]
    },
    {
        "id": "d46e4990ad8a2374",
        "type": "debug",
        "z": "d6ac686a8b33b0c0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 740,
        "wires": []
    },
    {
        "id": "d9231ce7a7157e12",
        "type": "function",
        "z": "d6ac686a8b33b0c0",
        "name": "",
        "func": "msg.topic = \"select * FROM accountLogs\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 800,
        "wires": [
            [
                "4da6b4b63bc9c3be"
            ]
        ]
    },
    {
        "id": "e5d1870f13a17d9c",
        "type": "sqlite",
        "z": "d6ac686a8b33b0c0",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1130,
        "y": 740,
        "wires": [
            [
                "d46e4990ad8a2374"
            ]
        ]
    },
    {
        "id": "8dd79e29ee4bb8bd",
        "type": "ui_ui_control",
        "z": "32c5a22a534a4588",
        "g": "102e2f75f3511731",
        "name": "",
        "events": "change",
        "x": 2560,
        "y": 3340,
        "wires": [
            [
                "373aadca35bb6670"
            ]
        ]
    },
    {
        "id": "10d103b265e57a30",
        "type": "http request",
        "z": "32c5a22a534a4588",
        "g": "102e2f75f3511731",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3020,
        "y": 3340,
        "wires": [
            [
                "0bf7d64d4bfefde8",
                "e8f3a993c3f7c730"
            ]
        ]
    },
    {
        "id": "373aadca35bb6670",
        "type": "unsafe-function",
        "z": "32c5a22a534a4588",
        "g": "102e2f75f3511731",
        "name": "",
        "func": "\nmsg.method = 'GET';\nmsg.url = context.global.get('namespace') + \"/aasServer/subscriptions\";\n///aasServer/shells/connections\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2810,
        "y": 3340,
        "wires": [
            [
                "10d103b265e57a30"
            ]
        ]
    },
    {
        "id": "344c7fd18a7e4574",
        "type": "inject",
        "z": "32c5a22a534a4588",
        "g": "102e2f75f3511731",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2570,
        "y": 3540,
        "wires": [
            [
                "373aadca35bb6670"
            ]
        ]
    },
    {
        "id": "0bf7d64d4bfefde8",
        "type": "unsafe-function",
        "z": "32c5a22a534a4588",
        "g": "102e2f75f3511731",
        "name": "connectionsNr",
        "func": "var outMsg = {};\noutMsg.payload = {};\noutMsg.payload.data = msg.payload.length;\noutMsg.payload.link = \"activeSubscriptions\";\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3260,
        "y": 3380,
        "wires": [
            [
                "09c675c2a2ee0d9c"
            ]
        ]
    },
    {
        "id": "e8f3a993c3f7c730",
        "type": "unsafe-function",
        "z": "32c5a22a534a4588",
        "g": "102e2f75f3511731",
        "name": "subscriptions",
        "func": "var outMsg = {};\noutMsg.payload = msg.payload\ncontext.flow.set(\"subscriptions\", msg.payload);\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3270,
        "y": 3340,
        "wires": [
            [
                "550bb7dbcd65bfbb"
            ]
        ]
    },
    {
        "id": "f9732816139692c1",
        "type": "sqlite",
        "z": "32c5a22a534a4588",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "select * FROM aasLogs",
        "name": "",
        "x": 2520,
        "y": 1580,
        "wires": [
            [
                "8daaee4973cea4d8",
                "96b608430d19fe24"
            ]
        ]
    },
    {
        "id": "99c9e538bba972ef",
        "type": "sqlite",
        "z": "32c5a22a534a4588",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "delete FROM accountLogs",
        "name": "",
        "x": 2520,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "7d562babb8a66d9f",
        "type": "sqlite",
        "z": "32c5a22a534a4588",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "delete FROM aasLogs",
        "name": "",
        "x": 2520,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "a1b7b2b8b51d564b",
        "type": "sqlite",
        "z": "32c5a22a534a4588",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "select * FROM accountLogs",
        "name": "",
        "x": 2520,
        "y": 1660,
        "wires": [
            [
                "99bd217768756dbc",
                "6963ccec1140c78e"
            ]
        ]
    },
    {
        "id": "48a65c5d8b051888",
        "type": "pdfmake",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "outputType": "base64",
        "inputProperty": "payload",
        "options": "{}",
        "outputProperty": "payload",
        "x": 1160,
        "y": 3280,
        "wires": [
            [
                "bc60b4150bce6cbb"
            ]
        ]
    },
    {
        "id": "bc60b4150bce6cbb",
        "type": "file",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "filename": "/app/report.pdf",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "base64",
        "x": 1320,
        "y": 3280,
        "wires": [
            [
                "9511ede6fcb3958e"
            ]
        ]
    },
    {
        "id": "5cb620e639653f0a",
        "type": "function",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "ReportObject",
        "func": "var outMsg = {};\noutMsg.payload = {};\nvar header = msg.payload;\noutMsg.payload.header = header;\nvar report = {};\nreport.AASIdentifier = context.global.get(\"AASIdentifier\");\nreport.status = context.global.get(\"NOVAAS_Overall_Status\");\nreport.statsSBI = context.global.get(\"statsSBI\");\nreport.statusCheckSBI = context.global.get(\"statusCheckSBI\");\nreport.logs = context.flow.get(\"logs\");\nreport.logo = context.flow.get(\"logoBase64\");\nreport.accountlog = context.flow.get(\"accountlog\");\noutMsg.payload.report = report;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3280,
        "wires": [
            [
                "01bb6184dc050c52"
            ]
        ]
    },
    {
        "id": "655fd5738e5d283f",
        "type": "ui_ui_control",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "events": "all",
        "x": 190,
        "y": 3280,
        "wires": [
            [
                "726b1c7784b35142",
                "5d353a2e32079e97",
                "985dd8338cd4b309"
            ]
        ]
    },
    {
        "id": "726b1c7784b35142",
        "type": "function",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "PreFilling",
        "func": "msg.payload = {};\nmsg.payload.date = new Date();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "9511ede6fcb3958e",
        "type": "function",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "download Group",
        "func": "var msg = {};\n\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    show : [\"Reporting_ReportDownload\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 3280,
        "wires": [
            [
                "6c509196a5166613"
            ]
        ]
    },
    {
        "id": "6c509196a5166613",
        "type": "ui_ui_control",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "show download",
        "x": 1720,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "5d353a2e32079e97",
        "type": "function",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "download group",
        "func": "\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    hide : [\"Reporting_ReportDownload\"],\n    show: [\"Reporting_form\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 3240,
        "wires": [
            [
                "d9fa8fe234df30cc",
                "80b73b7b2296415f"
            ]
        ]
    },
    {
        "id": "d9fa8fe234df30cc",
        "type": "ui_ui_control",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "hide download",
        "x": 610,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "7e2c47738401b95c",
        "type": "comment",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "Reporting Section",
        "info": "",
        "x": 240,
        "y": 3040,
        "wires": []
    },
    {
        "id": "985dd8338cd4b309",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 3120,
        "wires": []
    },
    {
        "id": "01bb6184dc050c52",
        "type": "function",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "func": "var tableBuilder = function (data, columns) {\n    var body = [];\n\n    body.push(columns);\n\n    data.forEach(function(row) {\n        var dataRow = [];\n\n        columns.forEach(function(column) {\n            dataRow.push(row[column].toString());\n        })\n\n        body.push(dataRow);\n    });\n\n    return body;\n}\n\nvar checkValue = function(value){\n    if(value.link){\n        return value.link;\n    } else if(value.value){\n        return value.value;\n    }\n}\n\nvar convertTime = function(value){\n    var time = new Date(value.time);\n    return time;\n}\n\nvar outMsg = {};\n\nvar accountLogTable = [];\nfor (var elementAccountLog in msg.payload.report.accountlog){\n    accountLogTable.push(\n        {\n            \"accessAt\": msg.payload.report.accountlog[elementAccountLog].accessAt,\n            \"username\": msg.payload.report.accountlog[elementAccountLog].username\n        }\n        );\n}\n\nvar logsTable = [];\nfor (var elementLogs in msg.payload.report.logs){\n    logsTable.push(\n        {\n            \"observableReference\": msg.payload.report.logs[elementLogs].observableReference,\n            \"_msgid\": msg.payload.report.logs[elementLogs]._msgid,\n            \"time\": convertTime(msg.payload.report.logs[elementLogs]),\n            \"value\": checkValue(msg.payload.report.logs[elementLogs])\n        }\n        );\n}\n\nvar dd = {\n     \"header\": function(currentPage, pageCount, pageSize) {\n         if(msg.payload.report.logo){\n            return [\n                { \"image\": \"data:image/png;base64,\" + msg.payload.report.logo, \"height\": 30, \"width\": 30 }\n            ]\n        } else return;\n    },\n    \"footer\": function(currentPage, pageCount, pageSize) {\n        if(msg.payload.report.logo){\n            return [\n                { \"image\": \"data:image/png;base64,\" + msg.payload.report.logo, \"height\": 30, \"width\": 30 }\n            ]\n        } else return;\n    },    \n    \"content\": [\n\t\t{ \"text\": \"NOVAsset Administration Shell Report\", \"style\": \"header\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t\t\"widths\": [\"*\", \"*\"],\n\t\t\t\t\"body\": [\n\t\t\t\t\t[\"Created by \", msg.payload.header.user],\n\t\t\t\t\t[\"Created at \", msg.payload.header.date],\n\t\t\t\t\t[\"Notes \", msg.payload.header.notes]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"NOVAAS Overview\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": [\"*\", \"*\"],\n\t\t\t\t\"body\": [\n\t\t\t\t\t[\"NOVAAS Identifier\", msg.payload.report.AASIdentifier],\n\t\t\t\t\t[\"Status\", msg.payload.report.status]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t\t\"widths\": [\"*\", \"*\"],\n\t\t\t\t\"headerRows\": 1,\n\t\t\t\t\"body\": [\n\t\t\t\t\t[{ \"text\": \"Southbound Interface Statistics\", \"style\": \"tableHeader\", \"colSpan\": 2, \"alignment\": \"center\" }, {}],\n\t\t\t\t\t[\"Connector Status\", msg.payload.report.statusCheckSBI.connected],\n\t\t\t\t\t[\"Total number of Datasources\", msg.payload.report.statusCheckSBI.nrOfDataSources],\n\t\t\t\t\t[\"Inbound Messages\", msg.payload.report.statsSBI.msgSpeed],\n\t\t\t\t\t[\"Inbound  Interval and Frequency\", msg.payload.report.statsSBI.IntervalAndFrequency],\n\t\t\t\t\t[\"Inbound Messages Max\", msg.payload.report.statsSBI.maxMsgs]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"Account Logs\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": [\"*\", \"*\"],\n\t\t\t    \"headerRows\": 1,\n\t\t\t\t\"body\":\ttableBuilder(accountLogTable, ['accessAt', 'username'])\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"Logs\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": ['auto', 'auto', 'auto', 'auto'],\n\t\t\t    \"headerRows\": 1,\n\t\t\t\t\"body\":\ttableBuilder(logsTable, ['observableReference', '_msgid', 'time', 'value'])\n\t\t\t}\n\t\t}\n\t],\n\t\"styles\": {\n\t\t\"header\": {\n\t\t\t\"fontSize\": 18,\n\t\t\t\"bold\": true,\n\t\t\t\"margin\": [0, 0, 0, 10]\n\t\t},\n\t\t\"subheader\": {\n\t\t\t\"fontSize\": 16,\n\t\t\t\"bold\": true,\n\t\t\t\"margin\": [0, 10, 0, 5]\n\t\t},\n\t\t\"tableExample\": {\n\t\t\t\"margin\": [0, 5, 0, 15]\n\t\t},\n\t\t\"tableOpacityExample\": {\n\t\t\t\"margin\": [0, 5, 0, 15],\n\t\t\t\"fillColor\": \"blue\",\n\t\t\t\"fillOpacity\": 0.3\n\t\t},\n\t\t\"tableHeader\": {\n\t\t\t\"bold\": true,\n\t\t\t\"fontSize\": 13,\n\t\t\t\"color\": \"black\"\n\t\t}\n\t}\n}\noutMsg.payload = dd;\nreturn outMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 3280,
        "wires": [
            [
                "48a65c5d8b051888",
                "eb5e4d76d5c7fe2c"
            ]
        ]
    },
    {
        "id": "eb5e4d76d5c7fe2c",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3220,
        "wires": []
    },
    {
        "id": "0aec26b2c7aa59a0",
        "type": "inject",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 3440,
        "wires": [
            [
                "4b533d51dbd5a15c"
            ]
        ]
    },
    {
        "id": "4b533d51dbd5a15c",
        "type": "unsafe-function",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "PrepareOutput",
        "func": "msg.payload = \".node-red/images/ -name\" + \" \" + \"logo.png\";\n//msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 3440,
        "wires": [
            [
                "68e73d146ef433f0"
            ]
        ]
    },
    {
        "id": "68e73d146ef433f0",
        "type": "exec",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "command": "find",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 580,
        "y": 3440,
        "wires": [
            [
                "fd7f7c05f8754c67",
                "2d26ceced77e60ba"
            ],
            [],
            []
        ]
    },
    {
        "id": "fd7f7c05f8754c67",
        "type": "change",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 3440,
        "wires": [
            [
                "1e0459bfa5012f2c"
            ]
        ]
    },
    {
        "id": "1e0459bfa5012f2c",
        "type": "file in",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 940,
        "y": 3440,
        "wires": [
            [
                "5d6ad4eadc4475da"
            ]
        ]
    },
    {
        "id": "5d6ad4eadc4475da",
        "type": "base64",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 1130,
        "y": 3440,
        "wires": [
            [
                "98cec6a0f06cf40d"
            ]
        ]
    },
    {
        "id": "98cec6a0f06cf40d",
        "type": "change",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "logoBase64",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 3440,
        "wires": [
            []
        ]
    },
    {
        "id": "80b73b7b2296415f",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 3140,
        "wires": []
    },
    {
        "id": "2d26ceced77e60ba",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 3400,
        "wires": []
    },
    {
        "id": "09c675c2a2ee0d9c",
        "type": "link call",
        "z": "32c5a22a534a4588",
        "g": "102e2f75f3511731",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 3480,
        "y": 3460,
        "wires": [
            []
        ]
    },
    {
        "id": "b79317c310b1a58d",
        "type": "unsafe-function",
        "z": "32c5a22a534a4588",
        "name": "parameterizedHttpRequest",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\n\nmsg1.method = 'GET';\nmsg1.url = context.global.get('namespace') + \"/aasServer/env\";\n\n//msg2.descriptionId = \"b5595a4a-40a5-46e6-a9c6-f493f99a72a1\"; \n\n//msg3.method = 'GET';\n//msg3.url = context.global.get('namespace') + \"/aasServer/submodels\";\n\nreturn [msg1, msg2, msg];",
        "outputs": 3,
        "noerr": 0,
        "x": 880,
        "y": 280,
        "wires": [
            [
                "fd9ef97e7925f68c"
            ],
            [
                "4c72e7f940efd108"
            ],
            [
                "c5158f61c047bf2a"
            ]
        ]
    },
    {
        "id": "5602b8c17990602c",
        "type": "unsafe-function",
        "z": "32c5a22a534a4588",
        "name": "flowVariables",
        "func": "context.flow.set('logs', []);\n\nvar fs = context.global.get('fs');\nvar path = context.global.get('path');\ncontext.flow.set('accounts', []);\ncontext.flow.set('accountlog', []);\n\nvar fileName = \"httpauthfile.txt\";\nvar basePath = context.global.get('staticDocs');\nvar filePath = path.join(basePath, \"httpauth\", fileName);\n\nfs.readFile(filePath, \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    let content = data;\n    var contentArray = content.split(\"\\n\");\n    //var account = {username: contentArray[0], password: contentArray[2]};\n    var accounts = context.flow.get('accounts');\n    for(var account in contentArray){\n        accounts.push(contentArray[account]);    \n    }\n    \n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    exit();          // Or put the next step in a function and invoke it\n    \n    });\n    \nfunction exit() {\n    //msg.payload = content;\n    node.send(msg);\n    \n}\n    \n    //return msg;\n    //context.flow.set('Body', \\\"\\\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 527.0001220703125,
        "y": 193.3333511352539,
        "wires": [
            [
                "b79317c310b1a58d",
                "f5a49aa0f82f1d95"
            ]
        ]
    },
    {
        "id": "fd9ef97e7925f68c",
        "type": "http request",
        "z": "32c5a22a534a4588",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1180.0000915527344,
        "y": 261.66668701171875,
        "wires": [
            [
                "9b923186acd8fb2b",
                "d8d93e7f8eeebd19"
            ]
        ]
    },
    {
        "id": "831ee0f8f251430a",
        "type": "unsafe-function",
        "z": "32c5a22a534a4588",
        "name": "detectBrowserReload",
        "func": "var payload = msg.payload;\nif(payload === \"connect\"){\n    return msg;\n}\n\nreturn null;\n//context.flow.set('Body', \"\");",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 280,
        "wires": [
            [
                "b79317c310b1a58d"
            ]
        ]
    },
    {
        "id": "02d9c1fe7f0dcb05",
        "type": "inject",
        "z": "32c5a22a534a4588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 320,
        "y": 200,
        "wires": [
            [
                "5602b8c17990602c"
            ]
        ]
    },
    {
        "id": "f5a49aa0f82f1d95",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 200,
        "wires": []
    },
    {
        "id": "9b923186acd8fb2b",
        "type": "join",
        "z": "32c5a22a534a4588",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1790,
        "y": 260,
        "wires": [
            [
                "03eb0c8325f9f29d"
            ]
        ]
    },
    {
        "id": "a5e73705edbda0f0",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1370,
        "y": 300,
        "wires": []
    },
    {
        "id": "28aab9594883bfc6",
        "type": "unsafe-function",
        "z": "32c5a22a534a4588",
        "name": "SubmodelsProcessing",
        "func": "var msg1 = {};\nvar payload = {};\n//var splitted = msg.payload[0].value[0].value.split(\" \");\n//var splitted = msg.payload.value[0].value.split(\" \");\n//var splitted = msg.payload[0].value.split(\" \");\npayload.type = msg.payload.type;\npayload.hostname = msg.payload.hostname;;\npayload.release = msg.payload.release;;\npayload.platform = msg.payload.platform;\npayload.arch =msg.payload.arch;\npayload.namespace = context.global.get('namespace');\nmsg1.payload = payload;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 1580,
        "y": 360,
        "wires": [
            [
                "9b923186acd8fb2b"
            ]
        ]
    },
    {
        "id": "03eb0c8325f9f29d",
        "type": "unsafe-function",
        "z": "32c5a22a534a4588",
        "name": "SubmodelsProcessing",
        "func": "//Retreiving Libraries from the Settings.json file\nvar outMsg = {};\nvar payload = [];\noutMsg.identifier = context.global.get(\"AASIdentifier\");\noutMsg.payload = payload;\nfor(var element = 0; element < msg.payload.length; element++){\n    if(typeof(msg.payload[element].assetAdministrationShells) !== 'undefined' && msg.payload[element] !== null){\n         outMsg.payload[1] = msg.payload[element];\n    } else {\n        outMsg.payload[0] = msg.payload[element];\n    }\n}\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1960,
        "y": 260,
        "wires": [
            [
                "ec2d2c903c07bce6"
            ]
        ]
    },
    {
        "id": "ec2d2c903c07bce6",
        "type": "msg-router",
        "z": "32c5a22a534a4588",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 7,
        "x": 2350,
        "y": 280,
        "wires": [
            [],
            [
                "be6822ebb14409a4"
            ],
            [
                "63248af655e2908c"
            ],
            [
                "d8c3bf12b01e9733"
            ],
            [
                "1a9586aed02131e6",
                "2857c72c4a0986ca"
            ],
            [],
            []
        ]
    },
    {
        "id": "c5158f61c047bf2a",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1170,
        "y": 540,
        "wires": []
    },
    {
        "id": "d8d93e7f8eeebd19",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1370,
        "y": 223.3333282470703,
        "wires": []
    },
    {
        "id": "1a9586aed02131e6",
        "type": "unsafe-function",
        "z": "32c5a22a534a4588",
        "name": "retrievingConceptDescriptions",
        "func": "var outMsg = {};\noutMsg.payload = msg.payload[1].conceptDescriptions;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2630,
        "y": 560,
        "wires": [
            [
                "abdc53811d0e895b"
            ]
        ]
    },
    {
        "id": "0aef361690b6ac29",
        "type": "link in",
        "z": "32c5a22a534a4588",
        "name": "NOVAAS_InformChange_UI",
        "links": [
            "11e91e4d13917d49",
            "ae28f53c34d8b949",
            "b2811a59a9c3a985",
            "adf27afba7c3b724",
            "a19fe280a1be4f25",
            "1c271c02ad31924a"
        ],
        "x": 360,
        "y": 620,
        "wires": [
            []
        ],
        "l": true
    },
    {
        "id": "5b2f9714e74150cf",
        "type": "change",
        "z": "32c5a22a534a4588",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrcode",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 280,
        "wires": [
            [
                "df87d57677a6f032",
                "fb3e71eabb8d95f5"
            ]
        ]
    },
    {
        "id": "b437e3eec9ec5739",
        "type": "qrcode-generator",
        "z": "32c5a22a534a4588",
        "name": "",
        "qrtype": "text2qr",
        "text2qrText": "",
        "ssid": "",
        "hiddenssid": false,
        "wifitype": "",
        "phonenum": "",
        "smsphonenum": "",
        "smstext": "",
        "mailto": "",
        "mailsubject": "",
        "mailbody": "",
        "latitude": "",
        "longitude": "",
        "colorlight": "#ffffff",
        "colordark": "#000000",
        "printstatus": false,
        "x": 2770,
        "y": 280,
        "wires": [
            [
                "5b2f9714e74150cf"
            ]
        ]
    },
    {
        "id": "d8c3bf12b01e9733",
        "type": "change",
        "z": "32c5a22a534a4588",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrcodeinput",
                "pt": "msg",
                "to": "REPO_LOCATION",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 280,
        "wires": [
            [
                "b437e3eec9ec5739"
            ]
        ]
    },
    {
        "id": "f77432d1e52ebce9",
        "type": "inject",
        "z": "32c5a22a534a4588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1430,
        "y": 780,
        "wires": [
            [
                "3f56764f5dd63cfc"
            ]
        ]
    },
    {
        "id": "c86eac82bb3b45fa",
        "type": "unsafe-function",
        "z": "32c5a22a534a4588",
        "name": "parameterizedHttpRequest",
        "func": "var msg1 = {};\n\nmsg1.method = 'GET';\nmsg1.url = context.global.get('namespace') + \"/aasServer/env\";\n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 1900,
        "y": 780,
        "wires": [
            [
                "c3ec2a6348e098e0"
            ]
        ]
    },
    {
        "id": "c3ec2a6348e098e0",
        "type": "http request",
        "z": "32c5a22a534a4588",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2130,
        "y": 780,
        "wires": [
            [
                "8c909b4f998939c7"
            ]
        ]
    },
    {
        "id": "593e3e444f4b3faf",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 880,
        "wires": []
    },
    {
        "id": "3f56764f5dd63cfc",
        "type": "gate",
        "z": "32c5a22a534a4588",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "default",
        "x": 1690,
        "y": 780,
        "wires": [
            [
                "c86eac82bb3b45fa"
            ]
        ]
    },
    {
        "id": "fb878cab036af4a2",
        "type": "function",
        "z": "32c5a22a534a4588",
        "name": "",
        "func": "msg.topic = \"control\";\nif(msg.payload == \"change\" && msg.tab == 1){\n    msg.payload = \"open\";\n} else {\n    msg.payload = \"close\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 840,
        "wires": [
            [
                "3f56764f5dd63cfc"
            ]
        ]
    },
    {
        "id": "61f4df87d1f9a633",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 3360,
        "wires": []
    },
    {
        "id": "88a83723a232ac4d",
        "type": "function",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "sendSuccessMessage",
        "func": "let reportMessage = \"Your message was sent with success!\"\n\nmsg.payload = reportMessage\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 3320,
        "wires": [
            [
                "d103ce29e9a3313d"
            ]
        ]
    },
    {
        "id": "363363c0b93bd807",
        "type": "inject",
        "z": "32c5a22a534a4588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2350,
        "y": 60,
        "wires": [
            [
                "490adb8e6af20349"
            ]
        ]
    },
    {
        "id": "490adb8e6af20349",
        "type": "function",
        "z": "32c5a22a534a4588",
        "name": "",
        "func": "msg.image = context.global.get(\"ThumbnailFilePath\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2540,
        "y": 140,
        "wires": [
            [
                "2afa9ce15cbe85a4",
                "b47733281dd0a45e"
            ]
        ]
    },
    {
        "id": "efc9674081613614",
        "type": "ui-form",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "name": "",
        "group": "2966738833ad551e",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Date",
                "key": "date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Email",
                "key": "user",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "Notes",
                "key": "notes",
                "type": "multiline",
                "required": true,
                "rows": 6
            }
        ],
        "formValue": {
            "date": "",
            "user": "",
            "notes": ""
        },
        "payload": "",
        "submit": "Create Report",
        "cancel": "Cancel",
        "resetOnSubmit": true,
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "dropdownOptions": [],
        "x": 490,
        "y": 3340,
        "wires": [
            [
                "5cb620e639653f0a",
                "88a83723a232ac4d",
                "61f4df87d1f9a633"
            ]
        ]
    },
    {
        "id": "a1519153d715d20d",
        "type": "ui-button",
        "z": "32c5a22a534a4588",
        "group": "c1ab4ef42346ea60",
        "name": "Clear Button",
        "label": "Clear All",
        "order": 4,
        "width": "12",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "background-color:#14524e;",
        "icon": "mdi-delete",
        "iconPosition": "left",
        "payload": "deb4bd776143f41c",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "red",
        "textColor": "",
        "iconColor": "",
        "x": 2100,
        "y": 1760,
        "wires": [
            [
                "99c9e538bba972ef",
                "7d562babb8a66d9f"
            ]
        ]
    },
    {
        "id": "c513ce07e3f152e4",
        "type": "ui-button",
        "z": "32c5a22a534a4588",
        "d": true,
        "group": "c1ab4ef42346ea60",
        "name": "Refresh button",
        "label": "Refresh",
        "order": 1,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "mdi-refresh",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "green",
        "textColor": "",
        "iconColor": "",
        "x": 2100,
        "y": 1660,
        "wires": [
            [
                "f9732816139692c1",
                "a1b7b2b8b51d564b"
            ]
        ]
    },
    {
        "id": "e470e541de1883e1",
        "type": "ui-table",
        "z": "32c5a22a534a4588",
        "g": "102e2f75f3511731",
        "group": "a59ec750238a9f6f",
        "name": "Actual Subscribed Elements",
        "label": "text",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "selectionType": "none",
        "columns": [
            {
                "title": "Observable Reference",
                "key": "msg.payload.0",
                "width": ""
            }
        ],
        "mobileBreakpoint": "md",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 3830,
        "y": 3340,
        "wires": [
            []
        ]
    },
    {
        "id": "3eed560b7ddc6a8d",
        "type": "ui-table",
        "z": "32c5a22a534a4588",
        "group": "cd688828bcd815e2",
        "name": "conceptDescriptions",
        "label": "text",
        "order": 1,
        "width": "0",
        "height": "0",
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "lg",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 3220,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "d103ce29e9a3313d",
        "type": "ui-notification",
        "z": "32c5a22a534a4588",
        "d": true,
        "g": "df5de9f83532cc22",
        "ui": "3bda63ad6c6ff8b7",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": false,
        "outputs": 0,
        "allowDismiss": true,
        "dismissText": "Close",
        "raw": false,
        "className": "",
        "name": "",
        "x": 1170,
        "y": 3320,
        "wires": []
    },
    {
        "id": "2afa9ce15cbe85a4",
        "type": "ui-template",
        "z": "32c5a22a534a4588",
        "group": "2d91686a2ba1852c",
        "page": "",
        "ui": "",
        "name": "asset",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <v-card append-icon=\"mdi-link-variant\" size=\"x-large\"\n        style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:500px;\">\n        <template v-slot:title>\n            <span class=\"font-weight-black\">Connected Asset</span>\n        </template>\n        <div  class=\"d-flex justify-space-around align-center\">\n            <v-img :aspect-ratio=\"2\" :width=\"imageWidth\" :src=\"image\"></v-img>\n        </div>\n    </v-card>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                imageWidth: 500 // Default width\n            };\n        },\n        watch: {\n            msg(newMsg) {\n                if (newMsg && newMsg.payload) {\n                    this.imageWidth = 600;\n                    this.image = newMsg.image;\n                }\n            }\n        }\n    }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2710,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "0dae98531bbdeb48",
        "type": "ui-template",
        "z": "32c5a22a534a4588",
        "group": "7db4e47f1c3bd6b8",
        "page": "",
        "ui": "",
        "name": "RunningPlatform/Overview",
        "order": 8,
        "width": "6",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-card append-icon=\"mdi-server\" size=\"x-large\" subtitle=\"\" style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:500px;\">\n    <template v-slot:title>\n      <span class=\"font-weight-black\">Running Platform</span>\n    </template>\n    <v-list>\n      <v-list-subheader></v-list-subheader>\n      <v-list-item v-for=\"(item, i) in items\" color=\"primary\">\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\" size=\"x-large\"></v-icon>\n        </template>\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n<script>\n  export default {\n    data: () => ({\n        items: [\n          { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },]\n\n    }),\n    watch: {\n      msg: function () {\n        this.items = this.msg.items;\n      }\n    }\n  }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2900,
        "y": 240,
        "wires": [
            [
                "ea0190e3395fd48e"
            ]
        ]
    },
    {
        "id": "4c72e7f940efd108",
        "type": "link call",
        "z": "32c5a22a534a4588",
        "name": "",
        "links": [
            "85c75f263483de4b"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1270,
        "y": 360,
        "wires": [
            [
                "28aab9594883bfc6"
            ]
        ]
    },
    {
        "id": "ed42be486175d894",
        "type": "ui-template",
        "z": "32c5a22a534a4588",
        "group": "052f6d23fa4e527a",
        "page": "",
        "ui": "",
        "name": "treeview",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card append-icon=\"mdi-file-tree\" subtitle=\"\" style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:200px;\">\n    <template v-slot:title>\n      <span class=\"font-weight-black\">AAS Environment</span>\n    </template>\n    <v-treeview :items=\"items\" item-key=\"name\" open-on-click>\n      <template v-slot:prepend=\"{ item, open }\">\n        <v-icon v-if=\"!item.file\">\n          {{ open ? 'mdi-folder-open' : 'mdi-folder' }}\n        </v-icon>\n        <v-icon v-else>\n          {{ files[item.file] }}\n          <!--<router-link :to=\"item.to\">{{ item.title }}</router-link>!-->\n        </v-icon>\n        <div style=\"margin-left: 15%\">\n          <router-link v-if=\"item.to && !item.to.includes('http')\" :to=\"item.to\" target=\"_blank\">{{item.to}}\n          </router-link>\n          <!-- Use <a> tag if item.to contains 'http' -->\n          <a v-else-if=\"item.to && (item.to.includes('http') || item.to.includes('https'))\" :href=\"item.to\" target=\"_blank\" rel=\"noopener noreferrer\">\n            {{ item.to }}\n          </a>\n        </div>\n        <!--<div><a v-if=\"item.to.includes('http')\" :href=\"item.to\">{{item.to}} </a></div>!-->\n      </template>\n    </v-treeview>\n  </v-card>\n</template>\n\n<script>\n  export default {\n    data: function () {\n      return {\n        files: {\n          txt: 'mdi-file-document-outline'\n        },\n        items: []\n      }\n    },\n    watch: {\n      msg: function () {\n        this.items = this.msg.items;\n      }\n    }\n  }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2940,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "abdc53811d0e895b",
        "type": "function",
        "z": "32c5a22a534a4588",
        "name": "prepareTable",
        "func": "var prepareData = [];\n\nif (Array.isArray(msg.payload)) {\n    for (var i = 0; i < msg.payload.length; i++) {\n        prepareData.push({\n            identification: msg.payload[i].id,\n            idShort: msg.payload[i].idShort,\n            modelType: msg.payload[i].modelType.name,\n            embeddedDataSpecifications: (msg.payload[i].descriptions && msg.payload[i].descriptions[0]) ? msg.payload[i].descriptions[0].text : \"Unknown\",\n            descriptions: (msg.payload[i].embeddedDataSpecifications && msg.payload[i].embeddedDataSpecifications[0] && msg.payload[i].embeddedDataSpecifications[0].dataSpecificationContent) ? msg.payload[i].embeddedDataSpecifications[0].dataSpecificationContent.dataType : \"Unknown\"\n        });\n    }\n}\n\nmsg.payload = prepareData;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2970,
        "y": 560,
        "wires": [
            [
                "3eed560b7ddc6a8d"
            ]
        ]
    },
    {
        "id": "550bb7dbcd65bfbb",
        "type": "function",
        "z": "32c5a22a534a4588",
        "g": "102e2f75f3511731",
        "name": "getSubscribedElements",
        "func": "var outMsg = { \"payload\": [] };\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    outMsg.payload.push({ \"Observable Reference\": msg.payload[i], \"Status\": \"subscribed\" });\n}\n\nreturn outMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 3340,
        "wires": [
            [
                "e470e541de1883e1"
            ]
        ]
    },
    {
        "id": "da12664b6dcb1aa3",
        "type": "ui-table",
        "z": "32c5a22a534a4588",
        "group": "6a60dba680d2cf0e",
        "name": "Logs",
        "label": "text",
        "order": 2,
        "width": 0,
        "height": 0,
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 3310,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "a059316e93c5f0f5",
        "type": "ui-table",
        "z": "32c5a22a534a4588",
        "group": "b68f0194128bb725",
        "name": "Account Logs",
        "label": "text",
        "order": 2,
        "width": "12",
        "height": "1",
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 3350,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "8daaee4973cea4d8",
        "type": "function",
        "z": "32c5a22a534a4588",
        "name": "prepareLogs",
        "func": "for (var i = 0; i < msg.payload.length; i++) {\n  var unixTimestamp = msg.payload[i].timestamp;\n  var myDate = new Date(unixTimestamp);\n\n  var seconds = myDate.getSeconds();\n  var minutes = myDate.getMinutes();\n  var hours = myDate.getHours() + 1;\n\n  var dayOfMonth = myDate.getDate();\n  var month = myDate.getMonth() + 1;\n  var years = myDate.getFullYear();\n\n  var formattedHours = (hours < 10 ? \"0\" : \"\") + hours;\n  var formattedMinutes = (minutes < 10 ? \"0\" : \"\") + minutes;\n  var formattedSeconds = (seconds < 10 ? \"0\" : \"\") + seconds;\n  var formattedDayOfMonth = (dayOfMonth < 10 ? \"0\" : \"\") + dayOfMonth;\n  var formattedMonth = (month < 10 ? \"0\" : \"\") + month;\n\n  msg.payload[i].timestamp = formattedHours + \":\" + formattedMinutes + \":\" + formattedSeconds + \" \" + formattedDayOfMonth + \"/\" + formattedMonth + \"/\" + years;\n\n}\n\ncontext.flow.set('logs', msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3020,
        "y": 1580,
        "wires": [
            [
                "da12664b6dcb1aa3"
            ]
        ]
    },
    {
        "id": "99bd217768756dbc",
        "type": "function",
        "z": "32c5a22a534a4588",
        "name": "prepareAccountLogs",
        "func": "for (var i = 0; i < msg.payload.length; i++) {\n  var unixTimestamp = msg.payload[i].accessAt;\n  var myDate = new Date(unixTimestamp);\n\n  var seconds = myDate.getSeconds();\n  var minutes = myDate.getMinutes();\n  var hours = myDate.getHours() + 1;\n\n  var dayOfMonth = myDate.getDate();\n  var month = myDate.getMonth() + 1; // add 1 to get month number (1-12)\n  var years = myDate.getFullYear();\n\n  var formattedHours = (hours < 10 ? \"0\" : \"\") + hours;\n  var formattedMinutes = (minutes < 10 ? \"0\" : \"\") + minutes;\n  var formattedSeconds = (seconds < 10 ? \"0\" : \"\") + seconds;\n  var formattedDayOfMonth = (dayOfMonth < 10 ? \"0\" : \"\") + dayOfMonth;\n  var formattedMonth = (month < 10 ? \"0\" : \"\") + month;\n\n  msg.payload[i].accessAt = formattedHours + \":\" + formattedMinutes + \":\" + formattedSeconds + \" \" + formattedDayOfMonth + \"/\" + formattedMonth + \"/\" + years;\n}\n\ncontext.flow.set('accountlog', msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3050,
        "y": 1660,
        "wires": [
            [
                "a059316e93c5f0f5"
            ]
        ]
    },
    {
        "id": "84484d470fe2b313",
        "type": "inject",
        "z": "32c5a22a534a4588",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2110,
        "y": 1620,
        "wires": [
            [
                "f9732816139692c1",
                "a1b7b2b8b51d564b"
            ]
        ]
    },
    {
        "id": "d258b76c24b1a0c3",
        "type": "file",
        "z": "32c5a22a534a4588",
        "name": "",
        "filename": ".node-red/logs.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3030,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "96b608430d19fe24",
        "type": "json",
        "z": "32c5a22a534a4588",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2830,
        "y": 1540,
        "wires": [
            [
                "d258b76c24b1a0c3"
            ]
        ]
    },
    {
        "id": "6963ccec1140c78e",
        "type": "json",
        "z": "32c5a22a534a4588",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2830,
        "y": 1620,
        "wires": [
            [
                "53c6fa5defeadfd3"
            ]
        ]
    },
    {
        "id": "53c6fa5defeadfd3",
        "type": "file",
        "z": "32c5a22a534a4588",
        "name": "",
        "filename": ".node-red/accountLogs.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3050,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "df87d57677a6f032",
        "type": "ui-template",
        "z": "32c5a22a534a4588",
        "group": "7db4e47f1c3bd6b8",
        "page": "",
        "ui": "",
        "name": "counters 2.0",
        "order": 3,
        "width": "6",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-card append-icon=\"mdi-counter\" size=\"x-large\" style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:500px;\">\n    <template v-slot:title>\n      <span class=\"font-weight-black\">Counters</span>\n    </template>\n    <div class=\"text-left\">\n      <v-chip class=\"ma-2\" color=\"indigo\" prepend-icon=\"mdi-checkbox-marked-circle\" size=\"x-large\">\n        Asset Administration Shells: {{ msg.payload && msg.payload[1]\n        && msg.payload[1].assetAdministrationShells ?\n        msg.payload[1].assetAdministrationShells.length : 0 }}\n      </v-chip>\n\n      <v-chip prepend-icon=\"mdi-checkbox-marked-circle\" class=\"ma-2\" color=\"orange\" size=\"x-large\">\n        Asset: {{ msg.payload && msg.payload[1]\n        && msg.payload[1].assets ? msg.payload[1].assets.length : 0 }}\n      </v-chip>\n\n      <v-chip prepend-icon=\"mdi-checkbox-marked-circle\" class=\"ma-2\" color=\"primary\" size=\"x-large\">\n        Submodels: {{ msg.payload && msg.payload[1]\n        && msg.payload[1].submodels ? msg.payload[1].submodels.length : 0 }}\n      </v-chip>\n\n      <v-chip class=\"ma-2\" color=\"green\" prepend-icon=\"mdi-checkbox-marked-circle\" size=\"x-large\">\n        Submodel Elements: {{ msg.payload && msg.payload[1]\n        && msg.payload[1].submodels ?\n        msg.payload[1].submodels.reduce((sum, submodel) => sum + (submodel.submodelElements ?\n        submodel.submodelElements.length : 0), 0) : 0 }}\n      </v-chip>\n\n      <v-chip class=\"ma-2\" color=\"teal\" prepend-icon=\"mdi-checkbox-marked-circle\" size=\"x-large\">\n        Concept Descriptions: {{ msg.original && msg.original[1] && msg.original[1].conceptDescriptions ?\n        msg.original[1].conceptDescriptions.length : 0 }}</b></p>\n      </v-chip>\n    </div>\n\n  </v-card>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3190,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "be6822ebb14409a4",
        "type": "function",
        "z": "32c5a22a534a4588",
        "name": "Generate Item from Message",
        "func": "let platformMsg = msg.payload[0];\nlet items = [];\n\nfor(let index in platformMsg){\n    let icon = \"\";\n    //msg.ey=index;\n    if(index == \"type\"){\n        icon = \"mdi-server\";\n    } else if (index == \"hostname\"){\n        icon = \"mdi-account\";\n    } else if (index == \"release\"){\n        icon = \"mdi-shape-plus\";\n    } else if (index == \"platform\"){\n        icon = \"mdi-package-variant-closed\";\n    } else if (index == \"arch\"){\n        icon = \"mdi-sitemap\";\n    } else if (index == \"namespace\"){\n        icon = \"mdi-alphabetical\";\n    }\n    let item = { \"text\": index + \": \" + platformMsg[index], \"icon\": icon };\n    items.push(item);\n}\nmsg.items = items;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 240,
        "wires": [
            [
                "0dae98531bbdeb48",
                "219172ab14372b2b"
            ]
        ]
    },
    {
        "id": "63248af655e2908c",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "name": "debug 381",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2580,
        "y": 420,
        "wires": []
    },
    {
        "id": "219172ab14372b2b",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "name": "debug 383",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2850,
        "y": 200,
        "wires": []
    },
    {
        "id": "ea0190e3395fd48e",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "name": "debug 384",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3148.25,
        "y": 239.25,
        "wires": []
    },
    {
        "id": "368c1d8a4b400caa",
        "type": "ui-template",
        "z": "32c5a22a534a4588",
        "group": "6a60dba680d2cf0e",
        "page": "",
        "ui": "",
        "name": "Download Logs",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"d-flex justify-end\">\n      <v-btn\n        class=\"ma-2\"\n        color=\"blue\"\n        icon=\"mdi-cloud-download\"\n        :href=\"fileUrl\"\n        download\n      ></v-btn>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      fileUrl: \"/logs.txt\", // Replace with the actual file path\n    };\n  },\n};\n</script>\n\n<style scoped>\n.custom-btn {\n  width: 60px; /* Adjust the width */\n  height: 60px; /* Adjust the height for a circle */\n  min-width: 60px; /* Set the minimum width */\n  max-width: 60px; /* Set the maximum width */\n  font-size: 2rem; /* Adjust icon size */\n  border-radius: 50%; /* Make the button circular */\n  display: flex; /* Ensure the icon is centered */\n  justify-content: center; /* Center icon horizontally */\n  align-items: center; /* Center icon vertically */\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3020,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "ca5a0c586fb3356b",
        "type": "ui-template",
        "z": "32c5a22a534a4588",
        "group": "b68f0194128bb725",
        "page": "",
        "ui": "",
        "name": "Download AccountLogs",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"d-flex justify-end\">\n    <v-btn class=\"ma-2\" color=\"blue\" icon=\"mdi-cloud-download\" :href=\"fileUrl\" download></v-btn>\n  </div>\n</template>\n\n<script>\n  export default {\n  data() {\n    return {\n      fileUrl: \"/accountLogs.txt\", // Replace with the actual file path\n    };\n  },\n};\n</script>\n\n<style scoped>\n  .custom-btn {\n    width: 20%;\n    /* Restrict the button to 20% of the container width */\n    min-width: 120px;\n    /* Optional: Set a minimum width */\n    max-width: 200px;\n    font-size: 2rem;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3030,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "bbad6f41dfc5975d",
        "type": "ui-template",
        "z": "32c5a22a534a4588",
        "group": "",
        "page": "",
        "ui": "3bda63ad6c6ff8b7",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": ".v-main {\n    background-image: url(/images/bright-squares.png);\n    background-repeat: repeat;\n}\n/* All .v-card's inside a group */\n.nrdb-ui-group .v-card {\n    border-width: 2px;\n}",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "site:style",
        "className": "",
        "x": 1490,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "fb3e71eabb8d95f5",
        "type": "ui-template",
        "z": "32c5a22a534a4588",
        "group": "7db4e47f1c3bd6b8",
        "page": "",
        "ui": "",
        "name": "qrcode 2.0",
        "order": 6,
        "width": "6",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-card append-icon=\"mdi-counter\" size=\"x-large\" style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:500px;\">\n    <template v-slot:title>\n      <span class=\"font-weight-black\">QR code to code repo</span>\n    </template>\n    <div style=\"display: flex; justify-content: center; align-items: center; padding: 1%;\">\n      <v-img :width=\"300\" aspect-ratio=\"16/9\" cover :src=\"msg.qrcode\"></v-img>\n    </div>\n\n\n  </v-card>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3190,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b47733281dd0a45e",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "name": "debug 385",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2750,
        "y": 80,
        "wires": []
    },
    {
        "id": "2857c72c4a0986ca",
        "type": "function",
        "z": "32c5a22a534a4588",
        "name": "Generate Tree from AAS model V3",
        "func": "function extractData(submodelElements, items, rootName) {\n  function getRandomNumber() {\n    return Math.floor(Math.random() * 2001) + 10000;\n  }\n\n  for (let submodelElementIndex = 0; submodelElementIndex < submodelElements.length; submodelElementIndex++) {\n    let submodelElement = submodelElements[submodelElementIndex];\n\n    if (submodelElement.modelType !== \"SubmodelElementCollection\") {\n      let propertyItem = { title: \"SubmodelElement: [\" + submodelElementIndex + \"]\", children: [] };\n      if (rootName === \"value\")\n        propertyItem.title = \"Value: [\" + submodelElementIndex + \"]\";\n\n      //if(submodelElement.modelType !== \"BasicEventElement\")\n      //  propertyItem.children.push({ file: 'txt', title: \"category: \" + submodelElement.category });\n      \n      propertyItem.children.push({ file: 'txt', title: \"idShort: \" + submodelElement.idShort });\n\n      // Check if valueType is defined\n      if (submodelElement.valueType) {\n        propertyItem.children.push({ file: 'txt', title: \"valueType: \" + submodelElement.valueType });\n      } else {\n        //propertyItem.children.push({ file: 'txt', title: \"valueType: undefined\" });\n      }\n\n      propertyItem.children.push({ file: 'txt', title: \"modelType: \" + submodelElement.modelType });\n      if (submodelElement.modelType == \"BasicEventElement\"){\n        let path = \"\";\n        let keys = submodelElement.observed.keys;\n        //for(let key = 0; key < keys.length; key++){\n        //  path = path + keys[key].value + \",\";\n        //}\n        path = keys[keys.length - 1].value;\n        propertyItem.children.push({ file: 'txt', title: \"observed: \" + path });\n      }\n\n      if (submodelElement.modelType == \"File\") {\n        propertyItem.children.push({ file: 'txt', to: submodelElement.value });\n      } else if (\"value\" in submodelElement) {\n        propertyItem.children.push({ file: 'txt', title: \"value: \" + submodelElement.value });\n      }\n      items.push(propertyItem);\n\n    } else {\n      let collectionItem = { title: \"SubmodelElement: [\" + submodelElementIndex + \"]\", children: [] };\n      if (rootName === \"value\")\n        collectionItem.title = \"Value: [\" + submodelElementIndex + \"]\";\n\n      collectionItem.children.push({ file: 'txt', title: \"category: \" + submodelElement.category });\n      //collectionItem.children.push({ file: 'txt', title: \"id: \" + submodelElement.id });\n      collectionItem.children.push({ file: 'txt', title: \"idShort: \" + submodelElement.idShort });\n      collectionItem.children.push({ file: 'txt', title: \"modelType: \" + submodelElement.modelType });\n      items.push(collectionItem);\n      if (typeof submodelElement.value != \"undefined\") {\n        extractData(submodelElement.value, collectionItem.children, \"value\");\n      }\n    }\n  }\n\n\n  return;\n}\n\nfunction filterListByCondition(list1, list2) {\n  // Create a set of IDs from list2 for quick lookup\n  const idSet = new Set(list2.map(item => item.keys[0].value));\n\n  // Filter the elements of list1 based on the presence of the same id in list2\n  return list1.filter(item => idSet.has(item.id));\n}\n\nmsg.properties = [];\nmsg.collections = [];\n\nlet items = [];\nlet item = { title: \"\", children: [] };\nlet children = { title: \"\" };\n\nlet manifest = msg.payload[1];\nlet aass = manifest.assetAdministrationShells;\n\n// Iterate over aas\nfor (let aasIndex = 0; aasIndex < aass.length; aasIndex++) {\n  let item = {};\n  item.title = \"Asset Administration Shell: [\" + aasIndex + \"]\";\n  item.children = [];\n\n  item.children.push({ file: 'txt', title: \"idShort: \" + aass[aasIndex].idShort });\n  item.children.push({ file: 'txt', title: \"id: \" + aass[aasIndex].id });\n  item.children.push({ file: 'txt', title: \"assetInformation: \" + aass[aasIndex].assetInformation.globalAssetId });\n\n  let submodelsItem = {};\n  submodelsItem.title = \"Submodels\";\n  submodelsItem.children = [];\n\n  // Iterate over submodels\n  let submodels = manifest.submodels;\n  let submodelReferences = aass[aasIndex].submodels;\n\n  // Iterate over references\n  let result = filterListByCondition(submodels, submodelReferences);\n  msg.result = result;\n\n  for (let resultIndex = 0; resultIndex < result.length; resultIndex++) {\n    let submodelItem = {};\n    submodelItem.title = \"Submodel: [\" + resultIndex + \"]\";\n    submodelItem.children = [];\n\n    submodelItem.children.push({ file: 'txt', title: \"idShort: \" + result[resultIndex].idShort });\n    submodelItem.children.push({ file: 'txt', title: \"id: \" + result[resultIndex].id });\n    if (typeof result[resultIndex].semanticId != \"undefined\") {\n      if (result[resultIndex].semanticId.keys.length > 0) {\n        submodelItem.children.push({ file: 'txt', title: \"Semantic Id: \" + result[resultIndex].semanticId.keys[0].value });\n      }\n    }\n\n    let submodelElementsItem = { title: \"SubmodelElements\", children: [] };\n    submodelItem.children.push(submodelElementsItem);\n\n    let submodelElements = result[resultIndex].submodelElements;\n\n    msg.collections.push(submodelElements);\n    extractData(submodelElements, submodelElementsItem.children);\n    submodelsItem.children.push(submodelItem);\n  }\n\n  item.children.push(submodelsItem);\n  items.push(item);\n}\n\nmsg.items = items;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 320,
        "wires": [
            [
                "ed42be486175d894"
            ]
        ]
    },
    {
        "id": "37161daf874e524a",
        "type": "ui-template",
        "z": "32c5a22a534a4588",
        "group": "7db4e47f1c3bd6b8",
        "page": "",
        "ui": "",
        "name": "Logo",
        "order": 1,
        "width": "6",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-card size=\"x-large\" style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:500px;\">\n    <div style=\"display: flex; justify-content: center; align-items: center; padding: 1%\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" :width=\"500\" viewBox=\"0 0 3248 1077\" \n      style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\">\n        <path class=\"fil0\"\n          d=\"M1611 533l-128 321 -107 -271 0 0c-83,-188 -270,-319 -488,-319 -130,0 -248,46 -340,123l97 97c67,-53 151,-84 243,-84 163,0 304,100 364,242l0 -1 177 419 109 0 222 -527 -149 0zm-1611 527l0 -527 137 0 252 322 0 -322 137 0 0 527 -137 0 -252 -322 0 322 -137 0zm2917 -158c30,28 74,54 121,54 28,0 45,-9 54,-18 7,-8 13,-20 13,-34 0,-10 -4,-22 -15,-31 -14,-12 -34,-18 -68,-28l-36 -11c-22,-7 -54,-19 -76,-43 -27,-29 -30,-66 -30,-93 0,-65 25,-105 48,-128 27,-27 72,-50 136,-50 52,0 113,17 163,43l-55 107c-41,-32 -72,-36 -90,-36 -13,0 -32,4 -45,16 -8,8 -14,17 -14,29 0,9 2,16 8,23 4,5 13,15 45,24l42 13c34,10 69,22 96,52 27,29 34,58 34,94 0,49 -12,95 -50,133 -45,45 -99,54 -156,54 -33,0 -64,-3 -103,-17 -9,-3 -42,-16 -80,-42l58 -111zm-482 158l-144 0 202 -527 150 0 198 527 -146 0 -128 -364 -132 364zm-564 0l-145 0 203 -527 149 0 199 527 -146 0 -129 -364 -131 364z\" />\n        <path class=\"fil1\"\n          d=\"M1208 330l123 -91c0,-2 0,-3 0,-4 2,-24 24,-42 48,-40 24,2 42,23 40,48 -2,24 -24,42 -48,40 -3,-1 -5,-1 -8,-2l-111 83c-14,-12 -29,-23 -44,-34zm338 69c-2,25 -23,42 -48,40l-101 111c-8,-16 -17,-33 -27,-49l89 -97c-1,-4 -1,-8 -1,-12 2,-25 24,-42 48,-40 24,2 42,23 40,47zm-658 544c-81,0 -147,-66 -147,-147 0,-81 66,-146 147,-146 81,0 146,65 146,146 0,81 -65,147 -146,147zm147 -486l-88 64c-1,0 -2,0 -3,1 -18,-4 -37,-6 -56,-6 -155,0 -281,125 -281,280 0,155 126,281 281,281 152,0 275,-121 280,-271l39 -44 42 -46c-26,-117 -107,-213 -214,-259zm726 -389c-28,-34 -68,-55 -111,-61 8,12 12,27 10,43 0,5 -1,9 -2,13 24,6 46,20 62,39 21,25 31,56 28,88 -4,39 -26,72 -57,92 -6,-5 -13,-8 -21,-8 -25,-3 -46,15 -48,40 -2,24 16,45 40,47 20,2 37,-9 44,-27 52,-26 89,-77 95,-139 4,-46 -10,-91 -40,-127zm-165 243c1,-5 2,-10 3,-14 -57,-14 -97,-68 -92,-128 3,-32 18,-62 43,-82 4,-4 8,-7 13,-9 6,5 15,9 24,10 24,2 46,-16 48,-40 2,-24 -16,-46 -40,-48 -18,-1 -34,8 -42,23 -13,6 -26,14 -37,23 -36,30 -57,72 -62,118 -8,93 59,176 151,188 -7,-12 -10,-26 -9,-41zm1005 -17c-2,16 -15,27 -31,28 -1,0 -1,0 -2,0 -1,0 -2,0 -4,0 -17,-2 -30,-18 -28,-36 2,-18 19,-31 37,-29 0,0 0,0 0,0l0 0c18,3 30,19 28,37zm53 -4c0,-43 -32,-79 -75,-85 -1,0 -3,0 -4,0l0 0 -679 -143c-6,-14 -19,-24 -34,-26 -24,-3 -46,14 -50,38 -3,25 15,47 39,50 12,1 24,-3 33,-10l614 129c-7,10 -12,23 -14,36 0,4 0,7 0,11l0 0 0 24 -602 -53c-7,-10 -18,-18 -32,-20 -24,-3 -46,14 -49,39 -3,24 14,46 38,49 15,2 29,-4 39,-15l606 53 0 135 52 0 0 -130 18 1c1,1 2,1 4,1 15,2 30,0 43,-6l0 134 53 0 0 -212 0 0zm-1723 510c-2,25 -23,42 -47,40 -24,-2 -42,-23 -40,-47 2,-25 23,-43 48,-40 24,2 42,23 39,47z\" />\n        </svg>\n    </div>\n  </v-card>\n</template>\n<style>\n  .fil0 {\n    fill: #3456A1\n  }\n  .fil1 {\n    fill: #000000\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3170,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "04224d89ef5769ec",
        "type": "ui-control",
        "z": "32c5a22a534a4588",
        "name": "",
        "ui": "3bda63ad6c6ff8b7",
        "events": "all",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "831ee0f8f251430a"
            ]
        ]
    },
    {
        "id": "e5d4033d04cf7ae4",
        "type": "ui-control",
        "z": "32c5a22a534a4588",
        "name": "",
        "ui": "3bda63ad6c6ff8b7",
        "events": "all",
        "x": 1860,
        "y": 1660,
        "wires": [
            [
                "c513ce07e3f152e4"
            ]
        ]
    },
    {
        "id": "88dc82a68cbdd7be",
        "type": "ui-control",
        "z": "32c5a22a534a4588",
        "name": "",
        "ui": "3bda63ad6c6ff8b7",
        "events": "all",
        "x": 1260,
        "y": 840,
        "wires": [
            [
                "fb878cab036af4a2",
                "593e3e444f4b3faf"
            ]
        ]
    },
    {
        "id": "8c909b4f998939c7",
        "type": "function",
        "z": "32c5a22a534a4588",
        "name": "",
        "func": "let newPayload = [];\nnewPayload[0] = \"\";\nnewPayload[1] = msg.payload;\nmsg.payload = newPayload;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 780,
        "wires": [
            [
                "2857c72c4a0986ca",
                "7447aa341630a9fc"
            ]
        ]
    },
    {
        "id": "7447aa341630a9fc",
        "type": "debug",
        "z": "32c5a22a534a4588",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2490,
        "y": 820,
        "wires": []
    },
    {
        "id": "f08e4446f8c56866",
        "type": "ui_ui_control",
        "z": "18bd4aa6085b5dfb",
        "g": "4605d2490d19792b",
        "name": "",
        "events": "change",
        "x": 2560,
        "y": 3340,
        "wires": [
            [
                "f7d6c4e38a7a526e"
            ]
        ]
    },
    {
        "id": "6f250ee46b7f0b81",
        "type": "http request",
        "z": "18bd4aa6085b5dfb",
        "g": "4605d2490d19792b",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3020,
        "y": 3340,
        "wires": [
            [
                "cb61f502cf6fb808",
                "26cbfabbe9a045b6"
            ]
        ]
    },
    {
        "id": "f7d6c4e38a7a526e",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "g": "4605d2490d19792b",
        "name": "",
        "func": "\nmsg.method = 'GET';\nmsg.url = context.global.get('namespace') + \"/aasServer/subscriptions\";\n///aasServer/shells/connections\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2810,
        "y": 3340,
        "wires": [
            [
                "6f250ee46b7f0b81"
            ]
        ]
    },
    {
        "id": "3c50ead74acf09c2",
        "type": "inject",
        "z": "18bd4aa6085b5dfb",
        "g": "4605d2490d19792b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2570,
        "y": 3540,
        "wires": [
            [
                "f7d6c4e38a7a526e"
            ]
        ]
    },
    {
        "id": "cb61f502cf6fb808",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "g": "4605d2490d19792b",
        "name": "connectionsNr",
        "func": "var outMsg = {};\noutMsg.payload = {};\noutMsg.payload.data = msg.payload.length;\noutMsg.payload.link = \"activeSubscriptions\";\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3260,
        "y": 3380,
        "wires": [
            [
                "df0cdbd01b79aa7f"
            ]
        ]
    },
    {
        "id": "26cbfabbe9a045b6",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "g": "4605d2490d19792b",
        "name": "subscriptions",
        "func": "var outMsg = {};\noutMsg.payload = msg.payload\ncontext.flow.set(\"subscriptions\", msg.payload);\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3270,
        "y": 3340,
        "wires": [
            [
                "4cd113be9d61442d"
            ]
        ]
    },
    {
        "id": "65ee94df308621b9",
        "type": "sqlite",
        "z": "18bd4aa6085b5dfb",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "select * FROM aasLogs",
        "name": "",
        "x": 2520,
        "y": 1580,
        "wires": [
            [
                "2b0d67c046cff436",
                "a1fc59e26fdf7835"
            ]
        ]
    },
    {
        "id": "9574324108e3ec9b",
        "type": "sqlite",
        "z": "18bd4aa6085b5dfb",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "delete FROM accountLogs",
        "name": "",
        "x": 2520,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "cf3ab06fb161c8b7",
        "type": "sqlite",
        "z": "18bd4aa6085b5dfb",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "delete FROM aasLogs",
        "name": "",
        "x": 2520,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "b03e8b459d332afe",
        "type": "sqlite",
        "z": "18bd4aa6085b5dfb",
        "mydb": "50760f2b4eafd99b",
        "sqlquery": "fixed",
        "sql": "select * FROM accountLogs",
        "name": "",
        "x": 2520,
        "y": 1660,
        "wires": [
            [
                "6393cbf99df519dd",
                "8e7646f0d4988aa3"
            ]
        ]
    },
    {
        "id": "afbb50bbfa477ea5",
        "type": "pdfmake",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "outputType": "base64",
        "inputProperty": "payload",
        "options": "{}",
        "outputProperty": "payload",
        "x": 1160,
        "y": 3280,
        "wires": [
            [
                "26947bec9feb4873"
            ]
        ]
    },
    {
        "id": "26947bec9feb4873",
        "type": "file",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "filename": "/app/report.pdf",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "base64",
        "x": 1320,
        "y": 3280,
        "wires": [
            [
                "f4a284a45f8b545d"
            ]
        ]
    },
    {
        "id": "0ea7e507ac2a29ec",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "ReportObject",
        "func": "var outMsg = {};\noutMsg.payload = {};\nvar header = msg.payload;\noutMsg.payload.header = header;\nvar report = {};\nreport.AASIdentifier = context.global.get(\"AASIdentifier\");\nreport.status = context.global.get(\"NOVAAS_Overall_Status\");\nreport.statsSBI = context.global.get(\"statsSBI\");\nreport.statusCheckSBI = context.global.get(\"statusCheckSBI\");\nreport.logs = context.flow.get(\"logs\");\nreport.logo = context.flow.get(\"logoBase64\");\nreport.accountlog = context.flow.get(\"accountlog\");\noutMsg.payload.report = report;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 3280,
        "wires": [
            [
                "b53d454036592ab2"
            ]
        ]
    },
    {
        "id": "e201bc83275a7f83",
        "type": "ui_ui_control",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "events": "all",
        "x": 190,
        "y": 3280,
        "wires": [
            [
                "d0f985539daab1ec",
                "05a5ac2b39ce8a5a",
                "42388341f522e6be"
            ]
        ]
    },
    {
        "id": "d0f985539daab1ec",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "PreFilling",
        "func": "msg.payload = {};\nmsg.payload.date = new Date();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "f4a284a45f8b545d",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "download Group",
        "func": "var msg = {};\n\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    show : [\"Reporting_ReportDownload\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 3280,
        "wires": [
            [
                "07a0f665d5cbfd1c"
            ]
        ]
    },
    {
        "id": "07a0f665d5cbfd1c",
        "type": "ui_ui_control",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "show download",
        "x": 1720,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "05a5ac2b39ce8a5a",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "download group",
        "func": "\n//msg.payload = {tab: \"Login\"};\n/*msg.payload = { group: {\n    hide : [\"Login_SensorData\", \"Login_History\"],\n    show : [\"Login_Signin\"]\n}\n};*/\n\nmsg.payload = { group: {\n    hide : [\"Reporting_ReportDownload\"],\n    show: [\"Reporting_form\"]\n}\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 3240,
        "wires": [
            [
                "3f42e65d234a0cfc",
                "8ad2137af24a7e1e"
            ]
        ]
    },
    {
        "id": "3f42e65d234a0cfc",
        "type": "ui_ui_control",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "hide download",
        "x": 610,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "1362624f9f0287b5",
        "type": "comment",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "Reporting Section",
        "info": "",
        "x": 240,
        "y": 3040,
        "wires": []
    },
    {
        "id": "42388341f522e6be",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 3120,
        "wires": []
    },
    {
        "id": "b53d454036592ab2",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "func": "var tableBuilder = function (data, columns) {\n    var body = [];\n\n    body.push(columns);\n\n    data.forEach(function(row) {\n        var dataRow = [];\n\n        columns.forEach(function(column) {\n            dataRow.push(row[column].toString());\n        })\n\n        body.push(dataRow);\n    });\n\n    return body;\n}\n\nvar checkValue = function(value){\n    if(value.link){\n        return value.link;\n    } else if(value.value){\n        return value.value;\n    }\n}\n\nvar convertTime = function(value){\n    var time = new Date(value.time);\n    return time;\n}\n\nvar outMsg = {};\n\nvar accountLogTable = [];\nfor (var elementAccountLog in msg.payload.report.accountlog){\n    accountLogTable.push(\n        {\n            \"accessAt\": msg.payload.report.accountlog[elementAccountLog].accessAt,\n            \"username\": msg.payload.report.accountlog[elementAccountLog].username\n        }\n        );\n}\n\nvar logsTable = [];\nfor (var elementLogs in msg.payload.report.logs){\n    logsTable.push(\n        {\n            \"observableReference\": msg.payload.report.logs[elementLogs].observableReference,\n            \"_msgid\": msg.payload.report.logs[elementLogs]._msgid,\n            \"time\": convertTime(msg.payload.report.logs[elementLogs]),\n            \"value\": checkValue(msg.payload.report.logs[elementLogs])\n        }\n        );\n}\n\nvar dd = {\n     \"header\": function(currentPage, pageCount, pageSize) {\n         if(msg.payload.report.logo){\n            return [\n                { \"image\": \"data:image/png;base64,\" + msg.payload.report.logo, \"height\": 30, \"width\": 30 }\n            ]\n        } else return;\n    },\n    \"footer\": function(currentPage, pageCount, pageSize) {\n        if(msg.payload.report.logo){\n            return [\n                { \"image\": \"data:image/png;base64,\" + msg.payload.report.logo, \"height\": 30, \"width\": 30 }\n            ]\n        } else return;\n    },    \n    \"content\": [\n\t\t{ \"text\": \"NOVAsset Administration Shell Report\", \"style\": \"header\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t\t\"widths\": [\"*\", \"*\"],\n\t\t\t\t\"body\": [\n\t\t\t\t\t[\"Created by \", msg.payload.header.user],\n\t\t\t\t\t[\"Created at \", msg.payload.header.date],\n\t\t\t\t\t[\"Notes \", msg.payload.header.notes]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"NOVAAS Overview\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": [\"*\", \"*\"],\n\t\t\t\t\"body\": [\n\t\t\t\t\t[\"NOVAAS Identifier\", msg.payload.report.AASIdentifier],\n\t\t\t\t\t[\"Status\", msg.payload.report.status]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t\t\"widths\": [\"*\", \"*\"],\n\t\t\t\t\"headerRows\": 1,\n\t\t\t\t\"body\": [\n\t\t\t\t\t[{ \"text\": \"Southbound Interface Statistics\", \"style\": \"tableHeader\", \"colSpan\": 2, \"alignment\": \"center\" }, {}],\n\t\t\t\t\t[\"Connector Status\", msg.payload.report.statusCheckSBI.connected],\n\t\t\t\t\t[\"Total number of Datasources\", msg.payload.report.statusCheckSBI.nrOfDataSources],\n\t\t\t\t\t[\"Inbound Messages\", msg.payload.report.statsSBI.msgSpeed],\n\t\t\t\t\t[\"Inbound  Interval and Frequency\", msg.payload.report.statsSBI.IntervalAndFrequency],\n\t\t\t\t\t[\"Inbound Messages Max\", msg.payload.report.statsSBI.maxMsgs]\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"Account Logs\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": [\"*\", \"*\"],\n\t\t\t    \"headerRows\": 1,\n\t\t\t\t\"body\":\ttableBuilder(accountLogTable, ['accessAt', 'username'])\n\t\t\t}\n\t\t},\n\t\t{ \"text\": \"Logs\", \"style\": \"subheader\" },\n\t\t{\n\t\t\t\"style\": \"tableExample\",\n\t\t\t\"table\": {\n\t\t\t    \"widths\": ['auto', 'auto', 'auto', 'auto'],\n\t\t\t    \"headerRows\": 1,\n\t\t\t\t\"body\":\ttableBuilder(logsTable, ['observableReference', '_msgid', 'time', 'value'])\n\t\t\t}\n\t\t}\n\t],\n\t\"styles\": {\n\t\t\"header\": {\n\t\t\t\"fontSize\": 18,\n\t\t\t\"bold\": true,\n\t\t\t\"margin\": [0, 0, 0, 10]\n\t\t},\n\t\t\"subheader\": {\n\t\t\t\"fontSize\": 16,\n\t\t\t\"bold\": true,\n\t\t\t\"margin\": [0, 10, 0, 5]\n\t\t},\n\t\t\"tableExample\": {\n\t\t\t\"margin\": [0, 5, 0, 15]\n\t\t},\n\t\t\"tableOpacityExample\": {\n\t\t\t\"margin\": [0, 5, 0, 15],\n\t\t\t\"fillColor\": \"blue\",\n\t\t\t\"fillOpacity\": 0.3\n\t\t},\n\t\t\"tableHeader\": {\n\t\t\t\"bold\": true,\n\t\t\t\"fontSize\": 13,\n\t\t\t\"color\": \"black\"\n\t\t}\n\t}\n}\noutMsg.payload = dd;\nreturn outMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 3280,
        "wires": [
            [
                "afbb50bbfa477ea5",
                "7f43f894aae0c3aa"
            ]
        ]
    },
    {
        "id": "7f43f894aae0c3aa",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 3220,
        "wires": []
    },
    {
        "id": "d6516c8a88ca26ab",
        "type": "inject",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 3440,
        "wires": [
            [
                "1429117d262c229e"
            ]
        ]
    },
    {
        "id": "1429117d262c229e",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "PrepareOutput",
        "func": "msg.payload = \".node-red/images/ -name\" + \" \" + \"logo.png\";\n//msg.payload = \"aasx/4830902_DPDM-6-15-PA---_0_.pdf\";\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 3440,
        "wires": [
            [
                "69f55957cb39762a"
            ]
        ]
    },
    {
        "id": "69f55957cb39762a",
        "type": "exec",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "command": "find",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 580,
        "y": 3440,
        "wires": [
            [
                "e675d8b7853af697",
                "9c21948cf137a230"
            ],
            [],
            []
        ]
    },
    {
        "id": "e675d8b7853af697",
        "type": "change",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 3440,
        "wires": [
            [
                "917ef21e14c2db51"
            ]
        ]
    },
    {
        "id": "917ef21e14c2db51",
        "type": "file in",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 940,
        "y": 3440,
        "wires": [
            [
                "0e49cdeaa36cefc5"
            ]
        ]
    },
    {
        "id": "0e49cdeaa36cefc5",
        "type": "base64",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 1130,
        "y": 3440,
        "wires": [
            [
                "90e2f73a3b9c7b84"
            ]
        ]
    },
    {
        "id": "90e2f73a3b9c7b84",
        "type": "change",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "logoBase64",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 3440,
        "wires": [
            []
        ]
    },
    {
        "id": "8ad2137af24a7e1e",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 3140,
        "wires": []
    },
    {
        "id": "9c21948cf137a230",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 3400,
        "wires": []
    },
    {
        "id": "df0cdbd01b79aa7f",
        "type": "link call",
        "z": "18bd4aa6085b5dfb",
        "g": "4605d2490d19792b",
        "name": "",
        "links": [
            "8cb87649afd62fd8"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 3480,
        "y": 3460,
        "wires": [
            []
        ]
    },
    {
        "id": "0cc48333028ceaa8",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "name": "parameterizedHttpRequest",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\n\nmsg1.method = 'GET';\nmsg1.url = context.global.get('namespace') + \"/aasServer/env\";\n\n//msg2.descriptionId = \"b5595a4a-40a5-46e6-a9c6-f493f99a72a1\"; \n\n//msg3.method = 'GET';\n//msg3.url = context.global.get('namespace') + \"/aasServer/submodels\";\n\nreturn [msg1, msg2, msg];",
        "outputs": 3,
        "noerr": 0,
        "x": 880,
        "y": 280,
        "wires": [
            [
                "eb7dc5e8732ce66e"
            ],
            [
                "9b94cdb7a6875c04"
            ],
            [
                "30defd3a907bb068"
            ]
        ]
    },
    {
        "id": "47296bfe866288e6",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "name": "flowVariables",
        "func": "context.flow.set('logs', []);\n\nvar fs = context.global.get('fs');\nvar path = context.global.get('path');\ncontext.flow.set('accounts', []);\ncontext.flow.set('accountlog', []);\n\nvar fileName = \"httpauthfile.txt\";\nvar basePath = context.global.get('staticDocs');\nvar filePath = path.join(basePath, \"httpauth\", fileName);\n\nfs.readFile(filePath, \"utf8\", function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    let content = data;\n    var contentArray = content.split(\"\\n\");\n    //var account = {username: contentArray[0], password: contentArray[2]};\n    var accounts = context.flow.get('accounts');\n    for(var account in contentArray){\n        accounts.push(contentArray[account]);    \n    }\n    \n    // Invoke the next step here however you like\n    //console.log(content);   // Put all of the code here (not the best solution)\n    exit();          // Or put the next step in a function and invoke it\n    \n    });\n    \nfunction exit() {\n    //msg.payload = content;\n    node.send(msg);\n    \n}\n    \n    //return msg;\n    //context.flow.set('Body', \\\"\\\");\n",
        "outputs": 1,
        "noerr": 0,
        "x": 527.0001220703125,
        "y": 193.3333511352539,
        "wires": [
            [
                "0cc48333028ceaa8",
                "007fb841bd4ae44b"
            ]
        ]
    },
    {
        "id": "eb7dc5e8732ce66e",
        "type": "http request",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1180.0000915527344,
        "y": 261.66668701171875,
        "wires": [
            [
                "06d883fe4e8249ec",
                "a3f633a8e1b93779"
            ]
        ]
    },
    {
        "id": "5192e5fc25d6c82f",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "name": "detectBrowserReload",
        "func": "var payload = msg.payload;\nif(payload === \"connect\"){\n    return msg;\n}\n\nreturn null;\n//context.flow.set('Body', \"\");",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 280,
        "wires": [
            [
                "0cc48333028ceaa8"
            ]
        ]
    },
    {
        "id": "1a092f686d4316f1",
        "type": "inject",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 320,
        "y": 200,
        "wires": [
            [
                "47296bfe866288e6"
            ]
        ]
    },
    {
        "id": "007fb841bd4ae44b",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 200,
        "wires": []
    },
    {
        "id": "06d883fe4e8249ec",
        "type": "join",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1790,
        "y": 260,
        "wires": [
            [
                "db36b3bee04968b5"
            ]
        ]
    },
    {
        "id": "eb77038db392a5f1",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1370,
        "y": 300,
        "wires": []
    },
    {
        "id": "7399a0748e472cdb",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "name": "SubmodelsProcessing",
        "func": "var msg1 = {};\nvar payload = {};\n//var splitted = msg.payload[0].value[0].value.split(\" \");\n//var splitted = msg.payload.value[0].value.split(\" \");\n//var splitted = msg.payload[0].value.split(\" \");\npayload.type = msg.payload.type;\npayload.hostname = msg.payload.hostname;;\npayload.release = msg.payload.release;;\npayload.platform = msg.payload.platform;\npayload.arch =msg.payload.arch;\npayload.namespace = context.global.get('namespace');\nmsg1.payload = payload;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 1580,
        "y": 360,
        "wires": [
            [
                "06d883fe4e8249ec"
            ]
        ]
    },
    {
        "id": "db36b3bee04968b5",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "name": "SubmodelsProcessing",
        "func": "//Retreiving Libraries from the Settings.json file\nvar outMsg = {};\nvar payload = [];\noutMsg.identifier = context.global.get(\"AASIdentifier\");\noutMsg.payload = payload;\nfor(var element = 0; element < msg.payload.length; element++){\n    if(typeof(msg.payload[element].assetAdministrationShells) !== 'undefined' && msg.payload[element] !== null){\n         outMsg.payload[1] = msg.payload[element];\n    } else {\n        outMsg.payload[0] = msg.payload[element];\n    }\n}\n\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1960,
        "y": 260,
        "wires": [
            [
                "d5f135e87cbbeb22"
            ]
        ]
    },
    {
        "id": "d5f135e87cbbeb22",
        "type": "msg-router",
        "z": "18bd4aa6085b5dfb",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 7,
        "x": 2350,
        "y": 280,
        "wires": [
            [],
            [
                "f05de6b0ffa06c81"
            ],
            [
                "b8059cebbe96501f"
            ],
            [
                "737aeb26d19e9f10"
            ],
            [
                "03d6c2f4b83ff612"
            ],
            [
                "a4fe0c88137459fa"
            ],
            []
        ]
    },
    {
        "id": "9edf3c91357ca79b",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "name": "retrievingSubmodels",
        "func": "var outMsg = {};\nvar administrationShells = msg.payload[1].assetAdministrationShells;\nvar submodels = msg.payload[1].submodels;\nvar shells = [];\nfor(var shellIndex = 0; shellIndex < administrationShells.length; shellIndex++){\n    var element = {};\n    var shell = administrationShells[shellIndex];\n    element.shellIdShort = shell.idShort;\n    element.shellIdentifier = shell.identification.id;\n    element.submodels = [];\n    var shellSubmodels = shell.submodels;\n    for(var submodelIndex = 0; submodelIndex < submodels.length; submodelIndex++){\n        for(var shellSubmodelIndex = 0; shellSubmodelIndex < shellSubmodels.length; shellSubmodelIndex++){\n            if(submodels[submodelIndex].identification.id === shellSubmodels[shellSubmodelIndex].keys[0].value){\n                element.submodels.push(submodels[submodelIndex]);\n            }\n        }\n    }\n    shells.push(element);\n}\n//outMsg.payload = msg.payload[1].submodels;\noutMsg.payload = shells;\noutMsg.subscriptions = context.flow.get(\"subscriptions\") || [];\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2600,
        "y": 640,
        "wires": [
            [
                "abc3393feac0761b"
            ]
        ]
    },
    {
        "id": "a3f633a8e1b93779",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1370,
        "y": 223.3333282470703,
        "wires": []
    },
    {
        "id": "03d6c2f4b83ff612",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "name": "retrievingConceptDescriptions",
        "func": "var outMsg = {};\noutMsg.payload = msg.payload[1].conceptDescriptions;\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2630,
        "y": 560,
        "wires": [
            [
                "981b53cc38076880"
            ]
        ]
    },
    {
        "id": "dd10449ed2f83a93",
        "type": "link in",
        "z": "18bd4aa6085b5dfb",
        "name": "NOVAAS_InformChange_UI",
        "links": [
            "11e91e4d13917d49",
            "a19fe280a1be4f25",
            "adf27afba7c3b724",
            "ae28f53c34d8b949",
            "b2811a59a9c3a985",
            "1c271c02ad31924a"
        ],
        "x": 360,
        "y": 620,
        "wires": [
            []
        ],
        "l": true
    },
    {
        "id": "0f16eb3eeb96f58b",
        "type": "change",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrcode",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 280,
        "wires": [
            [
                "f2ef39f3dc0ff751",
                "024ff84d5b2d7993"
            ]
        ]
    },
    {
        "id": "391af7e5a64d6b33",
        "type": "qrcode-generator",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "qrtype": "text2qr",
        "text2qrText": "",
        "ssid": "",
        "hiddenssid": false,
        "wifitype": "",
        "phonenum": "",
        "smsphonenum": "",
        "smstext": "",
        "mailto": "",
        "mailsubject": "",
        "mailbody": "",
        "latitude": "",
        "longitude": "",
        "colorlight": "#ffffff",
        "colordark": "#000000",
        "printstatus": false,
        "x": 2770,
        "y": 280,
        "wires": [
            [
                "0f16eb3eeb96f58b"
            ]
        ]
    },
    {
        "id": "737aeb26d19e9f10",
        "type": "change",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrcodeinput",
                "pt": "msg",
                "to": "REPO_LOCATION",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 280,
        "wires": [
            [
                "391af7e5a64d6b33"
            ]
        ]
    },
    {
        "id": "6c6d7a5a77a6e1d8",
        "type": "inject",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1470,
        "y": 800,
        "wires": [
            [
                "9a34fcd1625b8f6d"
            ]
        ]
    },
    {
        "id": "abc3393feac0761b",
        "type": "msg-router",
        "z": "18bd4aa6085b5dfb",
        "routerType": "broadcast",
        "topicDependent": false,
        "counterReset": false,
        "msgKeyField": "payload",
        "undefinedHash": false,
        "outputsInfo": [
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            },
            {
                "active": true,
                "clone": false,
                "delay": "0",
                "weight": "0"
            }
        ],
        "name": "",
        "delaying": "unrelated",
        "msgControl": false,
        "outputs": 2,
        "x": 2970,
        "y": 640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "13335aa5ea56a57a",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "name": "parameterizedHttpRequest",
        "func": "var msg1 = {};\n\nmsg1.method = 'GET';\nmsg1.url = context.global.get('namespace') + \"/aasServer/env\";\n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 1940,
        "y": 800,
        "wires": [
            [
                "b99e2f5b95399af1"
            ]
        ]
    },
    {
        "id": "b99e2f5b95399af1",
        "type": "http request",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2170,
        "y": 800,
        "wires": [
            [
                "dec64b809b6b36b2"
            ]
        ]
    },
    {
        "id": "32620350201282ba",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 900,
        "wires": []
    },
    {
        "id": "9a34fcd1625b8f6d",
        "type": "gate",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "controlTopic": "control",
        "defaultState": "closed",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "default",
        "x": 1730,
        "y": 800,
        "wires": [
            [
                "13335aa5ea56a57a"
            ]
        ]
    },
    {
        "id": "0025edcd27710daa",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "func": "msg.topic = \"control\";\nif(msg.payload == \"change\" && msg.tab == 1){\n    msg.payload = \"open\";\n} else {\n    msg.payload = \"close\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 860,
        "wires": [
            [
                "9a34fcd1625b8f6d"
            ]
        ]
    },
    {
        "id": "287adf37efcc1e0a",
        "type": "unsafe-function",
        "z": "18bd4aa6085b5dfb",
        "name": "retrievingSubmodels",
        "func": "var outMsg = {};\nvar administrationShells = msg.payload[1].assetAdministrationShells;\nvar submodels = msg.payload[1].submodels;\nvar shells = [];\nfor(var shellIndex = 0; shellIndex < administrationShells.length; shellIndex++){\n    var element = {};\n    var shell = administrationShells[shellIndex];\n    element.shellIdShort = shell.idShort;\n    element.shellIdentifier = shell.identification.id;\n    element.submodels = [];\n    var shellSubmodels = shell.submodels;\n    for(var submodelIndex = 0; submodelIndex < submodels.length; submodelIndex++){\n        for(var shellSubmodelIndex = 0; shellSubmodelIndex < shellSubmodels.length; shellSubmodelIndex++){\n            if(submodels[submodelIndex].identification.id === shellSubmodels[shellSubmodelIndex].keys[0].value){\n                element.submodels.push(submodels[submodelIndex]);\n            }\n        }\n    }\n    shells.push(element);\n}\n//outMsg.payload = msg.payload[1].submodels;\noutMsg.payload = shells;\noutMsg.subscriptions = context.flow.get(\"subscriptions\") || [];\nreturn outMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2600,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "2122a8f7e1d745ed",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 3360,
        "wires": []
    },
    {
        "id": "723d1041ef5b1414",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "sendSuccessMessage",
        "func": "let reportMessage = \"Your message was sent with success!\"\n\nmsg.payload = reportMessage\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 3320,
        "wires": [
            [
                "a8cc49ea41146e8f"
            ]
        ]
    },
    {
        "id": "e34712be2e1070ef",
        "type": "inject",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2350,
        "y": 60,
        "wires": [
            [
                "0c703fd9da7813eb"
            ]
        ]
    },
    {
        "id": "0c703fd9da7813eb",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "func": "msg.image = context.global.get(\"ThumbnailFilePath\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2540,
        "y": 140,
        "wires": [
            [
                "c1dcf41d5933634c",
                "025b0127a6ef5105"
            ]
        ]
    },
    {
        "id": "b3d8633ca043f8e4",
        "type": "ui-form",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "name": "",
        "group": "2966738833ad551e",
        "label": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Date",
                "key": "date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Email",
                "key": "user",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "Notes",
                "key": "notes",
                "type": "multiline",
                "required": true,
                "rows": 6
            }
        ],
        "formValue": {
            "date": "",
            "user": "",
            "notes": ""
        },
        "payload": "",
        "submit": "Create Report",
        "cancel": "Cancel",
        "resetOnSubmit": true,
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "dropdownOptions": [],
        "x": 490,
        "y": 3340,
        "wires": [
            [
                "0ea7e507ac2a29ec",
                "723d1041ef5b1414",
                "2122a8f7e1d745ed"
            ]
        ]
    },
    {
        "id": "5652d50a3ce475ec",
        "type": "ui-button",
        "z": "18bd4aa6085b5dfb",
        "group": "c1ab4ef42346ea60",
        "name": "Clear Button",
        "label": "Clear All",
        "order": 3,
        "width": "12",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "background-color:#14524e;",
        "icon": "mdi-delete",
        "iconPosition": "left",
        "payload": "deb4bd776143f41c",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "red",
        "textColor": "",
        "iconColor": "",
        "x": 2100,
        "y": 1760,
        "wires": [
            [
                "9574324108e3ec9b",
                "cf3ab06fb161c8b7"
            ]
        ]
    },
    {
        "id": "18e644398dfa159c",
        "type": "ui-button",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "group": "c1ab4ef42346ea60",
        "name": "Refresh button",
        "label": "Refresh",
        "order": 2,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "mdi-refresh",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "green",
        "textColor": "",
        "iconColor": "",
        "x": 2100,
        "y": 1660,
        "wires": [
            [
                "65ee94df308621b9",
                "b03e8b459d332afe"
            ]
        ]
    },
    {
        "id": "a77fc367a6eb4126",
        "type": "ui-table",
        "z": "18bd4aa6085b5dfb",
        "g": "4605d2490d19792b",
        "group": "a59ec750238a9f6f",
        "name": "Actual Subscribed Elements",
        "label": "text",
        "order": 2,
        "width": 0,
        "height": 0,
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "selectionType": "none",
        "columns": [
            {
                "title": "Observable Reference",
                "key": "msg.payload.0",
                "width": ""
            }
        ],
        "mobileBreakpoint": "md",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 3830,
        "y": 3340,
        "wires": [
            []
        ]
    },
    {
        "id": "19089f61c3f7fdaf",
        "type": "ui-table",
        "z": "18bd4aa6085b5dfb",
        "group": "cd688828bcd815e2",
        "name": "conceptDescriptions",
        "label": "text",
        "order": 2,
        "width": "0",
        "height": "0",
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "lg",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 3220,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "a8cc49ea41146e8f",
        "type": "ui-notification",
        "z": "18bd4aa6085b5dfb",
        "d": true,
        "g": "31414d824b5c396c",
        "ui": "3bda63ad6c6ff8b7",
        "position": "center center",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "",
        "showCountdown": false,
        "outputs": 0,
        "allowDismiss": true,
        "dismissText": "Close",
        "raw": false,
        "className": "",
        "name": "",
        "x": 1170,
        "y": 3320,
        "wires": []
    },
    {
        "id": "c1dcf41d5933634c",
        "type": "ui-template",
        "z": "18bd4aa6085b5dfb",
        "group": "2d91686a2ba1852c",
        "page": "",
        "ui": "",
        "name": "asset",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n    <v-card append-icon=\"mdi-link-variant\" size=\"x-large\"\n        style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:500px;\">\n        <template v-slot:title>\n            <span class=\"font-weight-black\">Connected Asset</span>\n        </template>\n        <div  class=\"d-flex justify-space-around align-center\">\n            <v-img :aspect-ratio=\"2\" :width=\"imageWidth\" :src=\"image\"></v-img>\n        </div>\n    </v-card>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                imageWidth: 500 // Default width\n            };\n        },\n        watch: {\n            msg(newMsg) {\n                if (newMsg && newMsg.payload) {\n                    this.imageWidth = 600;\n                    this.image = newMsg.image;\n                }\n            }\n        }\n    }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2710,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "45fae4e94ce9b26a",
        "type": "ui-template",
        "z": "18bd4aa6085b5dfb",
        "group": "7db4e47f1c3bd6b8",
        "page": "",
        "ui": "",
        "name": "RunningPlatform/Overview",
        "order": 7,
        "width": "6",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-card append-icon=\"mdi-server\" size=\"x-large\" subtitle=\"\" style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:500px;\">\n    <template v-slot:title>\n      <span class=\"font-weight-black\">Running Platform</span>\n    </template>\n    <v-list>\n      <v-list-subheader></v-list-subheader>\n      <v-list-item v-for=\"(item, i) in items\" color=\"primary\">\n        <template v-slot:prepend>\n          <v-icon :icon=\"item.icon\" size=\"x-large\"></v-icon>\n        </template>\n        <v-list-item-title v-text=\"item.text\"></v-list-item-title>\n      </v-list-item>\n    </v-list>\n  </v-card>\n</template>\n<script>\n  export default {\n    data: () => ({\n        items: [\n          { text: 'Real-Time', icon: 'mdi-clock' },\n        { text: 'Audience', icon: 'mdi-account' },\n        { text: 'Conversions', icon: 'mdi-flag' },]\n\n    }),\n    watch: {\n      msg: function () {\n        this.items = this.msg.items;\n      }\n    }\n  }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2900,
        "y": 240,
        "wires": [
            [
                "0a7121d57cee12f5"
            ]
        ]
    },
    {
        "id": "9b94cdb7a6875c04",
        "type": "link call",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "links": [
            "85c75f263483de4b"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1270,
        "y": 360,
        "wires": [
            [
                "7399a0748e472cdb"
            ]
        ]
    },
    {
        "id": "a4fe0c88137459fa",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "name": "Generate Tree from AAS model V2",
        "func": "function extractData(submodelElements, items, rootName) {\n  function getRandomNumber() {\n    return Math.floor(Math.random() * 2001) + 10000;\n  }\n\n  for (let submodelElementIndex = 0; submodelElementIndex < submodelElements.length; submodelElementIndex++) {\n    let submodelElement = submodelElements[submodelElementIndex];\n\n    if (submodelElement.modelType.name !== \"SubmodelElementCollection\") {\n      let propertyItem = { title: \"SubmodelElement: [\" + submodelElementIndex + \"]\", children: [] };\n      if (rootName === \"value\")\n        propertyItem.title = \"Value: [\" + submodelElementIndex + \"]\";\n\n      propertyItem.children.push({ file: 'txt', title: \"category: \" + submodelElement.category });\n      propertyItem.children.push({ file: 'txt', title: \"idShort: \" + submodelElement.idShort });\n\n      // Check if valueType and dataObjectType are defined\n      if (submodelElement.valueType && submodelElement.valueType.dataObjectType) {\n        propertyItem.children.push({ file: 'txt', title: \"valueType: \" + submodelElement.valueType.dataObjectType.name });\n      } else {\n        propertyItem.children.push({ file: 'txt', title: \"valueType: undefined\" });\n      }\n\n      propertyItem.children.push({ file: 'txt', title: \"modelType: \" + submodelElement.modelType.name });\n      if (submodelElement.modelType == \"File\") {\n        propertyItem.children.push({ file: 'txt', to: submodelElement.value });\n      } else if (submodelElement.value) {\n        propertyItem.children.push({ file: 'txt', title: \"value: \" + submodelElement.value });\n      }\n      items.push(propertyItem);\n\n    } else {\n      let collectionItem = { title: \"SubmodelElement: [\" + submodelElementIndex + \"]\", children: [] };\n      if (rootName === \"value\")\n        collectionItem.title = \"Value: [\" + submodelElementIndex + \"]\";\n\n      collectionItem.children.push({ file: 'txt', title: \"category: \" + submodelElement.category });\n      collectionItem.children.push({ file: 'txt', title: \"id: \" + submodelElement.id });\n      collectionItem.children.push({ file: 'txt', title: \"idShort: \" + submodelElement.idShort });\n      collectionItem.children.push({ file: 'txt', title: \"modelType: \" + submodelElement.modelType.name });\n      items.push(collectionItem);\n      extractData(submodelElement.value, collectionItem.children, \"value\");\n    }\n  }\n\n  return;\n}\n\nfunction filterListByCondition(list1, list2) {\n  // Create a set of IDs from list2 for quick lookup\n  const idSet = new Set(list2.map(item => item.keys[0].value));\n\n  // Filter the elements of list1 based on the presence of the same id in list2\n  return list1.filter(item => idSet.has(item.identification.id));\n}\n\nmsg.properties = [];\nmsg.collections = [];\n\nlet items = [];\nlet item = { title: \"\", children: [] };\nlet children = { title: \"\" };\n\nlet manifest = msg.payload[1];\nlet aass = manifest.assetAdministrationShells;\n\n// Iterate over aas\nfor (let aasIndex = 0; aasIndex < aass.length; aasIndex++) {\n  let item = {};\n  item.title = \"Asset Administration Shell: [\" + aasIndex + \"]\";\n  item.children = [];\n\n  item.children.push({ file: 'txt', title: \"idShort: \" + aass[aasIndex].idShort });\n  item.children.push({ file: 'txt', title: \"id: \" + aass[aasIndex].identification.id });\n  item.children.push({ file: 'txt', title: \"assetInformation: \" + aass[aasIndex].asset.keys[0].value });\n\n  let submodelsItem = {};\n  submodelsItem.title = \"Submodels\";\n  submodelsItem.children = [];\n\n  // Iterate over submodels\n  let submodels = manifest.submodels;\n  let submodelReferences = aass[aasIndex].submodels;\n\n  // Iterate over references\n  let result = filterListByCondition(submodels, submodelReferences);\n  msg.result = result;\n\n  for (let resultIndex = 0; resultIndex < result.length; resultIndex++) {\n    let submodelItem = {};\n    submodelItem.title = \"Submodel: [\" + resultIndex + \"]\";\n    submodelItem.children = [];\n\n    submodelItem.children.push({ file: 'txt', title: \"idShort: \" + result[resultIndex].idShort });\n    submodelItem.children.push({ file: 'txt', title: \"id: \" + result[resultIndex].identification.id });\n\n    if (result[resultIndex].semanticId.keys.length > 0) {\n      submodelItem.children.push({ file: 'txt', title: \"Semantic Id: \" + result[resultIndex].semanticId.keys[0].value });\n    }\n\n    let submodelElementsItem = { title: \"SubmodelElements\", children: [] };\n    submodelItem.children.push(submodelElementsItem);\n\n    let submodelElements = result[resultIndex].submodelElements;\n\n    msg.collections.push(submodelElements);\n    extractData(submodelElements, submodelElementsItem.children);\n    submodelsItem.children.push(submodelItem);\n  }\n\n  item.children.push(submodelsItem);\n  items.push(item);\n}\n\nmsg.items = items;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 320,
        "wires": [
            [
                "a8229ed2063b4442"
            ]
        ]
    },
    {
        "id": "a8229ed2063b4442",
        "type": "ui-template",
        "z": "18bd4aa6085b5dfb",
        "group": "052f6d23fa4e527a",
        "page": "",
        "ui": "",
        "name": "treeview",
        "order": 2,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <v-card append-icon=\"mdi-file-tree\" subtitle=\"\" style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:200px;\">\n    <template v-slot:title>\n      <span class=\"font-weight-black\">AAS Environment</span>\n    </template>\n    <v-treeview :items=\"items\" item-key=\"name\" open-on-click>\n      <template v-slot:prepend=\"{ item, open }\">\n        <v-icon v-if=\"!item.file\">\n          {{ open ? 'mdi-folder-open' : 'mdi-folder' }}\n        </v-icon>\n        <v-icon v-else>\n          {{ files[item.file] }}\n          <!--<router-link :to=\"item.to\">{{ item.title }}</router-link>!-->\n        </v-icon>\n        <div style=\"margin-left: 15%\">\n          <router-link v-if=\"item.to && !item.to.includes('http')\" :to=\"item.to\" target=\"_blank\">{{item.to}}\n          </router-link>\n          <!-- Use <a> tag if item.to contains 'http' -->\n          <a v-else-if=\"item.to && (item.to.includes('http') || item.to.includes('https'))\" :href=\"item.to\" target=\"_blank\" rel=\"noopener noreferrer\">\n            {{ item.to }}\n          </a>\n        </div>\n        <!--<div><a v-if=\"item.to.includes('http')\" :href=\"item.to\">{{item.to}} </a></div>!-->\n      </template>\n    </v-treeview>\n  </v-card>\n</template>\n\n<script>\n  export default {\n    data: function () {\n      return {\n        files: {\n          txt: 'mdi-file-document-outline'\n        },\n        items: []\n      }\n    },\n    watch: {\n      msg: function () {\n        this.items = this.msg.items;\n      }\n    }\n  }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2940,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "981b53cc38076880",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "name": "prepareTable",
        "func": "var prepareData = [];\n\nif (Array.isArray(msg.payload)) {\n    for (var i = 0; i < msg.payload.length; i++) {\n        prepareData.push({\n            identification: msg.payload[i].identification.id,\n            idShort: msg.payload[i].idShort,\n            modelType: msg.payload[i].modelType.name,\n            embeddedDataSpecifications: (msg.payload[i].descriptions && msg.payload[i].descriptions[0]) ? msg.payload[i].descriptions[0].text : \"Unknown\",\n            descriptions: (msg.payload[i].embeddedDataSpecifications && msg.payload[i].embeddedDataSpecifications[0] && msg.payload[i].embeddedDataSpecifications[0].dataSpecificationContent) ? msg.payload[i].embeddedDataSpecifications[0].dataSpecificationContent.dataType : \"Unknown\"\n        });\n    }\n}\n\nmsg.payload = prepareData;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2970,
        "y": 560,
        "wires": [
            [
                "19089f61c3f7fdaf"
            ]
        ]
    },
    {
        "id": "4cd113be9d61442d",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "g": "4605d2490d19792b",
        "name": "getSubscribedElements",
        "func": "var outMsg = { \"payload\": [] };\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    outMsg.payload.push({ \"Observable Reference\": msg.payload[i], \"Status\": \"subscribed\" });\n}\n\nreturn outMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 3340,
        "wires": [
            [
                "a77fc367a6eb4126"
            ]
        ]
    },
    {
        "id": "572c1d91d210d4c3",
        "type": "ui-table",
        "z": "18bd4aa6085b5dfb",
        "group": "6a60dba680d2cf0e",
        "name": "Logs",
        "label": "text",
        "order": 4,
        "width": 0,
        "height": 0,
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 3310,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "17a5bbc639f2a71e",
        "type": "ui-table",
        "z": "18bd4aa6085b5dfb",
        "group": "b68f0194128bb725",
        "name": "Account Logs",
        "label": "text",
        "order": 4,
        "width": "12",
        "height": "1",
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 3350,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "2b0d67c046cff436",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "name": "prepareLogs",
        "func": "for (var i = 0; i < msg.payload.length; i++) {\n  var unixTimestamp = msg.payload[i].timestamp;\n  var myDate = new Date(unixTimestamp);\n\n  var seconds = myDate.getSeconds();\n  var minutes = myDate.getMinutes();\n  var hours = myDate.getHours() + 1;\n\n  var dayOfMonth = myDate.getDate();\n  var month = myDate.getMonth() + 1;\n  var years = myDate.getFullYear();\n\n  var formattedHours = (hours < 10 ? \"0\" : \"\") + hours;\n  var formattedMinutes = (minutes < 10 ? \"0\" : \"\") + minutes;\n  var formattedSeconds = (seconds < 10 ? \"0\" : \"\") + seconds;\n  var formattedDayOfMonth = (dayOfMonth < 10 ? \"0\" : \"\") + dayOfMonth;\n  var formattedMonth = (month < 10 ? \"0\" : \"\") + month;\n\n  msg.payload[i].timestamp = formattedHours + \":\" + formattedMinutes + \":\" + formattedSeconds + \" \" + formattedDayOfMonth + \"/\" + formattedMonth + \"/\" + years;\n\n}\n\ncontext.flow.set('logs', msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3020,
        "y": 1580,
        "wires": [
            [
                "572c1d91d210d4c3"
            ]
        ]
    },
    {
        "id": "6393cbf99df519dd",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "name": "prepareAccountLogs",
        "func": "for (var i = 0; i < msg.payload.length; i++) {\n  var unixTimestamp = msg.payload[i].accessAt;\n  var myDate = new Date(unixTimestamp);\n\n  var seconds = myDate.getSeconds();\n  var minutes = myDate.getMinutes();\n  var hours = myDate.getHours() + 1;\n\n  var dayOfMonth = myDate.getDate();\n  var month = myDate.getMonth() + 1; // add 1 to get month number (1-12)\n  var years = myDate.getFullYear();\n\n  var formattedHours = (hours < 10 ? \"0\" : \"\") + hours;\n  var formattedMinutes = (minutes < 10 ? \"0\" : \"\") + minutes;\n  var formattedSeconds = (seconds < 10 ? \"0\" : \"\") + seconds;\n  var formattedDayOfMonth = (dayOfMonth < 10 ? \"0\" : \"\") + dayOfMonth;\n  var formattedMonth = (month < 10 ? \"0\" : \"\") + month;\n\n  msg.payload[i].accessAt = formattedHours + \":\" + formattedMinutes + \":\" + formattedSeconds + \" \" + formattedDayOfMonth + \"/\" + formattedMonth + \"/\" + years;\n}\n\ncontext.flow.set('accountlog', msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3050,
        "y": 1660,
        "wires": [
            [
                "17a5bbc639f2a71e"
            ]
        ]
    },
    {
        "id": "aa140d4c5f7eac90",
        "type": "inject",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2110,
        "y": 1620,
        "wires": [
            [
                "65ee94df308621b9",
                "b03e8b459d332afe"
            ]
        ]
    },
    {
        "id": "18a7588d9da6fd74",
        "type": "file",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "filename": ".node-red/logs.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3030,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "a1fc59e26fdf7835",
        "type": "json",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2830,
        "y": 1540,
        "wires": [
            [
                "18a7588d9da6fd74"
            ]
        ]
    },
    {
        "id": "8e7646f0d4988aa3",
        "type": "json",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2830,
        "y": 1620,
        "wires": [
            [
                "31874ad669724509"
            ]
        ]
    },
    {
        "id": "31874ad669724509",
        "type": "file",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "filename": ".node-red/accountLogs.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3050,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "f2ef39f3dc0ff751",
        "type": "ui-template",
        "z": "18bd4aa6085b5dfb",
        "group": "7db4e47f1c3bd6b8",
        "page": "",
        "ui": "",
        "name": "counters 2.0",
        "order": 4,
        "width": "6",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-card append-icon=\"mdi-counter\" size=\"x-large\" style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:500px;\">\n    <template v-slot:title>\n      <span class=\"font-weight-black\">Counters</span>\n    </template>\n    <div class=\"text-left\">\n      <v-chip class=\"ma-2\" color=\"indigo\" prepend-icon=\"mdi-checkbox-marked-circle\" size=\"x-large\">\n        Asset Administration Shells: {{ msg.payload && msg.payload[1]\n        && msg.payload[1].assetAdministrationShells ?\n        msg.payload[1].assetAdministrationShells.length : 0 }}\n      </v-chip>\n\n      <v-chip prepend-icon=\"mdi-checkbox-marked-circle\" class=\"ma-2\" color=\"orange\" size=\"x-large\">\n        Asset: {{ msg.payload && msg.payload[1]\n        && msg.payload[1].assets ? msg.payload[1].assets.length : 0 }}\n      </v-chip>\n\n      <v-chip prepend-icon=\"mdi-checkbox-marked-circle\" class=\"ma-2\" color=\"primary\" size=\"x-large\">\n        Submodels: {{ msg.payload && msg.payload[1]\n        && msg.payload[1].submodels ? msg.payload[1].submodels.length : 0 }}\n      </v-chip>\n\n      <v-chip class=\"ma-2\" color=\"green\" prepend-icon=\"mdi-checkbox-marked-circle\" size=\"x-large\">\n        Submodel Elements: {{ msg.payload && msg.payload[1]\n        && msg.payload[1].submodels ?\n        msg.payload[1].submodels.reduce((sum, submodel) => sum + (submodel.submodelElements ?\n        submodel.submodelElements.length : 0), 0) : 0 }}\n      </v-chip>\n\n      <v-chip class=\"ma-2\" color=\"teal\" prepend-icon=\"mdi-checkbox-marked-circle\" size=\"x-large\">\n        Concept Descriptions: {{ msg.original && msg.original[1] && msg.original[1].conceptDescriptions ?\n        msg.original[1].conceptDescriptions.length : 0 }}</b></p>\n      </v-chip>\n    </div>\n\n  </v-card>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3190,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f05de6b0ffa06c81",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "name": "Generate Item from Message",
        "func": "let platformMsg = msg.payload[0];\nlet items = [];\n\nfor(let index in platformMsg){\n    let icon = \"\";\n    //msg.ey=index;\n    if(index == \"type\"){\n        icon = \"mdi-server\";\n    } else if (index == \"hostname\"){\n        icon = \"mdi-account\";\n    } else if (index == \"release\"){\n        icon = \"mdi-shape-plus\";\n    } else if (index == \"platform\"){\n        icon = \"mdi-package-variant-closed\";\n    } else if (index == \"arch\"){\n        icon = \"mdi-sitemap\";\n    } else if (index == \"namespace\"){\n        icon = \"mdi-alphabetical\";\n    }\n    let item = { \"text\": index + \": \" + platformMsg[index], \"icon\": icon };\n    items.push(item);\n}\nmsg.items = items;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 240,
        "wires": [
            [
                "45fae4e94ce9b26a",
                "843bba07c573e4ef"
            ]
        ]
    },
    {
        "id": "b8059cebbe96501f",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "name": "debug 381",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2580,
        "y": 420,
        "wires": []
    },
    {
        "id": "843bba07c573e4ef",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "name": "debug 383",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2850,
        "y": 200,
        "wires": []
    },
    {
        "id": "0a7121d57cee12f5",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "name": "debug 384",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3148.25,
        "y": 239.25,
        "wires": []
    },
    {
        "id": "1b879c23923f5cc6",
        "type": "ui-template",
        "z": "18bd4aa6085b5dfb",
        "group": "6a60dba680d2cf0e",
        "page": "",
        "ui": "",
        "name": "Download Logs",
        "order": 3,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"d-flex justify-end\">\n      <v-btn\n        class=\"ma-2\"\n        color=\"blue\"\n        icon=\"mdi-cloud-download\"\n        :href=\"fileUrl\"\n        download\n      ></v-btn>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      fileUrl: \"/logs.txt\", // Replace with the actual file path\n    };\n  },\n};\n</script>\n\n<style scoped>\n.custom-btn {\n  width: 60px; /* Adjust the width */\n  height: 60px; /* Adjust the height for a circle */\n  min-width: 60px; /* Set the minimum width */\n  max-width: 60px; /* Set the maximum width */\n  font-size: 2rem; /* Adjust icon size */\n  border-radius: 50%; /* Make the button circular */\n  display: flex; /* Ensure the icon is centered */\n  justify-content: center; /* Center icon horizontally */\n  align-items: center; /* Center icon vertically */\n}\n</style>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3020,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "89eb30af1ca84586",
        "type": "ui-template",
        "z": "18bd4aa6085b5dfb",
        "group": "b68f0194128bb725",
        "page": "",
        "ui": "",
        "name": "Download AccountLogs",
        "order": 3,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<template>\n  <div class=\"d-flex justify-end\">\n    <v-btn class=\"ma-2\" color=\"blue\" icon=\"mdi-cloud-download\" :href=\"fileUrl\" download></v-btn>\n  </div>\n</template>\n\n<script>\n  export default {\n  data() {\n    return {\n      fileUrl: \"/accountLogs.txt\", // Replace with the actual file path\n    };\n  },\n};\n</script>\n\n<style scoped>\n  .custom-btn {\n    width: 20%;\n    /* Restrict the button to 20% of the container width */\n    min-width: 120px;\n    /* Optional: Set a minimum width */\n    max-width: 200px;\n    font-size: 2rem;\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3030,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "7d28637a963d7530",
        "type": "ui-template",
        "z": "18bd4aa6085b5dfb",
        "group": "",
        "page": "",
        "ui": "3bda63ad6c6ff8b7",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": ".v-main {\n    background-image: url(/images/bright-squares.png);\n    background-repeat: repeat;\n}\n/* All .v-card's inside a group */\n.nrdb-ui-group .v-card {\n    border-width: 2px;\n}\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "site:style",
        "className": "",
        "x": 1490,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "024ff84d5b2d7993",
        "type": "ui-template",
        "z": "18bd4aa6085b5dfb",
        "group": "7db4e47f1c3bd6b8",
        "page": "",
        "ui": "",
        "name": "qrcode 2.0",
        "order": 5,
        "width": "6",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-card append-icon=\"mdi-counter\" size=\"x-large\" style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:500px;\">\n    <template v-slot:title>\n      <span class=\"font-weight-black\">QR code to code repo</span>\n    </template>\n    <div style=\"display: flex; justify-content: center; align-items: center; padding: 1%;\">\n      <v-img :width=\"300\" aspect-ratio=\"16/9\" cover :src=\"msg.qrcode\"></v-img>\n    </div>\n\n\n  </v-card>\n</template>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3190,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "025b0127a6ef5105",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "name": "debug 385",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2750,
        "y": 80,
        "wires": []
    },
    {
        "id": "0aaaba0751c39bd6",
        "type": "ui-template",
        "z": "18bd4aa6085b5dfb",
        "group": "7db4e47f1c3bd6b8",
        "page": "",
        "ui": "",
        "name": "Logo",
        "order": 2,
        "width": "6",
        "height": "1",
        "head": "",
        "format": "<template>\n  <v-card size=\"x-large\" style=\"padding: 1rem 1.25rem; margin-bottom: 3%; min-height:500px;\">\n    <div style=\"display: flex; justify-content: center; align-items: center; padding: 1%\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" :width=\"500\" viewBox=\"0 0 3248 1077\" \n      style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\">\n        <path class=\"fil0\"\n          d=\"M1611 533l-128 321 -107 -271 0 0c-83,-188 -270,-319 -488,-319 -130,0 -248,46 -340,123l97 97c67,-53 151,-84 243,-84 163,0 304,100 364,242l0 -1 177 419 109 0 222 -527 -149 0zm-1611 527l0 -527 137 0 252 322 0 -322 137 0 0 527 -137 0 -252 -322 0 322 -137 0zm2917 -158c30,28 74,54 121,54 28,0 45,-9 54,-18 7,-8 13,-20 13,-34 0,-10 -4,-22 -15,-31 -14,-12 -34,-18 -68,-28l-36 -11c-22,-7 -54,-19 -76,-43 -27,-29 -30,-66 -30,-93 0,-65 25,-105 48,-128 27,-27 72,-50 136,-50 52,0 113,17 163,43l-55 107c-41,-32 -72,-36 -90,-36 -13,0 -32,4 -45,16 -8,8 -14,17 -14,29 0,9 2,16 8,23 4,5 13,15 45,24l42 13c34,10 69,22 96,52 27,29 34,58 34,94 0,49 -12,95 -50,133 -45,45 -99,54 -156,54 -33,0 -64,-3 -103,-17 -9,-3 -42,-16 -80,-42l58 -111zm-482 158l-144 0 202 -527 150 0 198 527 -146 0 -128 -364 -132 364zm-564 0l-145 0 203 -527 149 0 199 527 -146 0 -129 -364 -131 364z\" />\n        <path class=\"fil1\"\n          d=\"M1208 330l123 -91c0,-2 0,-3 0,-4 2,-24 24,-42 48,-40 24,2 42,23 40,48 -2,24 -24,42 -48,40 -3,-1 -5,-1 -8,-2l-111 83c-14,-12 -29,-23 -44,-34zm338 69c-2,25 -23,42 -48,40l-101 111c-8,-16 -17,-33 -27,-49l89 -97c-1,-4 -1,-8 -1,-12 2,-25 24,-42 48,-40 24,2 42,23 40,47zm-658 544c-81,0 -147,-66 -147,-147 0,-81 66,-146 147,-146 81,0 146,65 146,146 0,81 -65,147 -146,147zm147 -486l-88 64c-1,0 -2,0 -3,1 -18,-4 -37,-6 -56,-6 -155,0 -281,125 -281,280 0,155 126,281 281,281 152,0 275,-121 280,-271l39 -44 42 -46c-26,-117 -107,-213 -214,-259zm726 -389c-28,-34 -68,-55 -111,-61 8,12 12,27 10,43 0,5 -1,9 -2,13 24,6 46,20 62,39 21,25 31,56 28,88 -4,39 -26,72 -57,92 -6,-5 -13,-8 -21,-8 -25,-3 -46,15 -48,40 -2,24 16,45 40,47 20,2 37,-9 44,-27 52,-26 89,-77 95,-139 4,-46 -10,-91 -40,-127zm-165 243c1,-5 2,-10 3,-14 -57,-14 -97,-68 -92,-128 3,-32 18,-62 43,-82 4,-4 8,-7 13,-9 6,5 15,9 24,10 24,2 46,-16 48,-40 2,-24 -16,-46 -40,-48 -18,-1 -34,8 -42,23 -13,6 -26,14 -37,23 -36,30 -57,72 -62,118 -8,93 59,176 151,188 -7,-12 -10,-26 -9,-41zm1005 -17c-2,16 -15,27 -31,28 -1,0 -1,0 -2,0 -1,0 -2,0 -4,0 -17,-2 -30,-18 -28,-36 2,-18 19,-31 37,-29 0,0 0,0 0,0l0 0c18,3 30,19 28,37zm53 -4c0,-43 -32,-79 -75,-85 -1,0 -3,0 -4,0l0 0 -679 -143c-6,-14 -19,-24 -34,-26 -24,-3 -46,14 -50,38 -3,25 15,47 39,50 12,1 24,-3 33,-10l614 129c-7,10 -12,23 -14,36 0,4 0,7 0,11l0 0 0 24 -602 -53c-7,-10 -18,-18 -32,-20 -24,-3 -46,14 -49,39 -3,24 14,46 38,49 15,2 29,-4 39,-15l606 53 0 135 52 0 0 -130 18 1c1,1 2,1 4,1 15,2 30,0 43,-6l0 134 53 0 0 -212 0 0zm-1723 510c-2,25 -23,42 -47,40 -24,-2 -42,-23 -40,-47 2,-25 23,-43 48,-40 24,2 42,23 39,47z\" />\n        </svg>\n    </div>\n  </v-card>\n</template>\n<style>\n  .fil0 {\n    fill: #3456A1\n  }\n  .fil1 {\n    fill: #000000\n  }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 3170,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "4a3b2cfa9920ada0",
        "type": "ui-control",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "ui": "3bda63ad6c6ff8b7",
        "events": "all",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "5192e5fc25d6c82f"
            ]
        ]
    },
    {
        "id": "c8696f168d53cd33",
        "type": "ui-control",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "ui": "3bda63ad6c6ff8b7",
        "events": "all",
        "x": 1360,
        "y": 860,
        "wires": [
            [
                "0025edcd27710daa",
                "32620350201282ba"
            ]
        ]
    },
    {
        "id": "dec64b809b6b36b2",
        "type": "function",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "func": "let newPayload = [];\nnewPayload[0] = \"\";\nnewPayload[1] = msg.payload;\nmsg.payload = newPayload;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 800,
        "wires": [
            [
                "a4fe0c88137459fa"
            ]
        ]
    },
    {
        "id": "30defd3a907bb068",
        "type": "debug",
        "z": "18bd4aa6085b5dfb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1170,
        "y": 540,
        "wires": []
    }
]